{"version":3,"sources":["constants/AppConfig.js","utils/helpers.js","constants/index.js","utils/authUtils.js","api.js","store/error.js","actions/errorActions.js","store/flashMessage.js","actions/flashMessageActions.js","store/student.js","actions/studentActions.js","store/doctor.js","actions/doctorActions.js","containers/Reports/Filter/index.js","services/report.service.js","containers/Reports/index.js","containers/EnergyProfileReport/index.js","assets/images/not-found.svg","containers/NotFoundContainer/index.js","containers/CoachingContainer/index.js","containers/ProfitScanContainer/index.js","containers/Ortho/SubmitData/LaboratoryStep/index.js","containers/Ortho/SubmitData/CollectionsStep/index.js","containers/Ortho/SubmitData/DoctorSalaryStep/index.js","containers/Ortho/SubmitData/OccupanyAndHPStep/index.js","containers/Ortho/SubmitData/PatientActivityStep/index.js","components/DebounceSelect/index.js","containers/Ortho/SubmitData/DoctorProductionStep/index.js","containers/Ortho/SubmitData/StaffCompensationStep/index.js","containers/Ortho/SubmitData/SuppliesAndMarketingStep/index.js","containers/Ortho/SubmitData/AdministrativeServicesStep/index.js","containers/Ortho/SubmitData/SolvencySavingsROIFundsStep/index.js","actions/orthoActions.js","containers/Ortho/SubmitData/index.js","containers/RegistrationContainer/index.js","containers/Density/SubmitData/LaboratoryStep/index.js","containers/Density/SubmitData/CollectionsStep/index.js","containers/Density/SubmitData/OccupanyAndHPStep/index.js","containers/Density/SubmitData/PatientActivityStep/index.js","containers/Density/SubmitData/DoctorProductionStep/index.js","containers/Density/SubmitData/StaffCompensationStep/index.js","containers/Density/SubmitData/DoctorSalaryStep/index.js","store/hygienist.js","actions/hygienistActions.js","containers/Density/SubmitData/HygeinistProductionStep/index.js","containers/Density/SubmitData/SuppliesAndMarketingStep/index.js","containers/Density/SubmitData/AdministrativeServicesStep/index.js","containers/Density/SubmitData/SolvencySavingsROIFundsStep/index.js","actions/dentistryActions.js","containers/Density/SubmitData/index.js","store/profitPotential.js","containers/ProfitAndLossContainer/index.js","actions/profitPotentialAction.js","store/questionsSurvey.js","actions/questionsSurveyActions.js","store/studentSurvey.js","containers/EnergyConversion/BaseEnergy/index.js","actions/studentSurveyAction.js","containers/EnergyConversion/EnergyContainer/index.js","containers/EnergyProfileReport/DataResult/EPTableComponent/index.js","containers/EnergyProfileReport/DataResult/index.js","containers/EnergyProfileReport/DataAnalysis/ScoreTable/index.js","containers/EnergyProfileReport/DataAnalysis/LowestScores/index.js","containers/EnergyProfileReport/DataAnalysis/HighestScores/index.js","containers/EnergyProfileReport/DataAnalysis/index.js","containers/EnergyConversion/DirectionContainer/index.js","store/classRoom.js","store/classRoomScheduled.js","actions/classRoomScheduledActions.js","containers/ScheduleClasses/RegisterClassStep/ClassScheduled.js","store/classRoomCompleted.js","actions/classRoomCompletedActions.js","containers/ScheduleClasses/RegisterClassStep/ClassCompleted.js","containers/ScheduleClasses/RegisterClassStep/index.js","actions/classRoomActions.js","containers/ScheduleClasses/ConfirmStep/index.js","containers/Students/ScheduleContainer/index.js","containers/Students/SubmitDataContainer/index.js","store/product.js","actions/productActions.js","store/purchase.js","containers/Students/PurchaseItemsContainer/items.js","containers/Students/PurchaseItemsContainer/index.js","actions/purchaseActions.js","containers/EnergyConversion/AttitudeAndSkillsContainer/index.js","containers/RegistrationContainer/CreateStudentContainer/index.js","containers/EnergyConversion/StructureAndSystemsContainer/index.js","containers/EnergyConversion/CommunicationAndCoordinationContainer/index.js","services/chartAudit.service.js","containers/ChartAudit/index.js","containers/Coaching/CoachingPPP/FormSteps/EnterClientPage.js","containers/Coaching/CoachingPPP/FormSteps/TotalInputPage.js","containers/Coaching/CoachingPPP/config.js","containers/Coaching/CoachingPPP/FormSteps/SummaryPage.js","containers/Coaching/CoachingPPP/configColumn.js","containers/Coaching/tab1/tabSummary.js","containers/Coaching/CoachingPPP/FormSteps/DetailDataPage.js","containers/Coaching/CoachingPPP/form.js","actions/coachPppReportActions.js","containers/Coaching/CoachingPPP/report.js","containers/Coaching/CoachingPPP/index.js","services/coachAudit.service.js","containers/ChartAuditReport/MarketingAnalysis/index.js","containers/ChartAuditReport/MoneyAnalysis/index.js","containers/ChartAuditReport/ReferralSource/index.js","containers/ChartAuditReport/SchedulingAnalysis/index.js","containers/ChartAuditReport/PtChart/index.js","containers/ChartAuditReport/index.js","containers/Students/ReviewSubmittedContainer/index.js","containers/RegistrationContainer/CreateUserContainer/index.js","containers/Management/StudentContainer/index.js","containers/Management/DetailStudent/index.js","services/interim.service.js","containers/InterimBudget/index.js","services/budget.service.js","containers/Budget/index.js","services/occupancy.service.js","containers/Occupancy/index.js","containers/ReviewOccupancy/index.js","routes/index.js","components/FlashMessage/index.js","assets/images/logo.png","store/auth.js","actions/authActions.js","containers/AppContainer/index.js","containers/Login/index.js","containers/SignUp/index.js","containers/Admin/SignUp/index.js","reportWebVitals.js","store/index.js","index.js"],"names":["AppConfig","DENTISTRY_SUBMIT_DATA_STEPS","DOCTOR_PRODUCTION","HYGEINIST_PRODUCTION","COLLECTIONS","PATIENT_ACTIVITY","STAFF_COMPENSATION","OCCUPANY_AND_H_P","SUPPLIES_MARKETING","LABORTORY","DOCTOR_SALARY","ADMINISTRATIVE_SERVICES","SOLVENCY_SAVINGS_ROI_FUNDS","ORTHO_SUBMIT_DATA_STEPS","SCHEDULE_CLASS_STEPS","REGISTER_CLASS","ENERGY_CONVERSION","ENERGY","DIRECTION","STRUCTURE_AND_SYSTEMS","COMMUNICATION_AND_COORDINATION","ATTITUDE_AND_SKILLS","REGISTRATIONS","CREATE_STUDENT","CREATE_USER","ENERGY_PROFILE","DATA_RESULT","DATA_ANALYSIS","MANGEMENT","STUDENT","ROUTES","MAIN","STUDENTS_SCHEDULE","STUDENTS_SUBMIT_DATA","STUDENTS_PURCHASE_ITEMS","REPORT","COACHING","COACHING_PPP","REVIEW_SUBMITED","SUBMIT_DATA","DENTISTRY","ORTHO","REGISTRATION","ENERGY_PROFILE_REPORT","PROFIT_AND_LOSS","PROFIT_SCAN","CHART_AUDIT","CHART_AUDIT_REPORT","INTERIM_BUDGET","OCCUPANCY","REVIEW_OCCUPANCY","BUDGET","LOGIN","formatPrice","price","concat","Math","round","toFixed","roundNumber","number","scale","arguments","length","undefined","decFormatter","value","part","toString","split","val1","replace","val2","decFormatterTotal","decFormatterNumber","formatCurrency","amount","Intl","NumberFormat","style","currency","currencyDisplay","format","STUDENT_DEGREES","label","UserAccountType","STUDENT_ADMIN","STUDENT_STAFF","STUDENT_DOCTOR","ADMIN","COACH","SurveyType","TYPE_ENERGY_SURVEYS","STUDENT_ACCOUNT_TYPES","setUserToLocalStorage","user","localStorage","setItem","JSON","stringify","removeUserFromLocalStorage","removeItem","getUserFromLocalStorage","parse","getItem","api","axios","create","baseURL","process","headers","defaults","post","put","patch","interceptors","request","use","config","authToken","token","getAuthTokenFromLocalStorage","Authorization","response","error","_error$response","includes","status","window","location","href","Promise","reject","slice","createSlice","name","initialState","errors","reducers","setErrors","state","_ref","payload","actions","throwErrors","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","stop","_x","apply","clearErrors","_ref2","_callee2","_context2","_x2","message","type","setFlashMessage","_ref$payload","setFlashSuccess","setFlashError","_ref7","_ref8","_callee4","_context4","_x4","items","item","meta","loading","setLoading","studentsFetched","_ref2$payload","records","studentFetched","_ref3","record","deletedStudent","_ref4","id","filter","data","_slice$actions","createStudent","params","history","abrupt","snakecaseKeys","then","_ref3$data","success","push","catch","finally","fetchStudents","_ref11","_callee5","_context5","get","size","_ref12","_ref12$data","_error$response2","_error$response2$data","_notification","_x5","page","totalCount","doctorsFetched","map","_objectSpread","_parseInt","camelcaseKeys","require","fetchDoctors","_ref$page","_camelcaseKeys","deep","result","_camelcaseKeys$pagy","pagy","currentPage","totalItems","Option","_Select","RangePicker","_DatePicker","connect","student","students","loadingFetchStudent","props","onSubmitCallback","_useState","useState","month","year","studentId","dateValue","_useState2","_slicedToArray","filterValue","setFilterValue","_useState3","_useState4","doctors","setDoctor","useEffect","fetchDoctorList","keyword","search","temp","attributes","fullname","_jsxs","_Form","className","children","_Row","gutter","_jsx","_Col","span","Item","rules","required","onChange","picker","date","dateString","startDate","endDate","width","showSearch","optionFilterProp","studentName","filterOption","input","option","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","doctor","index","textAlign","_Button","disabled","onClick","getReporting","args","res","_args","sent","getStudentAdmin","Text","_Typography","Title","DEFAULT_REPORT","reportSeven","new_patients","age","current_mo","percentage_of_current_mo","ytd","percentage_of_ytd","avg_per_month","patient_referrals","title","case_presentation","current_percentage_cases","current_percentage_dollars","percentage_of_ytd_cases","percentage_of_ytd_dollars","patient_visits","hygiene","reportSix","grand_total","avail","lost","prod","worked","wrkd","avg_avail","avg_lost","avg_prod","avg_worked","avg_wrkd","doctor_hours","hygiene_hours","reportFive","doctor_percentage_of_available_hrs_scheduled","doctor_percent","percentage_of_cancelled_hrs_recovered","current_month","ytd_avg_month","percentage_of_dr_capacity_used","percentage_of_scheduled_hrs_cancelled","hygiene_percent","percentage_of_available_hrs_scheduled","table","key","category","totalAmount","collectionsPercent","interimBudget","interimVariance","cpdTarget","cpdVariance","header_info","recare_ratio","case_ratio","unpaid_bills","production","collections","percentage_of_production","actual","rl","bl","gl","bal","bl_detail","net_solv","percentage_of_net_solv","total_short_term_debt","net_roi_funds","prod_hour_scheduled","prod_patient_visits","prod_hour","debt_payments","avg_prod_mo","avg_coll_mo","budgeted_bl","budgeted_gl","budgeted_rl","budgeted_balance","average","prod_per_month","collections_per_month","pct_collections_per_month","sales_per_month","total_per_ytd","budget","blue_line","green_line","red_line","balance","total","coll_ytd","prod_ytd","prod_per_ytd","sales_per_ytd","profit","avg_total_ytd","avg_prod_ytd","percentage_of_total","hyg_prod_mo","receivables","ReportingContainer","setFilter","compRef","setCompRef","_useState5","_useState6","formStyle","setFormStyle","_useState7","_useState8","reportData","setReportData","handleChange","pagination","filters","sorter","console","log","reportSevenColNewPatients","dataIndex","render","obj","reportSevenColPatientRef","reportSevenColCasePresent","reportSevenColPatientVisitDoc","reportSevenColPatientVisitHyg","report6Cols","moment","report6HygCols","report5Cols","report5HygCols","columns","text","columnsHygiene","onFilterChange","mapped","mappedHygiene","fetchReport","total_amount","staff","percentage_of_collections","interim_budget","interim_budget_variance","cpd_target","cpd_variance","occupancy","hp_resource","supplies","laboratory","services","marketing_sales","overhead_total","drs_salaries","all_expenses","current_expenses","pct_of_productions","percentage_of_productions","hygiene_target","variance","products","hyg_salaries","renderName","arr","renderStyleRow","hygienist","_PageHeader","_Divider","Filter","ReactToPrint","trigger","content","bodyClass","_reportData$header_in","_reportData$header_in2","_reportData$actual","_reportData$actual$bl","_reportData$actual2","_reportData$actual2$b","_reportData$receivabl","_reportData$receivabl2","ref","el","color","level","_Fragment","strong","_Table","rowClassName","dataSource","padding","offset","marginLeft","net_roi_funds_percentage","bal_percentages","marginTop","display","justifyContent","alignItems","showHeader","renderFormType1","hyg_sales_mo","hyg_total_mo","total_per_month","patient","prod_patient","_reportData$reportFiv","_reportData$reportFiv2","paddingRight","marginBottom","renderFormFive","_reportData$reportSix","_reportData$reportSix2","height","borderTop","categoryName","current","percentageCurrent","avg","percentageAvg","accountRec","curPercentage","ytdPercentage","borderBottom","renderFormSix","_reportData$reportSev","_reportData$reportSev2","_reportData$reportSev3","_reportData$reportSev4","_reportData$reportSev5","_reportData$reportSev6","_reportData$reportSev7","_reportData$reportSev8","_reportData$reportSev9","_reportData$reportSev10","_reportData$reportSev11","_reportData$reportSev12","renderFormSeven","renderForm","validateMessages","EnergyProfile","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","formRef","React","createRef","_createClass","this","_this2","_this$props","align","setState","first_name","last_name","_Space","submit","htmlType","Component","NotFoundContainer","src","notFoundImage","alt","Link","to","ReportContainer","ProfitScan","tags","_Tag","layout","validator","_","isNaN","Error","resolve","_Input","suffix","LaboratoryStep","onBack","onFinish","initialValues","smileCost","alignerCost","labFabricatedAppliances","labSupplies","formData","setFieldsValue","onbeforeunload","e","subTitle","fieldKey","marginRight","withRouter","regex0To30","RegExp","regex31To60","regex61To90","regex91ToMore","CollectionsStep","totalGross","refunds","totalNet","downPaymentFeesDue","downPaymentFeesCollected","zeroToThirtyDays","thirtyOneToSixtyDays","sixtyOneToNinetyDays","ninetyOneToMoreDays","unpaidBillsDueThisMonth","pattern","DoctorSalaryStep","grossSalary","employerMatch","drawsDividendsDistributions","insurancePremiums","personalExpenses","other","OccupanyAndHPStep","mortgageOrRent","utilities","janitorial","repairs","facilitiesInsurance","securitySystem","propertyTax","equipType","officeFurnitureAndRepairs","staffContinuingEducation","staffScpdTuitionOrTravel","icatExpenses","hpResourceTotal","_Card","urlPatternRegex","PatientActivityStep","newPatientsExams","newPatientRecords","whoScheduledRecords","contractPresented","contractAccepted","minor","adult","activePatientCount","ptsExtendedTx","preTxObservationPts","preTxObservationPtsSeen","patientsOfRecord","otherDoctors","website","signage","teamMembers","rpcQuadrant","rpcTeeth","perioMaintenance","DebounceSelect","fetchOptions","_ref$debounceTimeout","debounceTimeout","_ref$optionInit","optionInit","_objectWithoutProperties","_excluded","_React$useState","_React$useState2","fetching","setFetching","_React$useState3","_React$useState4","options","setOptions","fetchRef","useRef","debounceFetcher","useMemo","debounce","fetchId","newOptions","onSearch","notFoundContent","_Spin","DoctorProductionStep","_forEach","doctorProduction","doctorId","productionAdj","netProduction","patientHoursAvailable","patientHoursScheduled","startApptsAvailable","patientVisits","apptChanges","labelCol","List","fields","add","remove","field","placeholder","icon","_PlusOutlined","StaffCompensationStep","assistants","employerMatching","futaSuta","medicalInsurance","pensionProfitSharing","bonus","otherBenefit","workComp","administrative","SuppliesAndMarketingStep","backetsBandsAdhesives","wiresLigaturesHeadgearFacebow","xRayFilm","dispoables","marketing","advertising","AdministrativeServicesStep","administrativeOfficeSupplies","bankCcServicesCharges","businessEquipmentPurchases","businessEquipmentRepair","collectionCost","dues","laundryOrTowelServices","prof","licenses","crmSoftware","malpracticeInsurance","overheadInsurance","cellPhone","payrollServicesFee","postageAndFreight","subscriptions","personalPropertyTaxes","telephone","uniforms","PhoneInput","country","inputStyle","SolvencySavingsROIFundsStep","orthoSubmitData","orthoDoctorProduction","ortho","patientActivity","staffCompensation","occupancyAndHP","suppliesAndMarketing","administrativeServices","doctorSalary","solvencySavingsROIFunds","deposit","retiringPastDueDebt","transferredOutOfSolvencyAcct","pension","drCe","longTermInvestments","goodwillLoanPracticePayments","scpdExpenses","roiFundTotal","DensitySubmitData","step","match","_AppConfig$ORTHO_SUBM","RegistrationContainer","currentUser","account_type","auth","handleTotal","Object","keys","reduce","previousValue","currentKey","Number","_this$props2","restoriveLab","alignersOrthoLab","implantSupplies","cerec","formatData","prevProps","_this$props3","updateData","onValuesChange","_InputNumber","formatter","parser","background","getFieldValue","getValueOfKey","setTotalGross","setTotalRefund","collectionsAtTos","tooltip","totalHp","occupancy_and_hp","newPatient6To20","newPatient21To40","newPatient41ToMore","formalReviewOfFindings","formalReviewAppointed","formalReviewPresented","formalReviewAccepted","informalReviewOfFindings","informalReviewAppointed","informalReviewPresented","informalReviewAccepted","dueInRecareThisMonth","seen","paddingTop","patient_activity","setProduction","_this$getValueOfKey","discount","setDiscount","_this$getValueOfKey2","patientHoursCancelled","patientHoursRecoverd","xl","lg","md","sm","goBack","totalAs","totalAd","totalH","totalHA","hygieneAssistant","forEach","staff_compensation","_this$props4","hygienistsFetched","HygeinistProductionStep","fetchHygienistList","hygienistProduction","hygienistId","hoursAvailable","hoursScheduled","hoursCancelled","hoursRecoverd","productSales","fetchHygienists","totalM","orthoSupplies","hygieneSupplies","sharedSupplies","hygieneProduct","supplies_and_marketing","mealAndEntertainment","printing","administrative_services","totalRoi","totalS","dentistrySubmitData","query","queryString","dentistryDoctorProduction","dentistryHygienistProduction","doctSal","dentistry","draw","dividend","distributions","profitabilityPayForTeam","otherShortTermDebt","solvency_savings_roi_funds","updateDentistryData","_componentDidMount","showDentistryData","_AppConfig$DENTISTRY_","doctor_production","backPath","hygienist_production","doctor_salary","_ref6","_callee3","_context3","every","_x3","_ref5","_ref5$data","ProfitAndLoss","onSubmit","createProfitPotential","file","document","FormData","append","_omit","originFileObj","resetFields","backTaxes","onChangeRadio","target","direction","italic","restField","_MinusCircleOutlined","block","_Radio","Group","_Upload","accept","maxCount","_UploadOutlined","callback","_ref2$data","questionsFetched","studentSurveysFetched","BaseContainer","questions","completedHtml","pages","elements","isRequired","rateMin","rateMax","formatSenderData","questions_survey_id","sendDataToServer","sender","submitStudentSurvey","_this$state","selectedStudentId","selectedType","allowComplete","completed","fetchQuestions","questionType","_this$state2","flexDirection","onSelect","setTimeout","indicator","_LoadingOutlined","fontSize","spin","Survey","json","onCompleting","questionsSurvey","studentSurvey","studentSurveyItems","results","EnergyContainer","BaseEnergyContainer","EPTableComponent","bordered","summary","pageData","totlaScoreQ1","totlaScoreQ2","totlaScoreQ3","totlaScoreQ4","totlaScoreQ5","totlaScoreQ6","totlaScoreQ7","totlaScoreQ8","totlaScoreQ9","totlaScoreQ10","numberOfRow","q1","q2","q3","q4","q5","q6","q7","q8","q9","q10","Summary","Row","Cell","energyData","directionData","StructureAndSystemsData","commAndCoordData","AttitudeAndSkillsData","DataResult","ScoreTable","avgScore","score","questionNo","LowestScores","HighestScores","DataAnalysis","formatResult","dataAvg","fetchStudentSurveys","prevPros","doctorResult","formatAverageData","survey_type","practiceResult","practice","calculateAverge","energy","structure_and_systems","communication_and_coordination","attitude_and_skills","energyScore","directionScore","sasScore","cacScore","aasScore","question_type","_Object$keys","averageData","_Object$keys2","dataType","a","b","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","userType","DirectionContainer","classRoomsFetched","classRoomDetail","classRoomsScheduledFetched","classScheduledColumns","ClassScheduled","handleTableChange","classScheduledData","_item$attributes","startTime","endTime","materialInclude","material","pageSize","fetchClassRoomsScheduled","rowKey","classRoomScheduled","classRoomsCompletedFetched","classCompletedColumns","ClassCompleted","classCompletedData","fetchClassRoomsCompleted","classRoomCompleted","RegisterClassStep","fetchClassList","onChangeSelect","classSelected","onCalendarSelect","dateSelected","onPanelChange","mode","fetchClassRooms","onNextPage","initialValue","_Calendar","fullscreen","classRoom","ConfirmRegisterClassStep","_len","Array","_key","renderInformationConfirm","instructor","description","_Descriptions","getClassDetail","classId","classIdSelected","ScheduleContainer","nextPage","values","classRoomId","prevPage","createRegisterClass","_this$state$formData","ScheduleClassesConfirmStep","classRoomRegistration","_ref9","_ref9$data","go","SubmitDataContainer","normFile","isArray","fileList","renderManuallyEnterData","practiceType","dateMonth","isStudent","onChangePracticeType","onDateSelect","valuePropName","getValueFromEvent","wrapperCol","listType","productsFetched","EditableContext","createContext","EditableRow","_Form$useForm","useForm","form","component","Provider","EditableCell","editable","handleSave","restProps","_excluded2","editing","setEditing","inputRef","useContext","focus","toggleEdit","_defineProperty","save","validateFields","t0","childNode","onPressEnter","onBlur","PurchaseItemsContainer","fetchProductList","ids","quantity","row","newData","_toConsumableArray","findIndex","splice","submitPurchaseItems","purchase","taxPercent","fetchProducts","components","body","cell","col","onCell","tax","subTotal","totalItemPrice","colSpan","product","AttitudeAndSkillsContainer","CreateStudentContainer","firstName","lastName","degree","address","city","zip","businessPhone","phoneNumber","spendingReportMonths","specialty","newPractice","StructureAndSystemsContainer","CommunicationAndCoordinationContainer","fetchChartAudit","postChartAudit","_args2","patient_chart_audit","deleteChartAudit","_args3","delete","INITIAL_VALUE","INIT_FORM_VALUE","new_patient_initials","completed_total_amount","total_amount_diagnosed","total_treatment_completed","case","chart","diagnosed","dr_appt_scheduled","dr","has_dr_appt","has_has_appt","hyg","hygiene_appt","proposed","identify_referral_source","scheduled","unscheduled","remaining_unscheduled_treatment","test_insurance","test_marketing","test_other","test_outside_dr","test_patient","test_unknown","test_walk_in","test_yellow_pages","proposed_insurance","proposed_marketing","proposed_other","proposed_outside_dr","proposed_patient","proposed_unknown","proposed_walk_in","proposed_yellow_pages","completed_insurance","completed_marketing","completed_other","completed_outside_dr","completed_patient","completed_unknown","completed_walk_in","completed_yellow_pages","_studentInfo$degree","studentInfo","setStudentInfo","setDataSource","setFormData","identifySource","initColumns","amount_diagnosed","amount_treatment","has_hygiene_appt","doctor_appt","has_doctor_appt","_record$attributes","_record$attributes$id","toUpperCase","unscheduled_remaining","minWidth","has_appt","dr_appt","patient_chart_audit_extras","outside_dr","yellow_pages","walk_in","unknown","shape","_DeleteOutlined","_useState9","_useState10","setColumns","fetchChartAuditList","deleteChartAuditById","addItem","user_id","patient_chart_audit_extras_attributes","section","insurance","column","find","autoComplete","overflowY","position","EnterClientPage","business_phone","phone_number","spending_report_months","TotalInputPage","KEY","adminServices","resourceDev","doctorComp","solvency","roi","tabsleft","tabsright","SummaryPage","_isNaN","Infinity","updateDataSource","percentage","calculatePercentage","NaN","report","total_collections_for_spending_report","_KEY$staffCompensatio","Panel","_Collapse","TabSummary","tabData","totalData","collapsible","expandIcon","isActive","_CaretRightOutlined","rotate","tab","_configColumn$tab$key","header","configColumn","fontWeight","_PlusCircleFilled","DetailDataPage","setTotal","fieldObject","previous","totalTabLeft","totalTabRight","FormTab","clientRef","totalRef","detailRef","summaryRef","goNext","currentStep","nextTrigger","err","detailData","nestedKey","createCoachPppReport","setData","_this$state3","Report","_data$report","_data$report2","_data$report3","_data$report4","_data$report5","_data$report6","_data$report7","_data$report8","_data$report9","_data$report10","_data$report11","_data$report12","_data$report13","_data$report14","_data$report15","_data$report16","_data$report17","_data$report18","_data$report19","percentage_col","practice_amount","cpd_amount","variance_amount","c","d","f","g","redlinePercentageCol","redlinePracticeAmount","redlineCpdAmount","redlineVarianceAmount","redlineVariance","solvencyVariance","roiVariance","profitPercentageCol","profitPracticeAmount","profitCpdAmount","profitVarianceAmount","profitVariance","_data$report20","_data$student","_data$total","_data$total2","_data$total3","_data$report21","_data$student2","total_production_for_spending_report","_data$report22","_data$report23","_data$student3","avg_of_clinical_hours_worked_month","_data$report24","collectionsHr","_data$report25","_data$report26","_data$report27","_data$report28","modelExpenseReduction","_data$report29","_data$report30","_data$student4","avg_of_doctor_patient_visits_month","_data$report31","_data$report32","_data$report33","_data$report34","_data$report35","_data$report36","_data$report37","_data$report38","_data$report39","_data$report40","_data$student5","_data$student6","_data$student7","_data$student7$degree","modelCollections","prodPt","year1Collections","year1ExpenseReduction","labelStyle","TabPane","_Tabs","renderTabBar","DefaultTabBar","Sticky","bottomOffset","CoachingPPP","activeKey","StickyContainer","defaultActiveKey","getReportByUserId","MarketingAnalysis","_ref$data","lead_source","source","average_presented","ave","percentage_completed","_data$lead_source","_data$ave_presented","_data$ave","_data$percentage_comp","_data$lead_source2","_data$ave_presented2","_data$ave2","_data$percentage_comp2","_data$lead_source3","_data$ave_presented3","_data$ave3","_data$percentage_comp3","_data$lead_source4","_data$ave_presented4","_data$ave4","_data$percentage_comp4","_data$lead_source5","_data$ave_presented5","_data$ave5","_data$percentage_comp5","_data$lead_source6","_data$ave_presented6","_data$ave6","_data$percentage_comp6","_data$lead_source7","_data$ave_presented7","_data$ave7","_data$percentage_comp7","_data$lead_source8","_data$ave_presented8","_data$ave8","_data$percentage_comp8","ave_presented","MoneyAnalysis","object","fieldBold","ave_treatment_completed","ave_treatment_diagnosed","ave_treatment_proposed","ave_case_completed","amount_scheduled_doctor","percentage_unscheduled_diagnosed","percentage_unscheduled_proposed","amount_unscheduled","average_diff_proposed_vs_completed","average_number_of_new_patients_a_month","average_loss_per_new_patients_monthly","average_loss_per_new_patients_yearly","ReferralSource","patient_count","presented","_data$patient_count","_data$presented","_data$completed","_data$patient_count2","_data$presented2","_data$completed2","_data$patient_count3","_data$presented3","_data$completed3","_data$patient_count4","_data$presented4","_data$completed4","_data$patient_count5","_data$presented5","_data$completed5","_data$patient_count6","_data$presented6","_data$completed6","_data$patient_count7","_data$presented7","_data$completed7","_data$patient_count8","_data$presented8","_data$completed8","SchedulingAnalysis","patients_completed_some_treatment","patients_treatment_diagnosed","patients_treatment_proposed","patients_completed_treatment","patients_scheduled_appointment","patients_doctor_appointment","patients_hygiene_appointment","patients_no_appointment","scheduled_appointment","doctor_appointment","hygiene_appointment","no_appointment","PtChart","_props$data","ptChart","treatmentCompleted","caseCompleted","total_amount_case","total_amount_proposed","total_amount_completed","total_patient_diagnosed","total_patient_proposed","total_patient_completed","total_patient_case","setStudent","total_pt","scheduling","referral_source","money_analysis","marketing_analysis","ReviewSubmittedContainer","admin_id","StudentManagement","_value$split","string","charAt","_EditOutlined","deleteStudent","searchParams","_Pagination","defaultCurrent","total_record","defaultPageSize","pageSizeOptions","showSizeChanger","_ref8$data","DetailStudentContainer","updateStudent","email","fetchStudent","_this$formRef","_camelCase","actionLoading","opacity","_ref10","_error$response$data","_ref6$data","postInterimBudget","setForm","budgets","hp_resources","meal_and_entertainment","postBudget","red_line_budget","blue_line_budget","green_line_budget","postOccupancy","updateOccupancy","getOccupancy","occupancy_conversion","percent_clinical_space","percent_non_clinical_space","total_treatment_room","total_used_hygiene_department","fetchOccupancyById","Routes","Switch","Route","exact","path","StudentsScheduleContainer","StudentsSubmitDataContainer","StudentsPurchaseItemsContainer","CoachingContainer","DensitySubmitDataContainer","OrthoSubmitDataContainer","RegistrationCreateStudentContainer","CreateUserContainer","EnergyProfileReport","EnergyProfileDataResult","EnergyProfileDataAnalysis","ProfitAndLossContainer","ProfitScanContainer","ChartAudit","InterimBudget","Occupancy","ReviewOccupancy","Budget","ChartAuditReport","FlashMessage","duration","info","warning","open","flashMessage","initialUser","loginRequest","loginSuccess","loginFail","loggedOutRequest","loggedOutSuccess","loggedOutFail","signUpRequest","signUpSuccess","signUpFail","signUp","_response$data3","keepCase","Content","_Layout","Sider","SubMenu","_Menu","AppContainer","onCollapse","collapsed","onLogout","logout","pathname","openKeys","dispatchClearErrors","unlistenHistory","listen","minHeight","logoImage","theme","defaultSelectedKeys","_UserOutlined","onTitleClick","_DatabaseOutlined","_PieChartOutlined","_SettingOutlined","Login","onLogin","login","password","errorMessage","remember","Password","_response$data","_response$data2","authorization","currentAccountType","setCurrentAccountType","studentAdmins","setStudentAdmins","onSignUp","mappedData","studentAdminId","paddingBottom","accountType","dependencies","hasFeedback","AdminSignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","profitPotential","store","configureStore","ReactDOM","Router","LoginContainer","SignUpContainer","AdminSignUpContainer","getElementById"],"mappings":"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","file":"static/js/main.7d7186a2.chunk.js","sourcesContent":["const AppConfig = {\n  DENTISTRY_SUBMIT_DATA_STEPS: {\n    DOCTOR_PRODUCTION: 'doctor-production',\n    HYGEINIST_PRODUCTION: 'hygeinist-production',\n    COLLECTIONS: 'collections',\n    PATIENT_ACTIVITY: 'patient-activity',\n    STAFF_COMPENSATION: 'staff-compensation',\n    OCCUPANY_AND_H_P: 'occupany-and-human-physical',\n    SUPPLIES_MARKETING: 'supplies-marketing',\n    LABORTORY: 'labortory',\n    DOCTOR_SALARY: 'doctor-salary',\n    ADMINISTRATIVE_SERVICES: 'administrative-services',\n    SOLVENCY_SAVINGS_ROI_FUNDS: 'solvency-savings-roi-funds',\n  },\n  ORTHO_SUBMIT_DATA_STEPS: {\n    DOCTOR_PRODUCTION: 'doctor-production',\n    COLLECTIONS: 'collections',\n    PATIENT_ACTIVITY: 'patient-activity',\n    STAFF_COMPENSATION: 'staff-compensation',\n    OCCUPANY_AND_H_P: 'occupany-and-human-physical',\n    SUPPLIES_MARKETING: 'supplies-marketing',\n    LABORTORY: 'labortory',\n    DOCTOR_SALARY: 'doctor-salary',\n    ADMINISTRATIVE_SERVICES: 'administrative-services',\n    SOLVENCY_SAVINGS_ROI_FUNDS: 'solvency-savings-roi-funds',\n  },\n  SCHEDULE_CLASS_STEPS: {\n    REGISTER_CLASS: 'register-class',\n  },\n  ENERGY_CONVERSION: {\n    ENERGY: 'energy',\n    DIRECTION: 'direction',\n    STRUCTURE_AND_SYSTEMS: 'structure-and-systems',\n    COMMUNICATION_AND_COORDINATION: 'communication-and-coordination',\n    ATTITUDE_AND_SKILLS: 'attitude-and-skills',\n  },\n  REGISTRATIONS: {\n    CREATE_STUDENT: 'create-student',\n    CREATE_USER: 'create-user',\n  },\n  ENERGY_PROFILE: {\n    DATA_RESULT: 'data-result',\n    DATA_ANALYSIS: 'data-analysis',\n  },\n  MANGEMENT: {\n    STUDENT: 'student',\n  },\n  ROUTES: {\n    MAIN: '/',\n    STUDENTS_SCHEDULE: '/students/schedule',\n    MANGEMENT: '/mangement',\n    STUDENTS_SUBMIT_DATA: '/students/submit-data',\n    STUDENTS_PURCHASE_ITEMS: '/students/purchase-items',\n    REPORT: '/report',\n    COACHING: '/coaching',\n    COACHING_PPP: '/coaching/ppp',\n    REVIEW_SUBMITED: '/coaching/review-submited',\n    SUBMIT_DATA: '/submit-data',\n    DENTISTRY: '/dentistry',\n    ORTHO: '/ortho',\n    REGISTRATION: '/registration',\n    ENERGY_CONVERSION: '/energy-conversion',\n    ENERGY_PROFILE: '/energy-profile',\n    ENERGY_PROFILE_REPORT: '/energy-profile-report',\n    PROFIT_AND_LOSS: '/profit-and-loss',\n    PROFIT_SCAN: '/profit-scan',\n    CHART_AUDIT: '/chart-audit',\n    CHART_AUDIT_REPORT: '/chart-audit-report',\n    INTERIM_BUDGET: '/interim-budget',\n    OCCUPANCY: '/occupancy',\n    REVIEW_OCCUPANCY: '/review-occupancy',\n    BUDGET: '/budget',\n    LOGIN: '/login',\n  },\n};\n\nexport default AppConfig;\n","export const formatPrice = (price) =>\n  `${(Math.round(price * 100) / 100).toFixed(2)}`;\nexport const roundNumber = (number, scale = 1) =>\n  (Math.round(number * 100) / 100).toFixed(scale);\n\nexport const decFormatter = (value) => {\n  const part = value.toString().split('.');\n  const val1 = part[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const val2 = part[1];\n  const renderVal2 = () => {\n    if (val2 > 0) {\n      return `.${val2}`;\n    }\n    return '';\n  };\n  return `$ ${val1}${renderVal2()}`;\n};\n\nexport const decFormatterTotal = (value) => {\n  const rounded = Math.round(value * 100) / 100;\n  const part = rounded.toString().split('.');\n  const val1 = part[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const val2 = part[1];\n  const renderVal2 = () => {\n    if (val2 > 0) {\n      return `.${val2}`;\n    }\n    return '';\n  };\n  return `$ ${val1}${renderVal2()}`;\n};\n\nexport const decFormatterNumberInput = (value) => {\n  const rounded = Math.round(value * 100) / 100;\n  const part = rounded.toString().split('.');\n  const val1 = part[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const val2 = part[1];\n  const renderVal2 = () => {\n    if (val2 > 0) {\n      return `.${val2}`;\n    }\n    return '.00';\n  };\n  return `${val1}${renderVal2()}`;\n};\n\nexport const decFormatterNumber = (value, show = true) => {\n  if (show === false) {\n    return '';\n  }\n  if (!value) {\n    return '0.00';\n  }\n  const part = value.toString().split('.');\n  const val1 = part[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  const val2 = part[1];\n  const renderVal2 = () => {\n    if (val2 > 0) {\n      return `.${val2}`;\n    }\n    return '.00';\n  };\n  return `${val1}${renderVal2()}`;\n};\n\nexport const generateRandomNumber = () => {\n  const randomNum = 1000 + Math.random() * 1000;\n  return Math.round(randomNum / 100) * 100;\n};\n\nexport const formatCurrency = (amount) => {\n  if (!amount) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      currencyDisplay: 'narrowSymbol',\n    }).format(0);\n  }\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    currencyDisplay: 'narrowSymbol',\n  }).format(amount);\n};\n\nexport const capitalizeFirstLetter = (string) => {\n  if (!string) return '';\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","export const API_HOST = process.env.REACT_APP_API_HOST;\n\nexport const STUDENT_DEGREES = [\n  {\n    value: 'dds',\n    label: 'DDS',\n  },\n  {\n    value: 'dmd',\n    label: 'DMD',\n  },\n];\n\nexport const UserAccountType = {\n  STUDENT_ADMIN: 'student_admin',\n  STUDENT_STAFF: 'student_staff',\n  STUDENT_DOCTOR: 'student_doctor',\n  ADMIN: 'admin',\n  COACH: 'coach',\n};\n\nexport const SurveyType = {\n  PRACTICE: 'practice',\n  DOCTOR: 'doctor',\n};\n\nexport const TYPE_ENERGY_SURVEYS = [\n  {\n    value: SurveyType.PRACTICE,\n    label: 'Practice',\n  },\n  {\n    value: SurveyType.DOCTOR,\n    label: 'Doctor',\n  },\n];\n\nexport const STUDENT_ACCOUNT_TYPES = [\n  {\n    value: UserAccountType.STUDENT_STAFF,\n    label: 'Staff',\n  },\n  {\n    value: UserAccountType.STUDENT_DOCTOR,\n    label: 'Doctor',\n  },\n];\n","export const setUserToLocalStorage = (user) =>\n  localStorage.setItem('user', JSON.stringify(user));\n\nexport const removeUserFromLocalStorage = () => localStorage.removeItem('user');\n\nexport const getUserFromLocalStorage = () =>\n  JSON.parse(localStorage.getItem('user')) || null;\n\nexport const getAuthTokenFromLocalStorage = () => {\n  const user = getUserFromLocalStorage();\n\n  return user?.token;\n};\n","import axios from 'axios';\nimport { API_HOST } from '@/constants';\nimport {\n  getAuthTokenFromLocalStorage,\n  removeUserFromLocalStorage,\n} from '@/utils/authUtils';\n\nconst api = axios.create({\n  baseURL: API_HOST,\n  headers: { 'Access-Control-Allow-Origin': '*' },\n});\n\napi.defaults.headers.post['Content-Type'] = 'application/json';\napi.defaults.headers.put['Content-Type'] = 'application/json';\napi.defaults.headers.patch['Content-Type'] = 'application/json';\n\napi.interceptors.request.use((config) => {\n  const authToken = getAuthTokenFromLocalStorage();\n\n  if (authToken) {\n    config.headers.Authorization = `Bearer ${authToken}`;\n  }\n  return config;\n});\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if ([401].includes(error.response?.status)) {\n      removeUserFromLocalStorage();\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  },\n);\n\nexport default api;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'error',\n  initialState: {\n    errors: [],\n  },\n  reducers: {\n    setErrors(state, { payload: { errors } }) {\n      state.errors = errors;\n    },\n  },\n});\n\nexport const { setErrors } = slice.actions;\n\nexport default slice.reducer;\n","import { setErrors } from '@/store/error';\n\nexport const throwErrors = (errors) => async (dispatch) => {\n  dispatch(setErrors({ errors }));\n};\n\nexport const clearErrors = () => async (dispatch) => {\n  dispatch(setErrors({ errors: [] }));\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'flashMessage',\n  initialState: {\n    message: '',\n    type: '',\n  },\n  reducers: {\n    setFlashMessage(state, { payload: { message, type } }) {\n      state.message = message;\n      state.type = type;\n    },\n  },\n});\n\nexport const { setFlashMessage } = slice.actions;\n\nexport default slice.reducer;\n","import { setFlashMessage } from '@/store/flashMessage';\n\nexport const setFlashSuccess = ({ message }) => async (dispatch) => {\n  dispatch(setFlashMessage({ message, type: 'success' }));\n};\n\nexport const setFlashInfo = ({ message }) => async (dispatch) => {\n  dispatch(setFlashMessage({ message, type: 'info' }));\n};\n\nexport const setFlashWarning = ({ message }) => async (dispatch) => {\n  dispatch(setFlashMessage({ message, type: 'warning' }));\n};\n\nexport const setFlashError = ({ message }) => async (dispatch) => {\n  dispatch(setFlashMessage({ message, type: 'error' }));\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'student',\n  initialState: {\n    items: [],\n    item: {},\n    meta: {},\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    studentsFetched(state, { payload: { records, meta } }) {\n      state.items = records;\n      state.meta = meta;\n    },\n\n    studentFetched(state, { payload: { record } }) {\n      state.item = record;\n    },\n\n    deletedStudent(state, { payload: { id } }) {\n      state.items = state.items.filter((data) => data.id !== id);\n    },\n  },\n});\n\nexport const { setLoading, studentsFetched, studentFetched, deletedStudent } =\n  slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport snakecaseKeys from 'snakecase-keys';\nimport { throwErrors, clearErrors } from '@/actions/errorActions';\nimport { setFlashError, setFlashSuccess } from '@/actions/flashMessageActions';\nimport AppConfig from '@/constants/AppConfig';\nimport {\n  studentsFetched,\n  studentFetched,\n  setLoading,\n  deletedStudent,\n} from '@/store/student';\nimport { notification } from 'antd';\n\nexport const createStudent =\n  ({ params, history }) =>\n  async (dispatch) => {\n    dispatch(setLoading(true));\n\n    return api\n      .post('/api/v1/students', snakecaseKeys(params))\n      .then(({ data: { success, message } }) => {\n        if (success) {\n          dispatch(clearErrors('userItem'));\n          dispatch(setFlashSuccess({ message }));\n\n          history.push(AppConfig.ROUTES.REGISTRATION);\n        } else {\n          dispatch(setFlashError({ message }));\n        }\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        if (error.response) {\n          dispatch(\n            throwErrors('userItem', { 'Submitted data': ['is invalid'] }),\n          );\n        }\n        throw error;\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\nexport const updateStudent =\n  (id, { params }) =>\n  async (dispatch) => {\n    dispatch(setLoading(true));\n\n    return api\n      .put(`/api/v1/students/${id}`, snakecaseKeys(params))\n      .then(({ data: { success, message } }) => {\n        if (success) {\n          dispatch(clearErrors('updateUserItem'));\n          dispatch(setFlashSuccess({ message }));\n\n          return true;\n        }\n        dispatch(setFlashError({ message }));\n        return false;\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        if (error.response) {\n          dispatch(\n            throwErrors('updateUserItem', { 'Submitted data': ['is invalid'] }),\n          );\n        }\n        throw error;\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\nexport const deleteStudent = (id) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .delete(`/api/v1/students/${id}`)\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        dispatch(deletedStudent({ id }));\n        dispatch(clearErrors('deleteUserItem'));\n        dispatch(setFlashSuccess({ message }));\n      } else {\n        dispatch(setFlashError({ message }));\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(\n          throwErrors('deleteUserItem', {\n            [`Delete student with id ${id}`]: ['is not success'],\n          }),\n        );\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const fetchStudent = (id) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get(`/api/v1/students/${id}`)\n    .then(({ data: { record } }) => {\n      dispatch(\n        studentFetched({\n          record,\n        }),\n      );\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        notification.error({\n          message: error.response?.data?.message,\n        });\n      }\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const fetchStudents =\n  (params = {}) =>\n  async (dispatch) => {\n    dispatch(setLoading(true));\n    return api\n      .get(\n        `/api/v1/students?size=${params?.size || 100}&number=${\n          params?.number || 1\n        }&filter=${params?.filter}`,\n      )\n      .then(({ data: { records, meta } }) => {\n        dispatch(\n          studentsFetched({\n            records,\n            meta,\n          }),\n        );\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        if (error.response) {\n          notification.error({\n            message: error.response?.data?.message,\n          });\n        }\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { parseInt } from 'lodash';\n\nconst slice = createSlice({\n  name: 'doctor',\n  initialState: {\n    page: 1,\n    items: [],\n    totalCount: 0,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    doctorsFetched(state, { payload: { items, totalCount, page } }) {\n      state.page = page;\n      state.items = items.map((data) => ({\n        ...data,\n        id: parseInt(data.id),\n      }));\n      state.totalCount = totalCount;\n    },\n  },\n});\n\nexport const { setLoading, doctorsFetched } = slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport { setLoading, doctorsFetched } from '@/store/doctor';\n\nconst camelcaseKeys = require('camelcase-keys');\n\nexport const fetchDoctors =\n  ({ page = undefined } = {}) =>\n  async (dispatch) => {\n    dispatch(setLoading(true));\n\n    return api\n      .get('/api/v1/doctors', { params: { page } })\n      .then(({ data: response }) => {\n        const {\n          result: { data: items },\n          pagy: {\n            currentPage,\n            totalItems,\n            // totalPages,\n          },\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          doctorsFetched({\n            items,\n            page: currentPage,\n            totalCount: totalItems,\n          }),\n        );\n      })\n      .catch((error) => {\n        throw error;\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Select, Button, DatePicker, notification } from 'antd';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { connect } from 'react-redux';\nimport api from '@/api';\nimport camelcaseKeys from 'camelcase-keys';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst Filter = (props) => {\n  const { onSubmitCallback, fetchStudents, students = [] } = props;\n  const [filterValue, setFilterValue] = useState({\n    month: null,\n    year: null,\n    studentId: null,\n    dateValue: null,\n    type: 'pmcr_current_month',\n  });\n  const [doctors, setDoctor] = useState([]);\n\n  useEffect(() => {\n    fetchStudents();\n    fetchDoctorList();\n  }, []);\n\n  const onSubmit = () => {\n    onSubmitCallback(filterValue);\n  };\n  const fetchDoctorList = (keyword) =>\n    api\n      .get('/api/v1/doctors', { params: { search: keyword } })\n      .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n      .then(({ result }) => {\n        if (result) {\n          const temp = result.data.map((item) => ({\n            label: item.attributes.fullname,\n            value: item.id,\n          }));\n          setDoctor(temp);\n          return result.data.map((item) => ({\n            label: item.attributes.fullname,\n            value: item.id,\n          }));\n        }\n        return [];\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n  return (\n    <Form name=\"advanced_search\" className=\"ant-advanced-search-form\">\n      <Row gutter={24}>\n        <Col span={8}>\n          <Form.Item\n            label=\"Select Report\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select\n              value={filterValue.type}\n              onChange={(value) => {\n                setFilterValue({\n                  ...filterValue,\n                  month: null,\n                  year: null,\n                  type: value,\n                  dateValue: null,\n                });\n              }}\n            >\n              <Option value=\"pmcr_current_month\">PMCR - Curent Mo.</Option>\n              <Option value=\"pmcr_hygiene_current_month\">\n                PMCR - Hygiene Curent Mo.\n              </Option>\n              <Option value=\"pmcr_ytd_avg_month\">PMCR - YTD Avg Month</Option>\n              <Option value=\"pmcr_hygiene_ytd_avg_month\">\n                PMCR - Hygiene YTD Avg Month\n              </Option>\n              <Option value=\"prod_analysis_time_stats\">\n                PROD. ANALYSIS-TIME.STATS\n              </Option>\n              <Option value=\"prod_analysis_time_dollars\">\n                PROD. ANALYSIS-TIME.DOLLARS\n              </Option>\n              <Option value=\"prod_analysis_pt_activity\">\n                PROD. ANALYSIS-PT.ACTIVITY\n              </Option>\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Date Range\">\n            {filterValue.type === 'pmcr_ytd_avg_month' ||\n              filterValue.type === 'pmcr_hygiene_ytd_avg_month' ||\n              filterValue.type === 'prod_analysis_time_stats' ||\n              filterValue.type === 'prod_analysis_pt_activity' ||\n              filterValue.type === 'prod_analysis_time_dollars' ? (\n              <RangePicker\n                value={filterValue.dateValue}\n                picker=\"month\"\n                onChange={(date, dateString) => {\n                  const startDate = dateString[0].split('-');\n                  const endDate = dateString[1].split('-');\n                  if (endDate[0] !== startDate[0]) {\n                    notification.error({\n                      message: 'Start year and End year must be the same',\n                    });\n                  } else {\n                    setFilterValue({\n                      ...filterValue,\n                      month: [startDate[1], endDate[1]],\n                      year: startDate[0],\n                      dateValue: date,\n                    });\n                  }\n                }}\n              />\n            ) : (\n              <DatePicker\n                value={filterValue.dateValue}\n                style={{ width: '100%' }}\n                picker=\"month\"\n                onChange={(date, dateString) => {\n                  const temp = dateString.split('-');\n                  setFilterValue({\n                    ...filterValue,\n                    month: [temp[1]],\n                    year: temp[0],\n                    dateValue: date,\n                  });\n                }}\n              />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Dr/Practice\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            {/* <DebounceSelect\n              showSearch\n              optionInit={doctors}\n              placeholder=\"Select Doctor\"\n              fetchOptions={fetchDoctorList}\n              style={{ width: '100%' }}\n            /> */}\n            <Select\n              style={{\n                width: 200,\n              }}\n              showSearch\n              optionFilterProp=\"children\"\n              onChange={(id, value) => {\n                setFilterValue({\n                  ...filterValue,\n                  studentId: id,\n                  studentName: value?.children,\n                });\n              }}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n              filterSort={(optionA, optionB) =>\n                optionA.children\n                  .toLowerCase()\n                  .localeCompare(optionB.children.toLowerCase())\n              }\n            >\n              {doctors.map((doctor, index) => (\n                <Option value={doctor.value} key={index.toString()}>\n                  {`${doctor?.label}`}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col\n          span={24}\n          style={{\n            textAlign: 'right',\n          }}\n        >\n          <Button\n            type=\"primary\"\n            disabled={!filterValue.month}\n            onClick={onSubmit}\n          >\n            Search\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nconst mapStateToProps = ({ student }) => ({\n  students: student.items,\n  loadingFetchStudent: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n  fetchDoctors,\n})(Filter);\n","import api from '@/api';\n\nexport const getReporting = async (args = {}) => {\n  const { month, year, type, studentId } = args;\n  const res = await api.get(\n    `/api/v1/users/${studentId}/reporting?year=${year}&month=${month}&type=${type}`,\n  );\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data.data;\n};\nexport const getStudentAdmin = async () => {\n  const res = await api.get('api/v1/student_admins');\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data.result.data;\n};\n","import React, { useState } from 'react';\nimport ReactToPrint from 'react-to-print';\nimport { Row, Col, Table, Button, Divider, Typography, PageHeader } from 'antd';\nimport { formatCurrency, decFormatterNumber } from '@/utils/helpers';\nimport Filter from '@/containers/Reports/Filter';\nimport './index.scss';\nimport { getReporting } from '@/services/report.service';\nimport moment from 'moment';\n\nconst { Text, Title } = Typography;\n\nconst DEFAULT_REPORT = {\n  reportSeven: {\n    new_patients: [\n      {\n        age: '6-20',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n        avg_per_month: 0,\n      },\n      {\n        age: '21-40',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n        avg_per_month: 0,\n      },\n      {\n        age: '45+',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n        avg_per_month: 0,\n      },\n      {\n        age: 'Total New',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n        avg_per_month: 0,\n      },\n    ],\n    patient_referrals: [\n      {\n        title: 'Referred by Pts.',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n      },\n      {\n        title: 'Referred by Drs.',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n      },\n      {\n        title: 'Total Referrals',\n        current_mo: 0,\n        percentage_of_current_mo: 0,\n        ytd: 0,\n        percentage_of_ytd: 0,\n      },\n    ],\n    case_presentation: [\n      {\n        title: 'Case Ratio',\n        current_percentage_cases: 0,\n        current_percentage_dollars: 0,\n        percentage_of_ytd_cases: 0,\n        percentage_of_ytd_dollars: 0,\n      },\n      {\n        title: 'Informal Ratio',\n        current_percentage_cases: 0,\n        current_percentage_dollars: 0,\n        percentage_of_ytd_cases: 0,\n        percentage_of_ytd_dollars: 0,\n      },\n      {\n        title: 'Recare Ratio',\n        current_percentage_cases: 0,\n        current_percentage_dollars: 0,\n        percentage_of_ytd_cases: 0,\n        percentage_of_ytd_dollars: 0,\n      },\n    ],\n    patient_visits: {\n      doctor: [\n        {\n          name: 'Total Dr. Visits',\n          current_mo: 0,\n          percentage_of_current_mo: 0,\n          ytd: 0,\n          percentage_of_ytd: 0,\n          avg_per_month: 0,\n        },\n      ],\n      hygiene: [\n        {\n          name: 'Total Hyg Visits',\n          current_mo: 0,\n          percentage_of_current_mo: 0,\n          ytd: 0,\n          percentage_of_ytd: 0,\n          avg_per_month: 0,\n        },\n      ],\n    },\n  },\n  reportSix: {\n    grand_total: {\n      avail: 0,\n      lost: 0,\n      prod: 0,\n      worked: 0,\n      wrkd: 0,\n      avg_avail: 0,\n      avg_lost: 0,\n      avg_prod: 0,\n      avg_worked: 0,\n      avg_wrkd: 0,\n    },\n    doctor_hours: [\n      {\n        name: '',\n        avail: 0,\n        lost: 0,\n        prod: 0,\n        worked: 0,\n        wrkd: 0,\n        avg_avail: 0,\n        avg_lost: 0,\n        avg_prod: 0,\n        avg_worked: 0,\n        avg_wrkd: 0,\n      },\n    ],\n    hygiene_hours: [\n      {\n        name: '',\n        avail: 0,\n        lost: 0,\n        prod: 0,\n        worked: 0,\n        wrkd: 0,\n        avg_avail: 0,\n        avg_lost: 0,\n        avg_prod: 0,\n        avg_worked: 0,\n        avg_wrkd: 0,\n      },\n    ],\n  },\n  reportFive: {\n    doctor_hours: [],\n    doctor_percentage_of_available_hrs_scheduled: [],\n    hygiene_hours: [],\n    doctor_percent: {\n      percentage_of_cancelled_hrs_recovered: {\n        current_month: 0,\n        ytd_avg_month: 0,\n      },\n      percentage_of_dr_capacity_used: { current_month: 0, ytd_avg_month: 0 },\n      percentage_of_scheduled_hrs_cancelled: {\n        current_month: 0,\n        ytd_avg_month: 0,\n      },\n    },\n    hygiene_percent: {\n      percentage_of_available_hrs_scheduled: {\n        current_month: 0,\n        ytd_avg_month: 0,\n      },\n      percentage_of_cancelled_hrs_recovered: {\n        current_month: 0,\n        ytd_avg_month: 0,\n      },\n      percentage_of_dr_capacity_used: { current_month: 0, ytd_avg_month: 0 },\n      percentage_of_scheduled_hrs_cancelled: {\n        current_month: 0,\n        ytd_avg_month: 0,\n      },\n    },\n  },\n  table: [\n    {\n      key: '1',\n      category: 'Staff',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '2',\n      category: 'Occupancy',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '3',\n      category: 'H&P Resources',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '4',\n      category: 'Supplies',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    // {\n    //   key: '5',\n    //   category: 'Meal & Entertainment',\n    //   totalAmount: 0,\n    //   collectionsPercent: 0,\n    //   interimBudget: 0,\n    //   interimVariance: 0,\n    //   cpdTarget: 0,\n    //   cpdVariance: 0,\n    // },\n    {\n      key: '7',\n      category: 'Laboratory',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '8',\n      category: 'Services',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '9',\n      category: 'Mktng/Sales',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n\n    {\n      key: '10',\n      category: 'Overhead Total',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '11',\n      category: 'DRS Salaries',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n    {\n      key: '12',\n      category: 'All Expenses',\n      totalAmount: 0,\n      collectionsPercent: 0,\n      interimBudget: 0,\n      interimVariance: 0,\n      cpdTarget: 0,\n      cpdVariance: 0,\n    },\n  ],\n  header_info: {\n    recare_ratio: 0,\n    case_ratio: 0,\n  },\n\n  unpaid_bills: 0,\n  production: 0,\n  collections: 0,\n  percentage_of_production: 0,\n  actual: {\n    rl: 0,\n    bl: 0,\n    gl: 0,\n    bal: 0,\n    bl_detail: {\n      net_solv: 0,\n      percentage_of_net_solv: 0,\n    },\n  },\n  total_short_term_debt: 0,\n  net_roi_funds: 0,\n  prod_hour_scheduled: [\n    {\n      name: '',\n      value: 0,\n    },\n  ],\n  prod_patient_visits: [\n    {\n      name: '',\n      value: 0,\n    },\n  ],\n  prod_hour: [\n    {\n      name: '',\n      value: 0,\n    },\n  ],\n  debt_payments: 0,\n  net_solv: 0,\n  avg_prod_mo: 0,\n  avg_coll_mo: 0,\n  budgeted_bl: 0,\n  budgeted_gl: 0,\n  budgeted_rl: 0,\n  budgeted_balance: 0,\n  average: {\n    prod_per_month: 0,\n    collections_per_month: 0,\n    pct_collections_per_month: 0,\n    sales_per_month: 0,\n    total_per_ytd: 0,\n  },\n  budget: {\n    blue_line: 0,\n    green_line: 0,\n    red_line: 0,\n    balance: 0,\n  },\n  total: {\n    coll_ytd: 0,\n    prod_ytd: 0,\n    prod_per_ytd: 0,\n    sales_per_ytd: 0,\n  },\n  profit: 0,\n  avg_total_ytd: 0,\n  avg_prod_ytd: 0,\n  percentage_of_total: {\n    month: 0,\n    ytd: 0,\n  },\n  hyg_prod_mo: 0,\n  receivables: {\n    amount: 0,\n    percentage_of_production: 0,\n  },\n};\n\nconst ReportingContainer = () => {\n  const [filter, setFilter] = useState({\n    month: null,\n    year: null,\n    studentId: null,\n    dateValue: [{}],\n    type: 'pmcr_current_month',\n  });\n  const [compRef, setCompRef] = useState({});\n  const [formStyle, setFormStyle] = useState('pmcr_current_month');\n  const [reportData, setReportData] = useState(DEFAULT_REPORT);\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n  };\n\n  const reportSevenColNewPatients = [\n    {\n      title: 'AGE',\n      dataIndex: 'age',\n      key: 'age',\n\n      render: (value) => {\n        switch (value) {\n          case '6_to_20':\n            return '6-20';\n          case '21_to_40':\n            return '21-40';\n          case '41_to_more':\n            return '45+';\n          case 'total':\n            return 'Total New';\n          default:\n            return '';\n        }\n      },\n    },\n    {\n      title: 'Current Mo.',\n      dataIndex: 'current_mo',\n      key: 'current_mo',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_current_mo',\n      key: 'percentage_of_current_mo',\n      render: (value, obj) => decFormatterNumber(value, obj.age !== 'total'),\n      width: '80px',\n    },\n    {\n      title: 'YTD',\n      dataIndex: 'ytd',\n      key: 'ytd',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_ytd',\n      key: 'percentage_of_ytd',\n      render: (value, obj) => decFormatterNumber(value, obj.age !== 'total'),\n      width: '80px',\n    },\n    {\n      title: 'AVG/Mo',\n      dataIndex: 'avg_per_month',\n      key: 'avg_per_month',\n      render: (value) => decFormatterNumber(value),\n    },\n  ];\n  const reportSevenColPatientRef = [\n    {\n      name: '',\n      dataIndex: 'name',\n      key: 'name',\n      render: (value) => {\n        switch (value) {\n          case 'referred_by_pts':\n            return 'Referred by Pts.';\n          case 'referred_by_drs':\n            return 'Referred by Drs.';\n          case 'total':\n            return 'Total Referrals';\n          default:\n            return '';\n        }\n      },\n    },\n    {\n      title: 'Current Mo.',\n      dataIndex: 'current_mo',\n      key: 'current_mo',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_current_mo',\n      key: 'percentage_of_current_mo',\n      render: (value, obj) => decFormatterNumber(value, obj.name !== 'total'),\n      width: '80px',\n    },\n    {\n      title: 'YTD',\n      dataIndex: 'ytd',\n      key: 'ytd',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_ytd',\n      key: 'percentage_of_ytd',\n      render: (value, obj) => decFormatterNumber(value, obj.name !== 'total'),\n      width: '80px',\n    },\n  ];\n  const reportSevenColCasePresent = [\n    {\n      title: '',\n      dataIndex: 'name',\n      key: 'name',\n      render: (value) => {\n        switch (value) {\n          case 'case_ratio':\n            return 'Case Ratio';\n          case 'informal_ratio':\n            return 'Informal Ratio';\n          case 'recare_ratio':\n            return 'Recare Ratio';\n          default:\n            return '';\n        }\n      },\n    },\n    {\n      title: 'Current % Cases',\n      dataIndex: 'current_percentage_of_cases',\n      key: 'current_percentage_of_cases',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: 'Current % Dollars',\n      dataIndex: 'current_percentage_of_dollars',\n      key: 'current_percentage_of_dollars',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: 'YTD % Cases',\n      dataIndex: 'ytd_percentage_of_cases',\n      key: 'ytd_percentage_of_cases',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: 'YTD % Dollars',\n      dataIndex: 'ytd_percentage_of_dollars',\n      key: 'ytd_percentage_of_dollars',\n      render: (value) => decFormatterNumber(value),\n    },\n  ];\n  const reportSevenColPatientVisitDoc = [\n    {\n      title: 'Doctors',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Current Mo.',\n      dataIndex: 'current_mo',\n      key: 'current_mo',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_current_mo',\n      key: 'percentage_of_current_mo',\n      render: (value, obj) => decFormatterNumber(value, obj.name !== 'Total'),\n      width: '80px',\n    },\n    {\n      title: 'YTD',\n      dataIndex: 'ytd',\n      key: 'ytd',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_ytd',\n      key: 'percentage_of_ytd',\n      render: (value, obj) => decFormatterNumber(value, obj.name !== 'Total'),\n      width: '80px',\n    },\n    {\n      title: 'AVG/Mo',\n      dataIndex: 'avg_per_month',\n      key: 'avg_per_month',\n      render: (value) => decFormatterNumber(value),\n    },\n  ];\n  const reportSevenColPatientVisitHyg = [\n    {\n      title: 'Hygienist',\n      dataIndex: 'name',\n      key: 'name',\n      width: '25%',\n    },\n    {\n      title: 'Current Mo.',\n      dataIndex: 'current_mo',\n      key: 'current_mo',\n      render: (value) => decFormatterNumber(value),\n      width: '20%',\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_current_mo',\n      key: 'percentage_of_current_mo',\n      render: (value, obj) => decFormatterNumber(value, obj.name !== 'Total'),\n      width: '80px',\n    },\n    {\n      title: 'YTD',\n      dataIndex: 'ytd',\n      key: 'ytd',\n      width: '20%',\n      render: (value) => decFormatterNumber(value),\n    },\n    {\n      title: '%',\n      dataIndex: 'percentage_of_ytd',\n      key: 'percentage_of_ytd',\n      render: (value, obj) => decFormatterNumber(value, obj.name !== 'Total'),\n      width: '80px',\n    },\n    {\n      title: 'AVG/Mo',\n      dataIndex: 'avg_per_month',\n      key: 'avg_per_month',\n      render: (value) => decFormatterNumber(value),\n    },\n  ];\n\n  const report6Cols = [\n    {\n      title: 'DOCTOR HOURS',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: `CURRENT MONTH: ${moment(filter.dateValue[0]).format(\n        'MM---YYYY',\n      )}`,\n      children: [\n        {\n          title: 'WORKED',\n          dataIndex: 'worked',\n          key: 'worked',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$',\n          dataIndex: 'prod',\n          key: 'prod',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'WRKD',\n          dataIndex: 'wrkd',\n          key: 'wrkd',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD/HR AVAIL',\n          dataIndex: 'avail',\n          key: 'avail',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$ LOST',\n          dataIndex: 'lost',\n          key: 'lost',\n          render: (value) => formatCurrency(value),\n        },\n      ],\n    },\n    { title: '', dataIndex: '', key: '' },\n    {\n      title: 'YTD AVG/MO',\n      children: [\n        {\n          title: 'WORKED',\n          dataIndex: 'avg_worked',\n          key: 'avg_worked',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$',\n          dataIndex: 'avg_prod',\n          key: 'avg_prod',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'WRKD',\n          dataIndex: 'avg_wrkd',\n          key: 'avg_wrkd',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD/HR AVAIL',\n          dataIndex: 'avg_avail',\n          key: 'avg_avail',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$ LOST',\n          dataIndex: 'avg_lost',\n          key: 'avg_lost',\n          render: (value) => formatCurrency(value),\n        },\n      ],\n    },\n  ];\n  const report6HygCols = [\n    {\n      title: 'HYG HOURS',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: `CURRENT MONTH: ${moment(filter.dateValue[0]).format(\n        'MM---YYYY',\n      )}`,\n      children: [\n        {\n          title: 'WORKED',\n          dataIndex: 'worked',\n          key: 'worked',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$',\n          dataIndex: 'prod',\n          key: 'prod',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'WRKD',\n          dataIndex: 'wrkd',\n          key: 'wrkd',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD/HR AVAIL',\n          dataIndex: 'avail',\n          key: 'avail',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$ LOST',\n          dataIndex: 'lost',\n          key: 'lost',\n          render: (value) => formatCurrency(value),\n        },\n      ],\n    },\n    { title: '', dataIndex: '', key: '' },\n    {\n      title: 'YTD AVG/MO',\n      children: [\n        {\n          title: 'WORKED',\n          dataIndex: 'avg_worked',\n          key: 'avg_worked',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$',\n          dataIndex: 'avg_prod',\n          key: 'avg_prod',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'WRKD',\n          dataIndex: 'avg_wrkd',\n          key: 'avg_wrkd',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD/HR AVAIL',\n          dataIndex: 'avg_avail',\n          key: 'avg_avail',\n          render: (value) => formatCurrency(value),\n        },\n        {\n          title: 'PROD$ LOST',\n          dataIndex: 'avg_lost',\n          key: 'avg_lost',\n          render: (value) => formatCurrency(value),\n        },\n      ],\n    },\n  ];\n  const report5Cols = [\n    {\n      title: 'DOCTOR HOURS',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: `CURRENT MONTH: ${moment(filter.dateValue[0]).format(\n        'MM---YYYY',\n      )}`,\n      children: [\n        {\n          title: 'AVAIL',\n          dataIndex: 'avail',\n          key: 'avail',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'SCHED',\n          dataIndex: 'sched',\n          key: 'sched',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'CANC',\n          dataIndex: 'canc',\n          key: 'canc',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'RECOV',\n          dataIndex: 'recov',\n          key: 'recov',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'WORKED',\n          dataIndex: 'worked',\n          key: 'worked',\n          render: (value) => decFormatterNumber(value),\n        },\n      ],\n    },\n    { title: '', dataIndex: '', key: '' },\n    {\n      title: 'YTD AVG/MO',\n      children: [\n        {\n          title: 'AVAIL',\n          dataIndex: 'avg_avail',\n          key: 'avg_avail',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'SCHED',\n          dataIndex: 'avg_sched',\n          key: 'avg_sched',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'CANC',\n          dataIndex: 'avg_canc',\n          key: 'avg_canc',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'RECOV',\n          dataIndex: 'avg_recov',\n          key: 'avg_recov',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'WORKED',\n          dataIndex: 'avg_worked',\n          key: 'avg_worked',\n          render: (value) => decFormatterNumber(value),\n        },\n      ],\n    },\n  ];\n  const report5HygCols = [\n    {\n      title: 'HYGIENE HOURS',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: `CURRENT MONTH: ${moment(filter.dateValue[0]).format(\n        'MM---YYYY',\n      )}`,\n      children: [\n        {\n          title: 'AVAIL',\n          dataIndex: 'avail',\n          key: 'avail',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'SCHED',\n          dataIndex: 'sched',\n          key: 'sched',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'CANC',\n          dataIndex: 'canc',\n          key: 'canc',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'RECOV',\n          dataIndex: 'recov',\n          key: 'recov',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'WORKED',\n          dataIndex: 'worked',\n          key: 'worked',\n          render: (value) => decFormatterNumber(value),\n        },\n      ],\n    },\n    { title: '', dataIndex: '', key: '' },\n    {\n      title: 'YTD AVG/MO',\n      children: [\n        {\n          title: 'AVAIL',\n          dataIndex: 'avg_avail',\n          key: 'avg_avail',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'SCHED',\n          dataIndex: 'avg_sched',\n          key: 'avg_sched',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'CANC',\n          dataIndex: 'avg_canc',\n          key: 'avg_canc',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'RECOV',\n          dataIndex: 'avg_recov',\n          key: 'avg_recov',\n          render: (value) => decFormatterNumber(value),\n        },\n        {\n          title: 'WORKED',\n          dataIndex: 'avg_worked',\n          key: 'avg_worked',\n          render: (value) => decFormatterNumber(value),\n        },\n      ],\n    },\n  ];\n\n  const columns = [\n    {\n      title: 'CATEGORY',\n      dataIndex: 'category',\n      key: 'category',\n    },\n    {\n      title: 'TOTAL AMOUNT',\n      dataIndex: 'totalAmount',\n      key: 'totalAmount',\n      render: (value) => formatCurrency(value),\n    },\n    {\n      title: '% OF COLLECTIONS',\n      dataIndex: 'collectionsPercent',\n      key: 'collectionsPercent',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n    {\n      title: 'INTERIM BUDGET',\n      dataIndex: 'interimBudget',\n      key: 'interimBudget',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n    {\n      title: 'INTERIM VARIANCE',\n      dataIndex: 'interimVariance',\n      key: 'interimVariance',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n    {\n      title: 'CPD TARGET',\n      dataIndex: 'cpdTarget',\n      key: 'cpdTarget',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n    {\n      title: 'CPD VARIANCE',\n      dataIndex: 'cpdVariance',\n      key: 'cpdVariance',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n  ];\n  const columnsHygiene = [\n    {\n      title: 'CATEGORY',\n      dataIndex: 'category',\n      key: 'category',\n    },\n    {\n      title: 'CURRENT EXPENSES',\n      dataIndex: 'current_expenses',\n      key: 'current_expenses',\n      render: (text) => <span>{formatCurrency(text)}</span>,\n    },\n    {\n      title: '% OF PRODUCTION',\n      dataIndex: 'pct_of_productions',\n      key: 'pct_of_productions',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n    {\n      title: 'HYGIENE TARGET',\n      dataIndex: 'hygiene_target',\n      key: 'hygiene_target',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n    {\n      title: 'VARIANCE',\n      dataIndex: 'variance',\n      key: 'variance',\n\n      render: (text) => <span>{decFormatterNumber(text)}%</span>,\n    },\n  ];\n  const onFilterChange = async (data) => {\n    setFilter(data);\n    setFormStyle(data.type);\n    const temp = await fetchReport(data);\n    let mapped = [];\n    if (\n      data.type === 'pmcr_current_month' ||\n      data.type === 'pmcr_ytd_avg_month'\n    ) {\n      mapped = [\n        {\n          key: '1',\n          category: 'Staff',\n          totalAmount: temp?.total_amount.staff,\n          collectionsPercent: temp?.percentage_of_collections.staff,\n          interimBudget: temp?.interim_budget.staff,\n          interimVariance: temp?.interim_budget_variance.staff,\n          cpdTarget: temp?.cpd_target.staff,\n          cpdVariance: temp?.cpd_variance.staff,\n        },\n        {\n          key: '2',\n          category: 'Occupancy',\n          totalAmount: temp?.total_amount.occupancy,\n          collectionsPercent: temp?.percentage_of_collections.occupancy,\n          interimBudget: temp?.interim_budget.occupancy,\n          interimVariance: temp?.interim_budget_variance.occupancy,\n          cpdTarget: temp?.cpd_target.occupancy,\n          cpdVariance: temp?.cpd_variance.occupancy,\n        },\n        {\n          key: '3',\n          category: 'H&P Resources',\n          totalAmount: temp?.total_amount.hp_resource,\n          collectionsPercent: temp?.percentage_of_collections.hp_resource,\n          interimBudget: temp?.interim_budget.hp_resource,\n          interimVariance: temp?.interim_budget_variance.hp_resource,\n          cpdTarget: temp?.cpd_target.hp_resource,\n          cpdVariance: temp?.cpd_variance.hp_resource,\n        },\n        {\n          key: '4',\n          category: 'Supplies',\n          totalAmount: temp?.total_amount.supplies,\n          collectionsPercent: temp?.percentage_of_collections.supplies,\n          interimBudget: temp?.interim_budget.supplies,\n          interimVariance: temp?.interim_budget_variance.supplies,\n          cpdTarget: temp?.cpd_target.supplies,\n          cpdVariance: temp?.cpd_variance.supplies,\n        },\n        // {\n        //   key: '5',\n        //   category: 'Meal & Entertainment',\n        //   totalAmount: temp?.total_amount.meal_and_entertainment,\n        //   collectionsPercent:\n        //     temp?.percentage_of_collections.meal_and_entertainment,\n        //   interimBudget: temp?.interim_budget.meal_and_entertainment,\n        //   interimVariance: temp?.interim_budget_variance.meal_and_entertainment,\n        //   cpdTarget: temp?.cpd_target.meal_and_entertainment,\n        //   cpdVariance: temp?.cpd_variance.meal_and_entertainment,\n        // },\n        {\n          key: '6',\n          category: 'Laboratory',\n          totalAmount: temp?.total_amount.laboratory,\n          collectionsPercent: temp?.percentage_of_collections.laboratory,\n          interimBudget: temp?.interim_budget.laboratory,\n          interimVariance: temp?.interim_budget_variance.laboratory,\n          cpdTarget: temp?.cpd_target.laboratory,\n          cpdVariance: temp?.cpd_variance.laboratory,\n        },\n        {\n          key: '7',\n          category: 'Services',\n          totalAmount: temp?.total_amount.services,\n          collectionsPercent: temp?.percentage_of_collections.services,\n          interimBudget: temp?.interim_budget.services,\n          interimVariance: temp?.interim_budget_variance.services,\n          cpdTarget: temp?.cpd_target.services,\n          cpdVariance: temp?.cpd_variance.services,\n        },\n        {\n          key: '8',\n          category: 'Mktng/Sales',\n          totalAmount: temp?.total_amount.marketing_sales,\n          collectionsPercent: temp?.percentage_of_collections.marketing_sales,\n          interimBudget: temp?.interim_budget.marketing_sales,\n          interimVariance: temp?.interim_budget_variance.marketing_sales,\n          cpdTarget: temp?.cpd_target.marketing_sales,\n          cpdVariance: temp?.cpd_variance.marketing_sales,\n        },\n        {\n          key: '9',\n          category: 'Overhead Total',\n          totalAmount: temp?.total_amount.overhead_total,\n          collectionsPercent: temp?.percentage_of_collections.overhead_total,\n          interimBudget: temp?.interim_budget.overhead_total,\n          interimVariance: temp?.interim_budget_variance.overhead_total,\n          cpdTarget: temp?.cpd_target.overhead_total,\n          cpdVariance: temp?.cpd_variance.overhead_total,\n        },\n        {\n          key: '10',\n          category: 'DRS Salaries',\n          totalAmount: temp?.total_amount.drs_salaries,\n          collectionsPercent: temp?.percentage_of_collections.drs_salaries,\n          interimBudget: temp?.interim_budget.drs_salaries,\n          interimVariance: temp?.interim_budget_variance.drs_salaries,\n          cpdTarget: temp?.cpd_target.drs_salaries,\n          cpdVariance: temp?.cpd_variance.drs_salaries,\n        },\n        {\n          key: '11',\n          category: 'All Expenses',\n          totalAmount: temp?.total_amount.all_expenses,\n          collectionsPercent: temp?.percentage_of_collections.all_expenses,\n          interimBudget: temp?.interim_budget.all_expenses,\n          interimVariance: temp?.interim_budget_variance.all_expenses,\n          cpdTarget: temp?.cpd_target.all_expenses,\n          cpdVariance: temp?.cpd_variance.all_expenses,\n        },\n      ];\n      setReportData({\n        ...DEFAULT_REPORT,\n        ...temp,\n        table: mapped,\n      });\n    }\n    let mappedHygiene = [];\n    if (\n      data.type === 'pmcr_hygiene_current_month' ||\n      data.type === 'pmcr_hygiene_ytd_avg_month'\n    ) {\n      mappedHygiene = [\n        {\n          key: '1',\n          category: 'Staff',\n          current_expenses: temp.current_expenses.staff,\n          pct_of_productions: temp.percentage_of_productions.staff,\n          hygiene_target: temp.hygiene_target.staff,\n          variance: temp.variance.staff,\n        },\n        {\n          key: '2',\n          category: 'Occupancy',\n          current_expenses: temp.current_expenses.occupancy,\n          pct_of_productions: temp.percentage_of_productions.occupancy,\n          hygiene_target: temp.hygiene_target.occupancy,\n          variance: temp.variance.occupancy,\n        },\n        {\n          key: '3',\n          category: 'H&P Resources',\n          current_expenses: temp.current_expenses.hp_resource,\n          pct_of_productions: temp.percentage_of_productions.hp_resource,\n          hygiene_target: temp.hygiene_target.hp_resource,\n          variance: temp.variance.hp_resource,\n        },\n        {\n          key: '4',\n          category: 'Supplies',\n          current_expenses: temp.current_expenses.supplies,\n          pct_of_productions: temp.percentage_of_productions.supplies,\n          hygiene_target: temp.hygiene_target.supplies,\n          variance: temp.variance.supplies,\n        },\n        {\n          key: '5',\n          category: 'Products',\n          current_expenses: temp.current_expenses.products,\n          pct_of_productions: temp.percentage_of_productions.products,\n          hygiene_target: temp.hygiene_target.products,\n          variance: temp.variance.products,\n        },\n        {\n          key: '6',\n          category: 'Services',\n          current_expenses: temp.current_expenses.services,\n          pct_of_productions: temp.percentage_of_productions.services,\n          hygiene_target: temp.hygiene_target.services,\n          variance: temp.variance.services,\n        },\n        {\n          key: '7',\n          category: 'Mktng/Sales',\n          current_expenses: temp.current_expenses.marketing_sales,\n          pct_of_productions: temp.percentage_of_productions.marketing_sales,\n          hygiene_target: temp.hygiene_target.marketing_sales,\n          variance: temp.variance.marketing_sales,\n        },\n        {\n          key: '8',\n          category: 'Overhead Total',\n          current_expenses: temp.current_expenses.overhead_total,\n          pct_of_productions: temp.percentage_of_productions.overhead_total,\n          hygiene_target: temp.hygiene_target.overhead_total,\n          variance: temp.variance.overhead_total,\n        },\n        {\n          key: '9',\n          category: 'HYG Salaries',\n          current_expenses: temp.current_expenses.hyg_salaries,\n          pct_of_productions: temp.percentage_of_productions.hyg_salaries,\n          hygiene_target: temp.hygiene_target.hyg_salaries,\n          variance: temp.variance.hyg_salaries,\n        },\n        {\n          key: '10',\n          category: 'All Expenses',\n          current_expenses: temp.current_expenses.all_expenses,\n          pct_of_productions: temp.percentage_of_productions.all_expenses,\n          hygiene_target: temp.hygiene_target.all_expenses,\n          variance: temp.variance.all_expenses,\n        },\n      ];\n      setReportData({\n        ...DEFAULT_REPORT,\n        ...temp,\n        table: mappedHygiene,\n      });\n    }\n    if (data.type === 'prod_analysis_time_stats') {\n      setReportData({\n        ...DEFAULT_REPORT,\n        reportFive: temp,\n      });\n    }\n    if (data.type === 'prod_analysis_time_dollars') {\n      setReportData({\n        ...DEFAULT_REPORT,\n        reportSix: temp,\n      });\n    }\n    if (data.type === 'prod_analysis_pt_activity') {\n      setReportData({\n        ...DEFAULT_REPORT,\n        reportSeven: temp,\n      });\n    }\n  };\n  const fetchReport = async (args) => {\n    const res = await getReporting(args);\n    return res;\n  };\n\n  const renderName = (arr) => {\n    const { studentName } = filter;\n    // const res = arr.reduce((prev, acc) => `${prev} ${acc.name}`, '');\n    return studentName;\n  };\n\n  const renderStyleRow = (record, index) => {\n    if (index == 8) {\n      return 'dashed_row';\n    }\n    if (record.name == 'Total') {\n      return 'bluerow_style';\n    }\n    if (record.grand_total == 'GRAND TOTAL') {\n      return 'bluerow_style';\n    }\n\n    if (\n      record.category == 'Overhead Total' ||\n      record.category == 'DRS Salaries'\n    ) {\n      return 'dashed_row';\n    }\n    if (record.category == 'All Expenses') {\n      return 'ae_style';\n    }\n\n    if (\n      record.age == 'total' ||\n      record.name == 'total' ||\n      record.title == 'Total Referrals' ||\n      record.doctors == 'Total Dr. Visits' ||\n      record.hygienist == 'Total Hyg Visits'\n    ) {\n      return 'dashed_row';\n    }\n    return '';\n  };\n\n  const renderFormType1 = () => (\n    <div\n      className=\"search-result-list\"\n      // eslint-disable-next-line no-return-assign\n      ref={(el) => setCompRef(el)}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <div className=\"mb-10\">\n          {filter.type === 'pmcr_current_month' ? (\n            <Title style={{ color: 'blue' }} level={3}>\n              PROFITABILITY MANAGEMENT CONTROLLER REPORT\n            </Title>\n          ) : (\n            <>\n              <Title style={{ color: 'blue' }} level={3}>\n                PROFITABILITY MANAGEMENT CONTROLLER REPORT\n              </Title>\n              <Title level={3}>YEAR TO DATE/Average Month</Title>\n            </>\n          )}\n        </div>\n        <br />\n        <div>\n          <Text strong>\n            FOR: &nbsp; {renderName(reportData?.prod_hour_scheduled)}\n          </Text>\n          <Text className=\"border-bottom\">&nbsp;</Text>\n        </div>\n        {filter.type === 'pmcr_current_month' ? (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue).format('MMMM')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue).format('YYYY')}\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                Case Ratio: &nbsp; {reportData?.header_info?.case_ratio}%{' '}\n              </Col>\n              <Col span={12}>\n                Recare Ratio: &nbsp; {reportData?.header_info?.recare_ratio}%{' '}\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>Case Ratio: &nbsp; 0% </Col>\n              <Col span={12}>Recare Ratio: &nbsp; 0% </Col>\n            </Row>\n          </>\n        )}\n      </div>\n\n      <br />\n\n      <Table\n        rowClassName={renderStyleRow}\n        size=\"small\"\n        pagination={false}\n        columns={columns}\n        dataSource={reportData.table}\n        onChange={handleChange}\n      />\n      <br />\n\n      <div style={{ padding: '0 8px' }}>\n        <Row gutter={24}>\n          <Col span={12}>\n            <Row className=\"mb-15\" style={{ color: 'purple' }}>\n              <Col span={8}>\n                <p>UNPAID BILLS</p>\n              </Col>\n              <Col span={15} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.unpaid_bills)}</p>\n              </Col>\n            </Row>\n            {filter.type !== 'pmcr_ytd_avg_month' && (\n              <Row className=\"mb-15\" style={{ color: 'blue' }}>\n                <Col span={8}>\n                  <p>Production</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.production)}</p>\n                </Col>\n              </Row>\n            )}\n            {filter.type === 'pmcr_current_month' ? (\n              <>\n                <Row className=\"mb-15\">\n                  <Col span={8}>\n                    <p>Collections</p>\n                  </Col>\n                  <Col span={12} className=\"border-bottom\">\n                    <p>{formatCurrency(reportData.collections)}</p>\n                  </Col>\n                </Row>\n                <Row className=\"mb-15\">\n                  <Col offset={8} span={4} className=\"border-bottom\">\n                    <p>{reportData?.percentage_of_production}</p>\n                  </Col>\n                  <p style={{ marginLeft: '8px' }}>% of Production</p>\n                </Row>\n              </>\n            ) : (\n              <>\n                <Row className=\"mb-15\" style={{ color: 'blue' }}>\n                  <Col span={8}>\n                    <p>Avg. Prod/Mo:</p>\n                  </Col>\n                  <Col span={12} className=\"border-bottom\">\n                    <p>{formatCurrency(reportData.average.prod_per_month)}</p>\n                  </Col>\n                </Row>\n                <Row className=\"mb-15\">\n                  <Col span={8}>\n                    <p>Avg Coll/Mo</p>\n                  </Col>\n                  <Col span={12} className=\"border-bottom\">\n                    <p>\n                      {formatCurrency(reportData.average.collections_per_month)}\n                    </p>\n                  </Col>\n                </Row>\n                <Row className=\"mb-15\">\n                  <Col offset={8} span={4} className=\"border-bottom\">\n                    <p>{reportData.percentage_of_production}</p>\n                  </Col>\n                  <Col span={8}>\n                    <p>% of Production</p>\n                  </Col>\n                </Row>\n              </>\n            )}\n            <Row className=\"mb-15\" style={{ color: 'red' }}>\n              <Col span={8}>\n                <p>Actual R/L</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.actual.rl)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\" style={{ color: 'blue' }}>\n              <Col span={8}>\n                <p>Actual B/L</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.actual.bl)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\" style={{ color: 'blue' }}>\n              <Col offset=\"1\" span={7}>\n                <p>Debt Payments</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.debt_payments)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\" style={{ color: 'blue' }}>\n              <Col offset=\"1\" span={7}>\n                <p>Net Solv</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>{formatCurrency(reportData?.actual?.bl_detail?.net_solv)}</p>\n              </Col>\n              <Col span={5} className=\"border-bottom\">\n                <p>{reportData?.actual?.bl_detail?.percentage_of_net_solv}%</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>Actual G/L</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.actual.gl)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>Net ROI Funds</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>{formatCurrency(reportData?.net_roi_funds)}</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>\n                  {decFormatterNumber(reportData.net_roi_funds_percentage)}%\n                </p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>Actual Bal</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>({formatCurrency(reportData.actual.bal)})</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>{decFormatterNumber(reportData.actual.bal_percentages)} %</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>Receivables</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>{formatCurrency(reportData?.receivables?.amount)}</p>\n              </Col>\n              <Col span={8} className=\"border-bottom\">\n                <p>{reportData?.receivables?.percentage_of_production} % of Production</p>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col span={12}>\n            <Row className=\"mb-15\" style={{ color: 'purple' }}>\n              <Col span={12} style={{ textAlign: 'center' }}>\n                <p>TOTAL SHORT TERM DEBT</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.total_short_term_debt)}</p>\n              </Col>\n            </Row>\n            {filter.type === 'pmcr_current_month' ? (\n              <>\n                <Row className=\"mb-15\" style={{ color: 'blue' }}>\n                  <Col style={{ textAlign: 'right' }} span={10}>\n                    <p>Avg. Prod/Mo</p>\n                  </Col>\n                  <Col span={12} offset={2} className=\"border-bottom\">\n                    <p>{formatCurrency(reportData.average.prod_per_month)}</p>\n                  </Col>\n                </Row>\n                <Row className=\"mb-15\">\n                  <Col style={{ textAlign: 'right' }} span={10}>\n                    <p>Avg Coll/Mo</p>\n                  </Col>\n                  <Col span={12} offset={2} className=\"border-bottom\">\n                    <p>\n                      {formatCurrency(reportData.average.collections_per_month)}\n                    </p>\n                    {/* <p>% of Production</p> */}\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <>\n                <Row className=\"mb-15\" style={{ color: 'blue' }}>\n                  <Col style={{ textAlign: 'right' }} span={10}>\n                    <p>Total Prod. YTD:</p>\n                  </Col>\n                  <Col span={12} offset={2} className=\"border-bottom\">\n                    <p>{formatCurrency(reportData.total.prod_ytd)}</p>\n                  </Col>\n                </Row>\n                <Row className=\"mb-15\">\n                  <Col style={{ textAlign: 'right' }} span={10}>\n                    <p>Total Coll YTD</p>\n                  </Col>\n                  <Col span={12} offset={2} className=\"border-bottom\">\n                    <p>{formatCurrency(reportData.total.coll_ytd)}</p>\n                  </Col>\n                </Row>\n              </>\n            )}\n            <Row className=\"mb-15\" style={{ color: 'red', marginTop: '25px' }}>\n              <Col style={{ textAlign: 'right' }} span={10}>\n                <p>Budgeted R/L</p>\n              </Col>\n              <Col span={12} offset={2} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.budget.red_line)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\" style={{ color: 'blue' }}>\n              <Col style={{ textAlign: 'right' }} span={10}>\n                <p>Budgeted B/L</p>\n              </Col>\n              <Col span={12} offset={2} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.budget.blue_line)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\" style={{ color: 'green' }}>\n              <Col style={{ textAlign: 'right' }} span={10}>\n                <p>Budgeted G/L</p>\n              </Col>\n              <Col span={12} offset={2} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.budget.green_line)}</p>\n              </Col>\n            </Row>\n\n            <Row className=\"mb-15\">\n              <Col style={{ textAlign: 'right' }} span={10}>\n                <p>Budgeted Balance</p>\n              </Col>\n              <Col span={12} offset={2} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.budget.balance)}</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={12}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              Prod/Hour Scheduled\n            </div>\n            <Table\n              size=\"small\"\n              showHeader={false}\n              pagination={false}\n              columns={[\n                {\n                  title: '',\n                  dataIndex: 'name',\n                  key: 'name',\n\n                  render: (text) => {\n                    if (text) {\n                      return (\n                        <span style={{ color: 'blue' }}>\n                          {filter.type === 'pmcr_current_month' ||\n                            filter.type === 'pmcr_ytd_avg_month'\n                            ? `Dr. ${text}`\n                            : text}\n                        </span>\n                      );\n                    }\n                    return '';\n                  },\n                },\n                {\n                  title: '',\n                  dataIndex: 'value',\n                  key: 'value',\n\n                  render: (text) => (\n                    <span style={{ color: 'blue' }}>\n                      {formatCurrency(text)}\n                    </span>\n                  ),\n                },\n              ]}\n              dataSource={reportData.prod_hour_scheduled}\n            />\n          </Col>\n          <Col span={12}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              Prod/Patient\n            </div>\n            <Table\n              size=\"small\"\n              showHeader={false}\n              pagination={false}\n              columns={[\n                {\n                  title: '',\n                  dataIndex: 'name',\n                  key: 'name',\n\n                  render: (text) => {\n                    if (text) {\n                      return (\n                        <span style={{ color: 'blue' }}>\n                          {filter.type === 'pmcr_current_month' ||\n                            filter.type === 'pmcr_ytd_avg_month'\n                            ? `Dr. ${text}`\n                            : text}\n                        </span>\n                      );\n                    }\n                    return '';\n                  },\n                },\n                {\n                  title: '',\n                  dataIndex: 'value',\n                  key: 'value',\n\n                  render: (text) => (\n                    <span style={{ color: 'blue' }}>\n                      {formatCurrency(text)}\n                    </span>\n                  ),\n                },\n              ]}\n              dataSource={reportData.prod_patient_visits}\n            />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n  const renderFormHygiene = () => (\n    <div\n      className=\"search-result-list\"\n      // eslint-disable-next-line no-return-assign\n      ref={(el) => setCompRef(el)}\n    >\n      <div style={{ textAlign: 'center' }}>\n        {filter.type === 'pmcr_hygiene_current_month' ? (\n          <div className=\"mb-10\">\n            <Title style={{ color: 'blue' }} level={3}>\n              PROFITABILITY MANAGEMENT CONTROLLER REPORT\n            </Title>\n            <Title level={3}>HYGIENE AS A PROFIT CENTER</Title>\n          </div>\n        ) : (\n          <div className=\"mb-10\">\n            <Title style={{ color: 'blue' }} level={3}>\n              PROFITABILITY MANAGEMENT CONTROLLER REPORT\n            </Title>\n            <Title level={3}>HYGIENE AS A PROFIT CENTER</Title>\n            <Title level={3}>YEAR TO DATE/Average Month</Title>\n          </div>\n        )}\n        <div>\n          <Text className=\"border-bottom\">\n            {filter.month && filter.year && `${filter.month}/${filter.year}`}\n          </Text>\n        </div>\n        <br />\n        <div>\n          {/* <Text strong>FOR: &nbsp; {reportData?.prod_hour[0]?.name}</Text> */}\n          <Text strong>FOR: &nbsp; {renderName(reportData?.prod_hour)}</Text>\n          <Text className=\"border-bottom\">&nbsp;</Text>\n        </div>\n        {filter.type === 'pmcr_hygiene_current_month' ? (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue).format('MMMM')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue).format('YYYY')}\n              </Col>\n            </Row>\n            <Row>\n              <Col offset={12} span={12}>\n                Recare Ratio: &nbsp; {reportData.header_info.recare_ratio}%{' '}\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n            <Row>\n              <Col offset={12} span={12}>\n                Recare Ratio: &nbsp; 0%{' '}\n              </Col>\n            </Row>\n          </>\n        )}\n      </div>\n\n      <br />\n\n      <br />\n\n      <Table\n        rowClassName={renderStyleRow}\n        size=\"small\"\n        pagination={false}\n        columns={columnsHygiene}\n        dataSource={reportData.table}\n        onChange={handleChange}\n      />\n      <br />\n\n      <div style={{ padding: '0 8px' }}>\n        <Row gutter={24}>\n          <Col span={12}>\n            {filter.type === 'pmcr_hygiene_current_month' ? (\n              <Row className=\"mb-15\" style={{ color: 'blue ' }}>\n                <Col span={8}>\n                  <p>Hyg. Prod/Mo:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.hyg_prod_mo)}</p>\n                </Col>\n              </Row>\n            ) : (\n              <Row className=\"mb-15\" style={{ color: 'blue ' }}>\n                <Col span={8}>\n                  <p>Avg. Prod/Mo</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.hyg_prod_mo)}</p>\n                </Col>\n              </Row>\n            )}\n            {filter.type === 'pmcr_hygiene_current_month' ? (\n              <Row className=\"mb-15\">\n                <Col span={8}>\n                  <p>Hyg Sales/Mo:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.hyg_sales_mo)}</p>\n                </Col>\n              </Row>\n            ) : (\n              <Row className=\"mb-15\">\n                <Col span={8}>\n                  <p>Avg Sales/Mo:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>\n                    {formatCurrency(\n                      reportData.average.sales_per_month\n                        ? reportData.average.sales_per_month\n                        : 0,\n                    )}\n                  </p>\n                </Col>\n              </Row>\n            )}\n            {filter.type === 'pmcr_hygiene_current_month' ? (\n              <Row className=\"mb-15\">\n                <Col span={8}>\n                  <p>Hyg Total/Mo:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.hyg_total_mo)}</p>\n                </Col>\n              </Row>\n            ) : (\n              <Row className=\"mb-15\">\n                <Col span={8}>\n                  <p>Avg Total/Mo:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>\n                    {formatCurrency(\n                      reportData.average.total_per_month\n                        ? reportData.average.total_per_month\n                        : 0,\n                    )}\n                  </p>\n                </Col>\n              </Row>\n            )}\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>% of Total</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{reportData.percentage_of_total.month}%</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>Profit</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{formatCurrency(reportData.profit)}</p>\n              </Col>\n            </Row>\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>Patient %</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{reportData.patient}</p>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col span={12}>\n            {filter.type === 'pmcr_hygiene_current_month' ? (\n              <Row className=\"mb-15\" style={{ color: 'blue' }}>\n                <Col span={8}>\n                  <p>Avg. Prod/Ytd:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>\n                    {formatCurrency(\n                      reportData.average.prod_per_ytd\n                        ? reportData.average.prod_per_ytd\n                        : 0,\n                    )}\n                  </p>\n                </Col>\n              </Row>\n            ) : (\n              <Row className=\"mb-15\" style={{ color: 'blue' }}>\n                <Col span={8}>\n                  <p>Tot. Prod/Ytd:</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>\n                    {formatCurrency(\n                      reportData.total.prod_per_ytd\n                        ? reportData.total.prod_per_ytd\n                        : 0,\n                    )}\n                  </p>\n                </Col>\n              </Row>\n            )}\n\n            {filter.type === 'pmcr_hygiene_current_month' ? (\n              <Row className=\"mb-15\" style={{ marginTop: '55px' }}>\n                <Col span={8}>\n                  <p>Avg. Total/Ytd</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.avg_total_ytd)}</p>\n                </Col>\n              </Row>\n            ) : (\n              <Row className=\"mb-15\" style={{ marginTop: '55px' }}>\n                <Col span={8}>\n                  <p>Hyg. Total/Ytd</p>\n                </Col>\n                <Col span={12} className=\"border-bottom\">\n                  <p>{formatCurrency(reportData.avg_total_ytd)}</p>\n                </Col>\n              </Row>\n            )}\n            <Row className=\"mb-15\">\n              <Col span={8}>\n                <p>% of Total</p>\n              </Col>\n              <Col span={12} className=\"border-bottom\">\n                <p>{reportData.percentage_of_total.ytd}%</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={12}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              Prod/Hour\n            </div>\n            <Table\n              size=\"small\"\n              showHeader={false}\n              pagination={false}\n              columns={[\n                {\n                  title: '',\n                  dataIndex: 'name',\n                  key: 'name',\n\n                  render: (text) => (\n                    <span style={{ color: 'blue' }}>{text}</span>\n                  ),\n                },\n                {\n                  title: '',\n                  dataIndex: 'value',\n                  key: 'value',\n\n                  render: (text) => (\n                    <span style={{ color: 'blue' }}>\n                      {formatCurrency(text)}\n                    </span>\n                  ),\n                },\n              ]}\n              dataSource={reportData.prod_hour}\n            />\n          </Col>\n          <Col span={12}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              Prod/Patient\n            </div>\n            <Table\n              size=\"small\"\n              showHeader={false}\n              pagination={false}\n              columns={[\n                {\n                  title: '',\n                  dataIndex: 'name',\n                  key: 'name',\n\n                  render: (text) => (\n                    <span style={{ color: 'blue' }}>{text}</span>\n                  ),\n                },\n                {\n                  title: '',\n                  dataIndex: 'value',\n                  key: 'value',\n\n                  render: (text) => (\n                    <span style={{ color: 'blue' }}>\n                      {formatCurrency(text)}\n                    </span>\n                  ),\n                },\n              ]}\n              dataSource={reportData.prod_patient}\n            />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n  const renderFormFive = () => (\n    <div\n      className=\"search-result-list\"\n      // eslint-disable-next-line no-return-assign\n      ref={(el) => setCompRef(el)}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <div className=\"mb-10\">\n          {filter.type === 'prod_analysis_time_stats' ? (\n            <Title style={{ color: 'blue' }} level={3}>\n              PRODUCTIVITY ANALYSIS - TIME MANAGEMENT - STATISTICS\n            </Title>\n          ) : (\n            <></>\n          )}\n        </div>\n        <br />\n        <div>\n          <Text strong>\n            FOR: &nbsp; {reportData?.reportFive?.doctor_hours[0]?.name}\n          </Text>\n          <Text className=\"border-bottom\">&nbsp;</Text>\n        </div>\n        {filter.type === 'prod_analysis_time_stats' ? (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <></>\n        )}\n        <br />\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={report5Cols}\n          dataSource={reportData.reportFive.doctor_hours}\n          onChange={handleChange}\n        />\n        <Row style={{ marginTop: '24px', textAlign: 'left' }}>\n          <Col span={11}>Percent of Available Hrs Scheduled:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.doctor_percentage_of_available_hrs_scheduled\n                .current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.doctor_percentage_of_available_hrs_scheduled\n                .ytd_avg_month\n            }\n            %\n          </Col>\n        </Row>\n        <Row style={{ textAlign: 'left' }}>\n          <Col span={11}>Percent of Scheduled Hrs Cancelled:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.doctor_percent\n                .percentage_of_scheduled_hrs_cancelled.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.doctor_percent\n                .percentage_of_scheduled_hrs_cancelled.ytd_avg_month\n            }\n            %\n          </Col>\n        </Row>\n        <Row style={{ textAlign: 'left' }}>\n          <Col span={11}>Percent of Cancelled Hrs Recovered:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.doctor_percent\n                .percentage_of_cancelled_hrs_recovered.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.doctor_percent\n                .percentage_of_cancelled_hrs_recovered.current_month\n            }\n            %\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: '24px', textAlign: 'left' }}>\n          <Col span={11}>Percent of Dr. Capacity Used:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.doctor_percent\n                .percentage_of_dr_capacity_used.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.doctor_percent\n                .percentage_of_dr_capacity_used.current_month\n            }\n            %\n          </Col>\n        </Row>\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={report5HygCols}\n          dataSource={reportData.reportFive.hygiene_hours}\n          onChange={handleChange}\n        />\n        <Row style={{ marginTop: '24px', textAlign: 'left' }}>\n          <Col span={11}>Percent of Available Hrs Scheduled:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_available_hrs_scheduled.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_available_hrs_scheduled.ytd_avg_month\n            }\n            %\n          </Col>\n        </Row>\n        <Row style={{ textAlign: 'left' }}>\n          <Col span={11}>Percent of Scheduled Hrs Cancelled:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_scheduled_hrs_cancelled.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_scheduled_hrs_cancelled.ytd_avg_month\n            }\n            %\n          </Col>\n        </Row>\n        <Row style={{ textAlign: 'left' }}>\n          <Col span={11}>Percent of Cancelled Hrs Recovered:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_cancelled_hrs_recovered.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_cancelled_hrs_recovered.current_month\n            }\n            %\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: '24px', textAlign: 'left' }}>\n          <Col span={11}>Percent of Dr. Capacity Used:</Col>\n          <Col span={9} style={{ paddingRight: '5%' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_dr_capacity_used.current_month\n            }\n            %\n          </Col>\n          <Col span={4} style={{ textAlign: 'right', paddingRight: '34px' }}>\n            {\n              reportData.reportFive.hygiene_percent\n                .percentage_of_dr_capacity_used.current_month\n            }\n            %\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n  const renderFormSix = () => (\n    <div\n      className=\"search-result-list\"\n      // eslint-disable-next-line no-return-assign\n      ref={(el) => setCompRef(el)}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <div className=\"mb-10\">\n          {filter.type === 'prod_analysis_time_dollars' ? (\n            <Title style={{ color: 'blue' }} level={3}>\n              PRODUCTIVITY ANALYSIS - TIME MANAGEMENT - DOLLARS\n            </Title>\n          ) : (\n            <>\n              {/* <Title style={{ color: 'blue' }} level={3}>\n                PROFITABILITY MANAGEMENT CONTROLLER REPORT\n              </Title>\n              <Title level={3}>YEAR TO DATE/Average Month</Title> */}\n            </>\n          )}\n        </div>\n        <br />\n        <div>\n          <Text strong>\n            FOR: &nbsp; {reportData?.reportSix?.doctor_hours[0]?.name}\n          </Text>\n          <Text className=\"border-bottom\">&nbsp;</Text>\n        </div>\n        {filter.type === 'prod_analysis_time_dollars' ? (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <>\n            {/* <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>Case Ratio: &nbsp; 0% </Col>\n              <Col span={12}>Recare Ratio: &nbsp; 0% </Col>\n            </Row> */}\n          </>\n        )}\n        <br />\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={report6Cols}\n          dataSource={reportData.reportSix.doctor_hours}\n          onChange={handleChange}\n        />\n        <div style={{ marginTop: '24px', textAlign: 'left' }} />\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={report6HygCols}\n          dataSource={reportData.reportSix.hygiene_hours}\n          onChange={handleChange}\n        />\n        <div\n          style={{\n            height: '10px',\n            marginTop: '24px',\n            textAlign: 'left',\n            borderTop: '2px dashed black',\n          }}\n        />\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={[\n            {\n              title: 'GRAND TOTAL',\n              dataIndex: 'grand_total',\n              key: 'grand_total',\n              width: '11%',\n            },\n            {\n              title: '',\n              dataIndex: 'worked',\n              key: 'worked',\n\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'prod',\n              key: 'prod',\n              width: '8%',\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'wrkd',\n              key: 'wrkd',\n              width: '8%',\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'avail',\n              key: 'avail',\n              width: '10%',\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'lost',\n              key: 'lost',\n              render: (value) => formatCurrency(value),\n            },\n\n            { title: '', dataIndex: '', key: '', width: '10%' },\n            {\n              title: '',\n              dataIndex: 'avg_worked',\n              key: 'avg_worked',\n\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'avg_prod',\n              key: 'avg_prod',\n\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'avg_wrkd',\n              key: 'avg_wrkd',\n\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'avg_avail',\n              key: 'avg_avail',\n\n              render: (value) => formatCurrency(value),\n            },\n            {\n              title: '',\n              dataIndex: 'avg_lost',\n              key: 'avg_lost',\n\n              render: (value) => formatCurrency(value),\n            },\n          ]}\n          dataSource={[\n            {\n              grand_total: 'GRAND TOTAL',\n              ...reportData.reportSix.grand_total,\n            },\n          ]}\n          onChange={handleChange}\n          showHeader={false}\n        />\n        <div style={{ marginTop: '24px', textAlign: 'left' }} />\n        <Table\n          size=\"small\"\n          pagination={false}\n          columns={[\n            {\n              title: 'CATEGORY NAME',\n              dataIndex: 'categoryName',\n              key: 'categoryName',\n            },\n            {\n              title: 'CURRENT $',\n              dataIndex: 'current',\n              key: 'current',\n            },\n            {\n              title: '%',\n              dataIndex: 'percentageCurrent',\n              key: 'percentageCurrent',\n            },\n            {\n              title: 'AVG/YTD $',\n              dataIndex: 'avg',\n              key: 'avg',\n            },\n            {\n              title: '%',\n              dataIndex: 'percentageAvg',\n              key: 'percentageAvg',\n            },\n            {\n              title: '',\n              key: '',\n              dataIndex: '',\n            },\n            {\n              title: 'ACCOUNT REC',\n              dataIndex: 'accountRec',\n              key: 'accountRec',\n            },\n            {\n              title: 'CURRENT %',\n              dataIndex: 'curPercentage',\n              key: 'curPercentage',\n            },\n            {\n              title: 'YTD %',\n              dataIndex: 'ytdPercentage',\n              key: 'ytdPercentage',\n            },\n          ]}\n          dataSource={[\n            {\n              categoryName: '',\n              current: '',\n              percentageCurrent: '0',\n              avg: '',\n              percentageAvg: '0',\n              accountRec: '0 - 30',\n              curPercentage: '',\n              ytdPercentage: '',\n            },\n            {\n              categoryName: '',\n              current: '',\n              percentageCurrent: '0',\n              avg: '',\n              percentageAvg: '0',\n              accountRec: '31 - 60',\n              curPercentage: '',\n              ytdPercentage: '',\n            },\n            {\n              categoryName: '',\n              current: '',\n              percentageCurrent: '0',\n              avg: '',\n              percentageAvg: '0',\n              accountRec: '61 - 90',\n              curPercentage: '',\n              ytdPercentage: '',\n            },\n            {\n              categoryName: '',\n              current: '',\n              percentageCurrent: '0',\n              avg: '',\n              percentageAvg: '0',\n              accountRec: '>90',\n              curPercentage: '',\n              ytdPercentage: '',\n            },\n          ]}\n        />\n        <div\n          style={{\n            height: '10px',\n            marginTop: '24px',\n            textAlign: 'left',\n            borderTop: '2px dashed black',\n            borderBottom: '2px dashed black',\n          }}\n        />\n        <Table\n          size=\"small\"\n          pagination={false}\n          showHeader={false}\n          columns={[\n            {\n              title: 'CATEGORY NAME',\n              dataIndex: 'categoryName',\n              key: 'categoryName',\n            },\n            {\n              title: 'CURRENT $',\n              dataIndex: 'current',\n              key: 'current',\n            },\n            {\n              title: '%',\n              dataIndex: 'percentageCurrent',\n              key: 'percentageCurrent',\n            },\n            {\n              title: 'AVG/YTD $',\n              dataIndex: 'avg',\n              key: 'avg',\n            },\n            {\n              title: '%',\n              dataIndex: 'percentageAvg',\n              key: 'percentageAvg',\n            },\n            {\n              title: '',\n              key: '',\n              dataIndex: '',\n            },\n            {\n              title: 'ACCOUNT REC',\n              dataIndex: 'accountRec',\n              key: 'accountRec',\n            },\n            {\n              title: 'CURRENT %',\n              dataIndex: 'curPercentage',\n              key: 'curPercentage',\n            },\n            {\n              title: 'YTD %',\n              dataIndex: 'ytdPercentage',\n              key: 'ytdPercentage',\n            },\n          ]}\n          dataSource={[\n            {\n              categoryName: '',\n              current: '',\n              percentageCurrent: '0',\n              avg: '',\n              percentageAvg: '0',\n              accountRec: 'FRONT DESK COLL.',\n              curPercentage: '',\n              ytdPercentage: '',\n            },\n          ]}\n        />\n      </div>\n    </div>\n  );\n  const renderFormSeven = () => (\n    <div\n      className=\"search-result-list\"\n      // eslint-disable-next- line no-return-assign\n      ref={(el) => setCompRef(el)}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <div className=\"mb-10\">\n          {filter.type === 'prod_analysis_pt_activity' ? (\n            <Title style={{ color: 'blue' }} level={3}>\n              PRODUCTIVITY ANALYSIS - PATIENT ACTIVITY - STATISTICS\n            </Title>\n          ) : (\n            <>\n              {/* <Title style={{ color: 'blue' }} level={3}>\n                PROFITABILITY MANAGEMENT CONTROLLER REPORT\n              </Title>\n              <Title level={3}>YEAR TO DATE/Average Month</Title> */}\n            </>\n          )}\n        </div>\n        <br />\n        <div>\n          <Text strong>\n            FOR: &nbsp;\n            {reportData?.reportSeven?.patient_visits?.doctor[0]?.name}\n          </Text>\n          <Text className=\"border-bottom\">&nbsp;</Text>\n        </div>\n        {filter.type === 'prod_analysis_pt_activity' ? (\n          <>\n            <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <>\n            {/* <Row>\n              <Col span={12} style={{ color: 'red' }}>\n                Period: &nbsp; {moment(filter.dateValue[0]).format('MM/YYYY')}\n                {' -> '}\n                {moment(filter.dateValue[1]).format('MM/YYYY')}\n              </Col>\n              <Col span={12} style={{ color: 'red' }}>\n                Date: &nbsp; {moment(filter.dateValue[0]).format('YYYY')}\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>Case Ratio: &nbsp; 0% </Col>\n              <Col span={12}>Recare Ratio: &nbsp; 0% </Col>\n            </Row> */}\n          </>\n        )}\n        <br />\n        <h4\n          style={{ color: 'blue', textAlign: 'center', marginBottom: '12px' }}\n        >\n          New Patients\n        </h4>\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={reportSevenColNewPatients}\n          dataSource={reportData.reportSeven?.new_patients}\n          onChange={handleChange}\n        />\n        <h4\n          style={{\n            color: 'blue',\n            textAlign: 'center',\n            marginBottom: '12px',\n            marginTop: '12px',\n          }}\n        >\n          Patient Referrals\n        </h4>\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={reportSevenColPatientRef}\n          dataSource={reportData.reportSeven?.patient_referrals}\n          onChange={handleChange}\n        />\n        <h4\n          style={{\n            color: 'blue',\n            textAlign: 'center',\n            marginBottom: '12px',\n            marginTop: '12px',\n          }}\n        >\n          Case Presentation\n        </h4>\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={reportSevenColCasePresent}\n          dataSource={reportData.reportSeven?.case_presentation}\n          onChange={handleChange}\n        />\n        <h4\n          style={{\n            color: 'blue',\n            textAlign: 'center',\n            marginBottom: '12px',\n            marginTop: '12px',\n          }}\n        >\n          Patients Visits\n        </h4>\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={reportSevenColPatientVisitDoc}\n          dataSource={reportData.reportSeven?.patient_visits?.doctor}\n          onChange={handleChange}\n        />\n        <h4\n          style={{\n            color: 'blue',\n            textAlign: 'center',\n            marginBottom: '12px',\n            marginTop: '12px',\n          }}\n        >\n          New Patients\n        </h4>\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={reportSevenColPatientVisitHyg}\n          dataSource={reportData.reportSeven?.patient_visits?.hygiene}\n          onChange={handleChange}\n        />\n        <div\n          style={{\n            height: '10px',\n            marginTop: '24px',\n            textAlign: 'left',\n            borderTop: '2px dashed black',\n          }}\n        />\n        <Table\n          rowClassName={renderStyleRow}\n          size=\"small\"\n          pagination={false}\n          columns={[\n            {\n              title: 'GRAND TOTAL',\n              dataIndex: 'grand_total',\n              key: 'grand_total',\n              width: '25%',\n            },\n            {\n              title: 'Current Mo.',\n              dataIndex: 'current_mo',\n              key: 'current_mo',\n              width: '20%',\n              render: (value) => decFormatterNumber(value),\n            },\n            {\n              title: '%',\n              dataIndex: 'percentage_of_current_mo',\n              key: 'percentage_of_current_mo',\n              width: '80px',\n              render: (value, obj) =>\n                decFormatterNumber(value, obj.grand_total !== 'GRAND TOTAL'),\n            },\n            {\n              title: 'YTD',\n              dataIndex: 'ytd',\n              key: 'ytd',\n              width: '20%',\n            },\n            {\n              title: '%',\n              dataIndex: 'percentage_of_ytd',\n              key: 'percentage_of_ytd',\n              width: '80px',\n              render: (value, obj) =>\n                decFormatterNumber(value, obj.grand_total !== 'GRAND TOTAL'),\n            },\n            {\n              title: 'AVG/Mo',\n              dataIndex: 'avg_per_month',\n              key: 'avg_per_month',\n            },\n          ]}\n          dataSource={[\n            {\n              grand_total: 'GRAND TOTAL',\n              ...reportData.reportSeven?.patient_visits?.grand_total,\n            },\n          ]}\n          onChange={handleChange}\n          showHeader={false}\n        />\n        <div style={{ marginTop: '24px', textAlign: 'left' }} />\n      </div>\n    </div>\n  );\n\n  const renderForm = () => {\n    switch (formStyle) {\n      case 'pmcr_current_month':\n      case 'pmcr_ytd_avg_month':\n        return renderFormType1();\n      case 'pmcr_hygiene_current_month':\n      case 'pmcr_hygiene_ytd_avg_month':\n        return renderFormHygiene();\n      case 'prod_analysis_time_stats':\n        return renderFormFive();\n      case 'prod_analysis_time_dollars':\n        return renderFormSix();\n      case 'prod_analysis_pt_activity':\n        return renderFormSeven();\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"reporting-container\">\n      <PageHeader className=\"site-page-header\" title=\"Reporting\" />\n      <Divider />\n\n      <Filter value={filter} onSubmitCallback={onFilterChange} />\n      <Divider />\n\n      <Row>\n        <Col\n          span={24}\n          style={{\n            textAlign: 'right',\n          }}\n        >\n          <ReactToPrint\n            trigger={() => <Button type=\"primary\">Print</Button>}\n            content={() => compRef}\n            bodyClass=\"print-window\"\n          />\n        </Col>\n      </Row>\n      <div>{renderForm()}</div>\n    </div>\n  );\n};\n\nexport default ReportingContainer;\n","/* eslint-disable react/no-array-index-key */\n\nimport React, { Component } from 'react';\nimport {\n  Space,\n  Button,\n  Divider,\n  PageHeader,\n  Select,\n  Row,\n  Col,\n  Form,\n} from 'antd';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst { Option } = Select;\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass EnergyProfile extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      studentId: null,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchStudents } = this.props;\n    fetchStudents();\n  }\n\n  render() {\n    const { students, loadingFetchStudent } = this.props;\n    const { studentId } = this.state;\n\n    return (\n      <div className=\"energy-profile-container\">\n        <PageHeader className=\"site-page-header\" title=\"Energy Profile\" />\n        <Divider />\n\n        <Row align=\"bottom\">\n          <Col span={12}>\n            <Form ref={this.formRef} validateMessages={validateMessages}>\n              <Form.Item\n                label=\"Student\"\n                name=\"student\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please pick a Student!',\n                  },\n                ]}\n              >\n                <Select\n                  loading={loadingFetchStudent}\n                  style={{\n                    width: 200,\n                  }}\n                  onChange={(id) => {\n                    this.setState({\n                      studentId: id,\n                    });\n                  }}\n                >\n                  {students.map((student, index) => (\n                    <Option value={student.id} key={index.toString()}>\n                      {`${student.first_name} ${student.last_name}`}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Space align=\"bottom\" style={{ marginTop: 40 }}>\n                <Button\n                  onClick={() => {\n                    this.formRef.current.submit();\n                  }}\n                  href={\n                    studentId &&\n                    `${AppConfig.ROUTES.ENERGY_PROFILE}/${AppConfig.ENERGY_PROFILE.DATA_ANALYSIS}?studentId=${studentId}`\n                  }\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Print Report\n                </Button>\n              </Space>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nEnergyProfile.propTypes = {\n  students: PropTypes.array,\n  loadingFetchStudent: PropTypes.bool,\n  fetchStudents: PropTypes.func,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  students: student.items,\n  loadingFetchStudent: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n})(EnergyProfile);\n","export default __webpack_public_path__ + \"static/media/not-found.4a08ab07.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport notFoundImage from '@/assets/images/not-found.svg';\nimport './index.scss';\n\nfunction NotFoundContainer() {\n  return (\n    <div className=\"not-found-container\">\n      <img\n        src={notFoundImage}\n        alt=\"not found\"\n        className=\"not-found-container__image\"\n      />\n      <div className=\"not-found-container__links\">\n        <Link to=\"/\">Back to home</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFoundContainer;\n","import React, { Component } from 'react';\n\nclass ReportContainer extends Component {\n\n  render() {\n    return (\n      <div className=\"report-container\">\n        <h1>Report</h1>\n      </div>\n    );\n  }\n}\n\nexport default ReportContainer;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport {\n  Row,\n  Col,\n  Tag,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: 'is required!',\n};\n\nclass ProfitScan extends Component {\n  render() {\n    return (\n      <div className=\"profit-scan-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"CPD Profit Scan\"\n          tags={<Tag color=\"blue\">{moment().format('MM/DD/YYYY')}</Tag>}\n        />\n        <Divider />\n\n        <Row />\n\n        <Row>\n          <Col span={8}>\n            <Form\n              layout=\"vertical\"\n              validateMessages={validateMessages}\n            >\n              <Form.Item\n                label=\"Office Collection Per Hour\"\n                name=\"officeCollectionPerHour\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('is not a valid number'))\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Operational Cost Per Hour\"\n                name=\"operationalCostPerHour\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Profit Per Hour [after Redline]\"\n                name=\"profitPerHour\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Revenue Growth Rate Last Year\"\n                name=\"revenueGrowthRateLastYear\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Revenue Growth Rate To Date This Year\"\n                name=\"revenueGrowthRateToDateThisYear\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Average Number Of New Patients\"\n                name=\"averageNumberOfNewPatients\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Current Annual Production\"\n                name=\"currentAnnualProduction\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"% Practice Debt Service\"\n                name=\"percentPracticeDebtService\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"% Personal Debt Service\"\n                name=\"percentPersonalDebtService\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Projected Growth Rate\"\n                name=\"projectedGrowthRate\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Production Potential\"\n                name=\"productionPotential\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Profit Potential\"\n                name=\"profitPotential\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Potential Salary\"\n                name=\"potentialSalary\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Accumulation Potential 120 Months @ 10%\"\n                name=\"accumulationPotentialMonthsTenPercent\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Accumulation Potential 120 Months @ 7%\"\n                name=\"accumulationPotentialMonthsTenPercent\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  suffix='$'\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default ProfitScan;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass LaboratoryStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        smileCost: null,\n        alignerCost: null,\n        labFabricatedAppliances: null,\n        labSupplies: null,\n        total: null,\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoLaboratory'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoLaboratory');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.SUPPLIES_MARKETING}`);\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoLaboratory', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.ADMINISTRATIVE_SERVICES}`);\n  }\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"laboratory\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Laboratory\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Sure Smile Costs\"\n                name=\"smileCost\"\n                fieldKey=\"smileCost\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Aligners & Aligner Cost\"\n                name=\"alignerCost\"\n                fieldKey=\"alignerCost\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Lab Fabricated Appliances & Retainers\"\n                name=\"labFabricatedAppliances\"\n                fieldKey=\"labFabricatedAppliances\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Lab Supplies\"\n                name=\"labSupplies\"\n                fieldKey=\"labSupplies\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Total\"\n                name=\"total\"\n                fieldKey=\"total\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('Total is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nLaboratoryStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(LaboratoryStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nconst regex0To30 = new RegExp(/^([0-9]|[12]\\d|3[0])$/);\nconst regex31To60 = new RegExp(/^(3[1-9]|[45][0-9]|6[0])$/);\nconst regex61To90 = new RegExp(/^(6[1-9]|[78][0-9]|9[0])$/);\nconst regex91ToMore = new RegExp(/^(9[1-9]|\\d{3,})$/);\n\nclass CollectionsStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        totalGross: null,\n        refunds: null,\n        totalNet: null,\n        downPaymentFeesDue: null,\n        downPaymentFeesCollected: null,\n        zeroToThirtyDays: null,\n        thirtyOneToSixtyDays: null,\n        sixtyOneToNinetyDays: null,\n        ninetyOneToMoreDays: null,\n        total: null,\n        unpaidBillsDueThisMonth: null,\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoCollections'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoCollections');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.DOCTOR_PRODUCTION}`);\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoCollections', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.PATIENT_ACTIVITY}`);\n  }\n\n  render() {\n    const {\n      initialValues,\n    } = this.state;\n\n    return (\n      <div className=\"collection-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Collections\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[32, 16]}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Total Gross Collection\"\n                name=\"totalGross\"\n                fieldKey=\"totalGross\"\n                rules={[{ required: true }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Refunds to Patients or Insurance Companies\"\n                name=\"refunds\"\n                fieldKey=\"refunds\"\n                rules={[{ required: true }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Total Net Collections\"\n                name=\"totalNet\"\n                fieldKey=\"totalNet\"\n                rules={[{ required: true }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Down Payment Fees Due\"\n                name=\"downPaymentFeesDue\"\n                fieldKey=\"downPaymentFeesDue\"\n                rules={[{ required: true }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Down Payment Fees Collected\"\n                name=\"downPaymentFeesCollected\"\n                fieldKey=\"downPaymentFeesCollected\"\n                rules={[{ required: true }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Divider />\n          <Row gutter={[32, 16]}>\n            <Col span={12}>\n              <h3 className=\"ant-form-text\">Accounts Recievables</h3>\n              <Form.Item\n                label=\"0 to 30 Days\"\n                name=\"zeroToThirtyDays\"\n                fieldKey=\"zeroToThirtyDays\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    pattern: regex0To30,\n                    message: 'must be between 0 and 30'\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('0 to 30 Days is not a valid number'))\n                  }\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"31 to 60 Days\"\n                name=\"thirtyOneToSixtyDays\"\n                fieldKey=\"thirtyOneToSixtyDays\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    pattern: regex31To60,\n                    message: 'must be between 31 and 60'\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('31 to 60 Days is not a valid number'))\n                  }\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"61 to 90 Days\"\n                name=\"sixtyOneToNinetyDays\"\n                fieldKey=\"sixtyOneToNinetyDays\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    pattern: regex61To90,\n                    message: 'must be between 61 and 90'\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('61 to 90 Days is not a valid number'))\n                  }\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"91+ Days\"\n                name=\"ninetyOneToMoreDays\"\n                fieldKey=\"ninetyOneToMoreDays\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    pattern: regex91ToMore,\n                    message: 'cannot be less than 91'\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('91+ Days is not a valid number'))\n                  }\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Total\"\n                name=\"total\"\n                fieldKey=\"total\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('Total is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Unpaid Bills Due This Month\"\n                name=\"unpaidBillsDueThisMonth\"\n                fieldKey=\"unpaidBillsDueThisMonth\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('Unpaid Bills Due This Month is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nCollectionsStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(CollectionsStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col, Form, Input, Button, Divider, PageHeader } from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass DoctorSalaryStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        grossSalary: null,\n        employerMatch: null,\n        drawsDividendsDistributions: null,\n        insurancePremiums: null,\n        personalExpenses: null,\n        other: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoDoctorSalary'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoDoctorSalary');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(\n      `${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.ADMINISTRATIVE_SERVICES}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('orthoDoctorSalary', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(\n      `${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.SOLVENCY_SAVINGS_ROI_FUNDS}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"doctor-salary-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Doctor Salary\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Gross Salary\"\n                name=\"grossSalary\"\n                fieldKey=\"grossSalary\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('Gross Salary is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Employer Match for Soc Sec, Medicare\"\n                name=\"employerMatch\"\n                fieldKey=\"employerMatch\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Draws / Dividends / Distributions\"\n                name=\"drawsDividendsDistributions\"\n                fieldKey=\"drawsDividendsDistributions\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Insurance Premiums\"\n                name=\"insurancePremiums\"\n                fieldKey=\"insurancePremiums\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Insurance Premiums is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Personal Expenses Pd by Practice\"\n                name=\"personalExpenses\"\n                fieldKey=\"personalExpenses\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Personal Expenses Pd by Practice is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Other\"\n                name=\"other\"\n                fieldKey=\"other\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nDoctorSalaryStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(DoctorSalaryStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass OccupanyAndHPStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        mortgageOrRent: null,\n        utilities: null,\n        janitorial: null,\n        repairs: null,\n        facilitiesInsurance: null,\n        securitySystem: null,\n        propertyTax: null,\n        total: null,\n        equipType: null,\n        officeFurnitureAndRepairs: null,\n        staffContinuingEducation: null,\n        staffScpdTuitionOrTravel: null,\n        icatExpenses: null,\n        hpResourceTotal: null,\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoOccupanyAndHP'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoOccupanyAndHP');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.STAFF_COMPENSATION}`);\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoOccupanyAndHP', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.SUPPLIES_MARKETING}`);\n  }\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"occupany-and-h-and-p-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Occupany & H&P\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Card title=\"Occupancy\">\n                <Form.Item\n                  label=\"Mortgage / Rent\"\n                  name='mortgageOrRent'\n                  fieldKey='mortgageOrRent'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Utilities\"\n                  name='utilities'\n                  fieldKey='utilities'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Janitorial\"\n                  name='janitorial'\n                  fieldKey='janitorial'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Repairs / Maintenance / Leasehold Improv\"\n                  name='repairs'\n                  fieldKey='repairs'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Facilities Insurance\"\n                  name='facilitiesInsurance'\n                  fieldKey='facilitiesInsurance'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Security System\"\n                  name='securitySystem'\n                  fieldKey='securitySystem'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Property Tax\"\n                  name='propertyTax'\n                  fieldKey='propertyTax'\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Property Tax is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name='total'\n                  fieldKey='total'\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Total is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card title=\"Human & Physical Resource Development\">\n                <Form.Item\n                  label=\"Office Furniture, Clinical Computers\"\n                  name='officeFurnitureAndRepairs'\n                  fieldKey='officeFurnitureAndRepairs'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Equip Loan / Equip Maintenance\"\n                  name='equipType'\n                  fieldKey='equipType'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"ICAT Expenses\"\n                  name='icatExpenses'\n                  fieldKey='icatExpenses'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Staff Other CE Expenses\"\n                  name='staffContinuingEducation'\n                  fieldKey='staffContinuingEducation'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Staff SCPD tuition/travel/lodge/meals\"\n                  name='staffScpdTuitionOrTravel'\n                  fieldKey='staffScpdTuitionOrTravel'\n                  rules={[\n                    {\n                      required: true,\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name='hpResourceTotal'\n                  fieldKey='hpResourceTotal'\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Total is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nOccupanyAndHPStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(OccupanyAndHPStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col, Form, Card, Input, Button, Divider, PageHeader } from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\n// eslint-disable-next-line max-len\nconst urlPatternRegex = new RegExp(\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n);\n\nclass PatientActivityStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        children: {\n          newPatientsExams: null,\n          newPatientRecords: null,\n          whoScheduledRecords: null,\n          contractPresented: null,\n          contractAccepted: null,\n        },\n        minor: {\n          newPatientsExams: null,\n          newPatientRecords: null,\n          whoScheduledRecords: null,\n          contractPresented: null,\n          contractAccepted: null,\n        },\n        adult: {\n          newPatientsExams: null,\n          newPatientRecords: null,\n          whoScheduledRecords: null,\n          contractPresented: null,\n          contractAccepted: null,\n        },\n        activePatientCount: null,\n        ptsExtendedTx: null,\n        preTxObservationPts: null,\n        preTxObservationPtsSeen: null,\n        patientsOfRecord: null,\n        otherDoctors: null,\n        website: null,\n        signage: null,\n        teamMembers: null,\n        other: null,\n        rpcQuadrant: null,\n        rpcTeeth: null,\n        perioMaintenance: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoPatientActivity'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoPatientActivity');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(\n      `${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.COLLECTIONS}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('orthoPatientActivity', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(\n      `${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.STAFF_COMPENSATION}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"patient-activity-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Patient Activity\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={8}>\n              <Card title=\"4 to 11\">\n                <Form.Item\n                  label=\"New Patients Exams\"\n                  name={['children', 'newPatientsExams']}\n                  fieldKey={['children', 'newPatientsExams']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of New Patient Records\"\n                  name={['children', 'newPatientRecords']}\n                  fieldKey={['children', 'newPatientRecords']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# Who Scheduled Records\"\n                  name={['children', 'whoScheduledRecords']}\n                  fieldKey={['children', 'whoScheduledRecords']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of Contract Presented\"\n                  name={['children', 'contractPresented']}\n                  fieldKey={['children', 'contractPresented']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of Contract Accepted\"\n                  name={['children', 'contractAccepted']}\n                  fieldKey={['children', 'contractAccepted']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={8}>\n              <Card title=\"12 to 18\">\n                <Form.Item\n                  label=\"New Patients Exams\"\n                  name={['minor', 'newPatientsExams']}\n                  fieldKey={['minor', 'newPatientsExams']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of New Patient Records\"\n                  name={['minor', 'newPatientRecords']}\n                  fieldKey={['minor', 'newPatientRecords']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# Who Scheduled Records\"\n                  name={['minor', 'whoScheduledRecords']}\n                  fieldKey={['minor', 'whoScheduledRecords']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of Contract Presented\"\n                  name={['minor', 'contractPresented']}\n                  fieldKey={['minor', 'contractPresented']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of Contract Accepted\"\n                  name={['minor', 'contractAccepted']}\n                  fieldKey={['minor', 'contractAccepted']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={8}>\n              <Card title=\"19+\">\n                <Form.Item\n                  label=\"New Patients Exams\"\n                  name={['adult', 'newPatientsExams']}\n                  fieldKey={['adult', 'newPatientsExams']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of New Patient Records\"\n                  name={['adult', 'newPatientRecords']}\n                  fieldKey={['adult', 'newPatientRecords']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# Who Scheduled Records\"\n                  name={['adult', 'whoScheduledRecords']}\n                  fieldKey={['adult', 'whoScheduledRecords']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of Contract Presented\"\n                  name={['adult', 'contractPresented']}\n                  fieldKey={['adult', 'contractPresented']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"# of Contract Accepted\"\n                  name={['adult', 'contractAccepted']}\n                  fieldKey={['adult', 'contractAccepted']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n          <Row style={{ marginTop: 16 }}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Active Patient Count\"\n                name=\"activePatientCount\"\n                fieldKey=\"activePatientCount\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Active Patient Count is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"# of Pts in Extended Tx\"\n                name=\"ptsExtendedTx\"\n                fieldKey=\"ptsExtendedTx\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"# due of Pre-Tx Observation Pts\"\n                name=\"preTxObservationPts\"\n                fieldKey=\"preTxObservationPts\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"# of Pre-Tx Observation Pts Seen\"\n                name=\"preTxObservationPtsSeen\"\n                fieldKey=\"preTxObservationPtsSeen\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Divider />\n\n          <Row gutter={[32, 16]}>\n            <Col span={12}>\n              <h3 className=\"ant-form-text\">Referred By</h3>\n              <Form.Item\n                label=\"Patients of Record\"\n                name=\"patientsOfRecord\"\n                fieldKey=\"patientsOfRecord\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Patients of Record is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Other Doctors\"\n                name=\"otherDoctors\"\n                fieldKey=\"otherDoctors\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Website\"\n                name=\"website\"\n                fieldKey=\"website\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    pattern: urlPatternRegex,\n                    message: 'Website is not valid!',\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Signage\"\n                name=\"signage\"\n                fieldKey=\"signage\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Team Members\"\n                name=\"teamMembers\"\n                fieldKey=\"teamMembers\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('Team Members is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Other\"\n                name=\"other\"\n                fieldKey=\"other\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Divider />\n\n          <Row gutter={[32, 16]}>\n            <Col span={12}>\n              <h3 className=\"ant-form-text\">Perio Production $</h3>\n              <Form.Item\n                label=\"RPC Quadrant\"\n                name=\"rpcQuadrant\"\n                fieldKey=\"rpcQuadrant\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('RPC Quadrant is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"RPC 1-3 teeth\"\n                name=\"rpcTeeth\"\n                fieldKey=\"rpcTeeth\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('RPC 1-3 teeth is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Perio Maintenance\"\n                name=\"perioMaintenance\"\n                fieldKey=\"perioMaintenance\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Perio Maintenance is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nPatientActivityStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(PatientActivityStep);\n","import React from 'react';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport {\n  Select,\n  Spin\n} from 'antd';\n\nconst DebounceSelect = ({ fetchOptions, debounceTimeout = 800, optionInit = [], ...props }) => {\n  const [fetching, setFetching] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const fetchRef = React.useRef(0);\n  const debounceFetcher = React.useMemo(() => {\n    const loadOptions = (value) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        if (fetchId !== fetchRef.current) {\n          return;\n        }\n\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  return (\n    <Select\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n      {...props}\n      options={options.length > 0 ? options : optionInit}\n    />\n  );\n};\n\nDebounceSelect.propTypes = {\n  fetchOptions: PropTypes.func,\n  debounceTimeout: PropTypes.number,\n  optionInit: PropTypes.array,\n};\n\nexport default DebounceSelect;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  PlusOutlined\n} from '@ant-design/icons';\nimport {\n  forEach,\n} from 'lodash';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport api from '@/api';\nimport DebounceSelect from '@/components/DebounceSelect';\nimport AppConfig from '@/constants/AppConfig';\nimport {\n  fetchDoctors,\n} from '@/actions/doctorActions';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass DoctorProductionStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        doctorProduction: [\n          {\n            doctorId: null,\n            production: null,\n            productionAdj: null,\n            netProduction: null,\n            patientHoursAvailable: null,\n            patientHoursScheduled: null,\n            startApptsAvailable: null,\n            patientVisits: null,\n            apptChanges: null,\n          }\n        ],\n      }\n    };\n  }\n\n  componentDidMount() {\n    const { fetchDoctors, page } = this.props;\n    const formData = JSON.parse(localStorage.getItem('orthoDoctorProduction'));\n\n    fetchDoctors({ page });\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoDoctorProduction');\n    };\n  }\n\n  fetchDoctorList = (keyword) => api\n    .get('/api/v1/doctors', { params: { search: keyword } })\n    .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n    .then(({ result }) => result.data.map((item) => ({\n      label: item.attributes.fullname,\n      value: item.id,\n    })))\n    .catch((error) => {\n      throw error;\n    })\n\n  optionInit = () => {\n    const {\n      items\n    } = this.props;\n\n    const data = [];\n\n    forEach(items, item => {\n      const {\n        fullname,\n      } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoDoctorProduction', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.COLLECTIONS}`);\n  }\n\n  render() {\n    const {\n      initialValues,\n    } = this.state;\n\n    return (\n      <div className=\"ortho-doctor-production-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Doctor Production\"\n        />\n\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"horizontal\"\n          labelCol={{ span: 9 }}\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[32, 16]}>\n            <Form.List name=\"doctorProduction\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field) => (\n                    <Col span={12} key={field.key}>\n                      <Form.Item\n                        label=\"Doctor Name\"\n                        rules={[{ required: true }]}\n                        name={[field.name, 'doctorId']}\n                        fieldKey={[field.fieldKey, 'doctorId']}\n                      >\n                        <DebounceSelect\n                          showSearch\n                          optionInit={this.optionInit()}\n                          placeholder=\"Select Doctor\"\n                          fetchOptions={this.fetchDoctorList}\n                          style={{ width: '100%' }}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr. Production\"\n                        name={[field.name, 'production']}\n                        fieldKey={[field.fieldKey, 'production']}\n                        rules={[{ required: true }]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Production Adj\"\n                        name={[field.name, 'productionAdj']}\n                        fieldKey={[field.fieldKey, 'productionAdj']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Net Production\"\n                        name={[field.name, 'netProduction']}\n                        fieldKey={[field.fieldKey, 'netProduction']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value) ?\n                                Promise.resolve() :\n                                Promise.reject(new Error('Net Production is not a valid number'))\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr Patient Hours Available\"\n                        name={[field.name, 'patientHoursAvailable']}\n                        fieldKey={[field.fieldKey, 'patientHoursAvailable']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value) ?\n                                Promise.resolve() :\n                                Promise.reject(new Error('Dr Patient Hours Available is not a valid number'))\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr. Patient Hours Schedule w/ Pts\"\n                        name={[field.name, 'patientHoursScheduled']}\n                        fieldKey={[field.fieldKey, 'patientHoursScheduled']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value) ?\n                                Promise.resolve() :\n                                Promise.reject(new Error('Dr. Patient Hours Schedule w/ Pts is not a valid number'))\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"# of Start Appts Available\"\n                        name={[field.name, 'startApptsAvailable']}\n                        fieldKey={[field.fieldKey, 'startApptsAvailable']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value) ?\n                                Promise.resolve() :\n                                Promise.reject(new Error('# of Start Appts Available is not a valid number'))\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"# of Patient Visits\"\n                        name={[field.name, 'patientVisits']}\n                        fieldKey={[field.fieldKey, 'patientVisits']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value) ?\n                                Promise.resolve() :\n                                Promise.reject(new Error('# of Patient Visits is not a valid number'))\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"# of Appt Changes\"\n                        name={[field.name, 'apptChanges']}\n                        fieldKey={[field.fieldKey, 'apptChanges']}\n                        rules={[\n                          {\n                            required: true,\n                          },\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value) ?\n                                Promise.resolve() :\n                                Promise.reject(new Error('# of Appt Changes is not a valid number'))\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      {field.key > 0 &&\n                        <Form.Item\n                          style={{ textAlign: 'right' }}\n                        >\n                          <Button\n                            onClick={() => remove(field.name)}\n                            type=\"danger\"\n                          >\n                            Remove\n                          </Button>\n                        </Form.Item>\n                      }\n                    </Col>\n                  ))}\n\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      icon={<PlusOutlined />}\n                    >\n                      Add Doctor\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                href={`${AppConfig.ROUTES.STUDENTS_SUBMIT_DATA}`}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nDoctorProductionStep.propTypes = {\n  fetchDoctors: PropTypes.func,\n  items: PropTypes.array,\n  page: PropTypes.number,\n  history: PropTypes.object,\n};\n\nconst mapStateToProps = ({ doctor, error }) => ({\n  items: doctor.items,\n  totalCount: doctor.totalCount,\n  page: doctor.page,\n  loading: doctor.loading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchDoctors,\n  })(DoctorProductionStep),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass StaffCompensationStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        assistants: {\n          grossSalary: null,\n          employerMatching: null,\n          futaSuta: null,\n          medicalInsurance: null,\n          pensionProfitSharing: null,\n          bonus: null,\n          otherBenefit: null,\n          workComp: null,\n        },\n        administrative: {\n          grossSalary: null,\n          employerMatching: null,\n          futaSuta: null,\n          medicalInsurance: null,\n          pensionProfitSharing: null,\n          bonus: null,\n          otherBenefit: null,\n        },\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoStaffCompensation'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoStaffCompensation');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.PATIENT_ACTIVITY}`);\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoStaffCompensation', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.OCCUPANY_AND_H_P}`);\n  }\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"staff-compensation-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Staff Compensation\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={8}>\n              <Card title=\"Assistants (QB 6100.00)\">\n                <Form.Item\n                  label=\"Gross Salary\"\n                  name={['assistants', 'grossSalary']}\n                  fieldKey={['assistants', 'grossSalary']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Gross Salary is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Employer Matching SocSec, Medicare\"\n                  name={['assistants', 'employerMatching']}\n                  fieldKey={['assistants', 'employerMatching']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"FUTA, SUTA\"\n                  name={['assistants', 'futaSuta']}\n                  fieldKey={['assistants', 'futaSuta']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Medical Insurance\"\n                  name={['assistants', 'medicalInsurance']}\n                  fieldKey={['assistants', 'medicalInsurance']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Pension / Profit Sharing\"\n                  name={['assistants', 'pensionProfitSharing']}\n                  fieldKey={['assistants', 'pensionProfitSharing']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Bonus\"\n                  name={['assistants', 'bonus']}\n                  fieldKey={['assistants', 'bonus']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Bonus is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other Benefit\"\n                  name={['assistants', 'otherBenefit']}\n                  fieldKey={['assistants', 'otherBenefit']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Work Comp - all\"\n                  name={['assistants', 'workComp']}\n                  fieldKey={['assistants', 'workComp']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={8}>\n              <Card title=\"Administrative (6400)\">\n                <Form.Item\n                  label=\"Gross Salary\"\n                  name={['administrative', 'grossSalary']}\n                  fieldKey={['administrative', 'grossSalary']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Gross Salary is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Employer Matching SocSec, Medicare\"\n                  name={['administrative', 'employerMatching']}\n                  fieldKey={['administrative', 'employerMatching']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"FUTA, SUTA\"\n                  name={['administrative', 'futaSuta']}\n                  fieldKey={['administrative', 'futaSuta']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Medical Insurance\"\n                  name={['administrative', 'medicalInsurance']}\n                  fieldKey={['administrative', 'medicalInsurance']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Pension / Profit Sharing\"\n                  name={['administrative', 'pensionProfitSharing']}\n                  fieldKey={['administrative', 'pensionProfitSharing']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Bonus\"\n                  name={['administrative', 'bonus']}\n                  fieldKey={['administrative', 'bonus']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Bonus is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other Benefit\"\n                  name={['administrative', 'otherBenefit']}\n                  fieldKey={['administrative', 'otherBenefit']}\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\n\nStaffCompensationStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(StaffCompensationStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col, Form, Card, Input, Button, Divider, PageHeader } from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n// eslint-disable-next-line max-len\nconst urlPatternRegex = new RegExp(\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n);\n\nclass SuppliesAndMarketingStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        backetsBandsAdhesives: null,\n        wiresLigaturesHeadgearFacebow: null,\n        xRayFilm: null,\n        dispoables: null,\n        total: null,\n        website: null,\n        marketing: null,\n        advertising: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(\n      localStorage.getItem('orthoSuppliesAndMarketing'),\n    );\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoSuppliesAndMarketing');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(\n      `${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.OCCUPANY_AND_H_P}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('orthoSuppliesAndMarketing', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(\n      `${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.LABORTORY}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"supplies-and-marketing-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Supplies & Marketing\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Card title=\"Supplies / Raw Materials\">\n                <Form.Item\n                  label=\"Backets / Bands / Adhesives\"\n                  name=\"backetsBandsAdhesives\"\n                  fieldKey=\"backetsBandsAdhesives\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Wires / ligatures / headgears / facebows\"\n                  name=\"wiresLigaturesHeadgearFacebow\"\n                  fieldKey=\"wiresLigaturesHeadgearFacebow\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"X-ray Film\"\n                  name=\"xRayFilm\"\n                  fieldKey=\"xRayFilm\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Dispoables\"\n                  name=\"dispoables\"\n                  fieldKey=\"dispoables\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"total\" fieldKey=\"total\">\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card title=\"Marketing\">\n                <Form.Item\n                  label=\"Website\"\n                  name=\"website\"\n                  fieldKey=\"website\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      pattern: urlPatternRegex,\n                      message: 'Website is not valid!',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Marketing\"\n                  name=\"marketing\"\n                  fieldKey=\"marketing\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Advertising\"\n                  name=\"advertising\"\n                  fieldKey=\"advertising\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nSuppliesAndMarketingStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(SuppliesAndMarketingStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nimport AppConfig from '@/constants/AppConfig';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass AdministrativeServicesStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        administrativeOfficeSupplies: null,\n        bankCcServicesCharges: null,\n        businessEquipmentPurchases: null,\n        businessEquipmentRepair: null,\n        collectionCost: null,\n        dues: null,\n        laundryOrTowelServices: null,\n        prof: null,\n        licenses: null,\n        crmSoftware: null,\n        malpracticeInsurance: null,\n        other: null,\n        overheadInsurance: null,\n        cellPhone: null,\n        payrollServicesFee: null,\n        postageAndFreight: null,\n        subscriptions: null,\n        personalPropertyTaxes: null,\n        telephone: null,\n        uniforms: null,\n        total: null,\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoAdministrativeServices'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoAdministrativeServices');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.LABORTORY}`);\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoAdministrativeServices', JSON.stringify(data));\n\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.DOCTOR_SALARY}`);\n  }\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"administrative-services-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Administrative Services\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={48}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Administrative Office Supplies\"\n                name=\"administrativeOfficeSupplies\"\n                fieldKey=\"administrativeOfficeSupplies\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Bank & CC Services Charges\"\n                name=\"bankCcServicesCharges\"\n                fieldKey=\"bankCcServicesCharges\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Business Equipment Purchases\"\n                name=\"businessEquipmentPurchases\"\n                fieldKey=\"businessEquipmentPurchases\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Business Equipment Repair / Main\"\n                name=\"businessEquipmentRepair\"\n                fieldKey=\"businessEquipmentRepair\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Collection Cost\"\n                name=\"collectionCost\"\n                fieldKey=\"collectionCost\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Dues\"\n                name=\"dues\"\n                fieldKey=\"dues\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Laundry / Towel Services\"\n                name=\"laundryOrTowelServices\"\n                fieldKey=\"laundryOrTowelServices\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Prof fees / Legal / Acct\"\n                name=\"prof\"\n                fieldKey=\"prof\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Licenses\"\n                name=\"licenses\"\n                fieldKey=\"licenses\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"CRM Software\"\n                name=\"crmSoftware\"\n                fieldKey=\"crmSoftware\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Malpractice Insurance\"\n                name=\"malpracticeInsurance\"\n                fieldKey=\"malpracticeInsurance\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Other\"\n                name=\"other\"\n                fieldKey=\"other\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Overhead Insurance\"\n                name=\"overheadInsurance\"\n                fieldKey=\"overheadInsurance\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Cell Phone\"\n                name=\"cellPhone\"\n                fieldKey=\"cellPhone\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <PhoneInput\n                  country='us'\n                  inputStyle={{ width: '100%' }}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Payroll Services Fee\"\n                name=\"payrollServicesFee\"\n                fieldKey=\"payrollServicesFee\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('Payroll Services Fee is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Postage and Freight\"\n                name=\"postageAndFreight\"\n                fieldKey=\"postageAndFreight\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Subscriptions\"\n                name=\"subscriptions\"\n                fieldKey=\"subscriptions\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Personal Property Taxes\"\n                name=\"personalPropertyTaxes\"\n                fieldKey=\"personalPropertyTaxes\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('Personal Property Taxes is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Telephone\"\n                name=\"telephone\"\n                fieldKey=\"telephone\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <PhoneInput\n                  country='us'\n                  inputStyle={{ width: '100%' }}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Uniforms\"\n                name=\"uniforms\"\n                fieldKey=\"uniforms\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Total\"\n                name=\"total\"\n                fieldKey=\"total\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value) ?\n                        Promise.resolve() :\n                        Promise.reject(new Error('Total is not a valid number'))\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nAdministrativeServicesStep.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(AdministrativeServicesStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\nimport {\n  orthoSubmitData\n} from '@/actions/orthoActions';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass SolvencySavingsROIFundsStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        deposit: null,\n        retiringPastDueDebt: null,\n        transferredOutOfSolvencyAcct: null,\n        total: null,\n        pension: null,\n        drCe: null,\n        longTermInvestments: null,\n        goodwillLoanPracticePayments: null,\n        scpdExpenses: null,\n        roiFundTotal: null,\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('orthoSolvencySavingsROIFunds'));\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('orthoSolvencySavingsROIFunds');\n    };\n  }\n\n  onBack = () => {\n    const { history } = this.props;\n    history.push(`${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.DOCTOR_SALARY}`);\n  }\n\n  onFinish = data => {\n    localStorage.setItem('orthoSolvencySavingsROIFunds', JSON.stringify(data));\n\n    const {\n      history,\n      orthoSubmitData,\n    } = this.props;\n\n    const orthoDoctorProduction = JSON.parse(localStorage.getItem('orthoDoctorProduction'));\n\n    const params = {\n      ortho: {\n        doctorProduction: orthoDoctorProduction ? orthoDoctorProduction.doctorProduction : [],\n        patientActivity: JSON.parse(localStorage.getItem('orthoPatientActivity')) || {},\n        collections: JSON.parse(localStorage.getItem('orthoCollections')) || {},\n        staffCompensation: JSON.parse(localStorage.getItem('orthoStaffCompensation')) || {},\n        occupancyAndHP: JSON.parse(localStorage.getItem('orthoOccupanyAndHP')) || {},\n        suppliesAndMarketing: JSON.parse(localStorage.getItem('orthoSuppliesAndMarketing')) || {},\n        laboratory: JSON.parse(localStorage.getItem('orthoLaboratory')) || {},\n        administrativeServices: JSON.parse(localStorage.getItem('orthoAdministrativeServices')) || {},\n        doctorSalary: JSON.parse(localStorage.getItem('orthoDoctorSalary')) || {},\n        solvencySavingsROIFunds: JSON.parse(localStorage.getItem('orthoSolvencySavingsROIFunds')) || {},\n      },\n    };\n\n    orthoSubmitData({ params, history });\n  }\n\n  render() {\n    const { initialValues } = this.state;\n\n    return (\n      <div className=\"solvency-savings-roi-funds-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Ortho Submit Data\"\n          subTitle=\"Solvency, Savings and ROI Funds\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Card title=\"Solvency / Savings\">\n                <Form.Item\n                  label=\"Deposits Made\"\n                  name=\"deposit\"\n                  fieldKey=\"deposit\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Retiring Past Due Debt\"\n                  name=\"retiringPastDueDebt\"\n                  fieldKey=\"retiringPastDueDebt\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Transferred out of Solvency Acct\"\n                  name=\"transferredOutOfSolvencyAcct\"\n                  fieldKey=\"transferredOutOfSolvencyAcct\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name=\"total\"\n                  fieldKey=\"total\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Total is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card title=\"ROI Funds\">\n                <Form.Item\n                  label=\"Dr. Pension\"\n                  name=\"pension\"\n                  fieldKey=\"pension\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other CE\"\n                  name=\"drCe\"\n                  fieldKey=\"drCe\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Long-Term Investments\"\n                  name=\"longTermInvestments\"\n                  fieldKey=\"longTermInvestments\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Goodwill Loan Practice Payments\"\n                  name=\"goodwillLoanPracticePayments\"\n                  fieldKey=\"goodwillLoanPracticePayments\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"SCPD Expenses\"\n                  name=\"scpdExpenses\"\n                  fieldKey=\"scpdExpenses\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name=\"roiFundTotal\"\n                  fieldKey=\"roiFundTotal\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value) ?\n                          Promise.resolve() :\n                          Promise.reject(new Error('Total is not a valid number'))\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nSolvencySavingsROIFundsStep.propTypes = {\n  history: PropTypes.object,\n  orthoSubmitData: PropTypes.func,\n};\n\nexport default withRouter(\n  connect(null, {\n    orthoSubmitData,\n  })(SolvencySavingsROIFundsStep)\n);\n","import api from '@/api';\nimport snakecaseKeys from 'snakecase-keys';\nimport {\n  setLoading,\n} from '@/store/doctor';\nimport {\n  throwErrors,\n  clearErrors\n} from '@/actions/errorActions';\nimport {\n  setFlashError,\n  setFlashSuccess,\n} from '@/actions/flashMessageActions';\n\nimport AppConfig from '@/constants/AppConfig';\n\nexport const orthoSubmitData = ({ params, history }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .post('/api/v1/orthos', snakecaseKeys(params))\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        dispatch(clearErrors('orthoSubmitData'));\n        dispatch(setFlashSuccess({ message }));\n\n        history.push(AppConfig.ROUTES.STUDENTS_SUBMIT_DATA);\n      } else {\n        dispatch(setFlashError({ message }));\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(throwErrors('orthoSubmitData', { 'Submitted data': ['is invalid'] }));\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppConfig from '@/constants/AppConfig';\n\nimport LaboratoryStep from '@/containers/Ortho/SubmitData/LaboratoryStep';\nimport CollectionsStep from '@/containers/Ortho/SubmitData/CollectionsStep';\nimport DoctorSalaryStep from '@/containers/Ortho/SubmitData/DoctorSalaryStep';\nimport OccupanyAndHPStep from '@/containers/Ortho/SubmitData/OccupanyAndHPStep';\nimport PatientActivityStep from '@/containers/Ortho/SubmitData/PatientActivityStep';\nimport DoctorProductionStep from '@/containers/Ortho/SubmitData/DoctorProductionStep';\nimport StaffCompensationStep from '@/containers/Ortho/SubmitData/StaffCompensationStep';\nimport SuppliesAndMarketingStep from '@/containers/Ortho/SubmitData/SuppliesAndMarketingStep';\nimport AdministrativeServicesStep from '@/containers/Ortho/SubmitData/AdministrativeServicesStep';\nimport SolvencySavingsROIFundsStep from '@/containers/Ortho/SubmitData/SolvencySavingsROIFundsStep';\n\nclass DensitySubmitData extends Component {\n  render() {\n    const {\n      match: {\n        params: { step },\n      },\n    } = this.props;\n\n    const {\n      LABORTORY,\n      COLLECTIONS,\n      DOCTOR_SALARY,\n      PATIENT_ACTIVITY,\n      OCCUPANY_AND_H_P,\n      DOCTOR_PRODUCTION,\n      STAFF_COMPENSATION,\n      SUPPLIES_MARKETING,\n      ADMINISTRATIVE_SERVICES,\n      SOLVENCY_SAVINGS_ROI_FUNDS,\n    } = AppConfig.ORTHO_SUBMIT_DATA_STEPS;\n\n    return (\n      <div className=\"submit-data-container\">\n        {step === DOCTOR_PRODUCTION && <DoctorProductionStep />}\n        {step === COLLECTIONS && <CollectionsStep />}\n        {step === PATIENT_ACTIVITY && <PatientActivityStep />}\n        {step === STAFF_COMPENSATION && <StaffCompensationStep />}\n        {step === OCCUPANY_AND_H_P && <OccupanyAndHPStep />}\n        {step === SUPPLIES_MARKETING && <SuppliesAndMarketingStep />}\n        {step === LABORTORY && <LaboratoryStep />}\n        {step === ADMINISTRATIVE_SERVICES && <AdministrativeServicesStep />}\n        {step === DOCTOR_SALARY && <DoctorSalaryStep />}\n        {step === SOLVENCY_SAVINGS_ROI_FUNDS && <SolvencySavingsROIFundsStep />}\n      </div>\n    );\n  }\n}\n\nDensitySubmitData.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired\n    })\n  }),\n};\n\nexport default DensitySubmitData;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Space, Button, Divider, PageHeader } from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\nimport { connect } from 'react-redux';\nimport { UserAccountType } from '@/constants';\n\nclass RegistrationContainer extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <div className=\"registration-container\">\n        <PageHeader className=\"site-page-header\" title=\"Registation Page\" />\n        <Divider />\n\n        <Space align=\"bottom\">\n          {currentUser?.account_type === UserAccountType.ADMIN && (\n            <Button\n              href={`${AppConfig.ROUTES.REGISTRATION}/${AppConfig.REGISTRATIONS.CREATE_STUDENT}`}\n              type=\"primary\"\n            >\n              Create Student\n            </Button>\n          )}\n\n          {currentUser?.account_type === UserAccountType.STUDENT_ADMIN && (\n            <Button\n              href={`${AppConfig.ROUTES.REGISTRATION}/${AppConfig.REGISTRATIONS.CREATE_USER}`}\n              type=\"primary\"\n            >\n              Create User\n            </Button>\n          )}\n        </Space>\n      </div>\n    );\n  }\n}\n\nRegistrationContainer.propTypes = {\n  currentUser: PropTypes.object,\n};\n\nfunction mapStateToProps({ auth }) {\n  return {\n    currentUser: auth.currentUser,\n  };\n}\n\nexport default connect(mapStateToProps, {})(RegistrationContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport AppConfig from '@/constants/AppConfig';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\nclass LaboratoryStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        restoriveLab: null,\n        alignersOrthoLab: null,\n        implantSupplies: null,\n        cerec: null,\n        total: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('dentistryLaboratory'));\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryLaboratory');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  handleTotal = (_, value) => {\n    const total = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (currentKey !== 'total') {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n\n      return previousValue;\n    }, 0);\n    this.formRef.current.setFieldsValue({\n      total,\n    });\n  };\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.SUPPLIES_MARKETING}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryLaboratory', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.ADMINISTRATIVE_SERVICES}${location.search}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"labortory-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Laboratory\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          onValuesChange={this.handleTotal}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Restorive Lab\"\n                name=\"restoriveLab\"\n                fieldKey=\"restoriveLab\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Aligners / Ortho Lab\"\n                name=\"alignersOrthoLab\"\n                fieldKey=\"alignersOrthoLab\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Implant Supplies\"\n                name=\"implantSupplies\"\n                fieldKey=\"implantSupplies\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item label=\"Cerec\" name=\"cerec\" fieldKey=\"cerec\">\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Total\"\n                name=\"total\"\n                fieldKey=\"total\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('Total is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatterTotal(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  disabled\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    laboratory: this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nLaboratoryStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(LaboratoryStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\nimport camelcaseKeys from 'camelcase-keys';\nimport { parseInt } from 'lodash';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass CollectionsStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        totalGross: null,\n        refunds: null,\n        totalNet: null,\n        collectionsAtTos: null,\n        zeroToThirtyDays: null,\n        thirtyOneToSixtyDays: null,\n        sixtyOneToNinetyDays: null,\n        ninetyOneToMoreDays: null,\n        total: null,\n        unpaidBillsDueThisMonth: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('dentistryCollections'));\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryCollections');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  handleTotal = (_, value) => {\n    const total = Object.keys(value).reduce((previousValue, currentKey) => {\n      // if (currentKey !== 'total' && currentKey !== 'unpaidBillsDueThisMonth') {\n      //   return previousValue + (parseInt(value[currentKey]) || 0);\n      // }\n      if (\n        currentKey === 'zeroToThirtyDays' ||\n        currentKey === 'thirtyOneToSixtyDays' ||\n        currentKey === 'sixtyOneToNinetyDays' ||\n        currentKey === 'ninetyOneToMoreDays'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n      return previousValue;\n    }, 0);\n    this.formRef.current.setFieldsValue({\n      total,\n    });\n  };\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.HYGEINIST_PRODUCTION}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryCollections', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.PATIENT_ACTIVITY}${location.search}`,\n    );\n  };\n\n  getValueOfKey = (key) =>\n    this.formRef.current.getFieldValue().doctorProduction[key];\n\n  setTotalGross = (value) => {\n    this.formRef.current.setFieldsValue({\n      totalNet:\n        Number(value) - Number(this.formRef.current.getFieldValue('refunds')),\n    });\n  };\n\n  setTotalRefund = (value) => {\n    this.formRef.current.setFieldsValue({\n      totalNet:\n        Number(this.formRef.current.getFieldValue('totalGross')) -\n        Number(value),\n    });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"collection-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Collections\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          onValuesChange={this.handleTotal}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[32, 16]}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Total Gross Collection\"\n                tooltip=\"Total dollars collected for the entire practice in the month.\"\n                name=\"totalGross\"\n                fieldKey=\"totalGross\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  onChange={(value) => this.setTotalGross(value)}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Refunds to Patients or Insurance Companies\"\n                tooltip=\"Only refunds to patients or refunds to insurance companies are\nconsidered collection adjustments.\"\n                name=\"refunds\"\n                fieldKey=\"refunds\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  onChange={(value) => this.setTotalRefund(value)}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Total Net Collections\"\n                tooltip=\"Total dollars gross collections minus the collection adjustments.\nThere is a formula in this cell so the spreadsheet will automatically compute this.\"\n                name=\"totalNet\"\n                fieldKey=\"totalNet\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatterTotal(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  disabled\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Collections at Time of Service\"\n                name=\"collectionsAtTos\"\n                tooltip=\"Revenue collected from patients at their appointment\"\n                fieldKey=\"collectionsAtTos\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Divider />\n          <Row gutter={[32, 16]}>\n            <Col span={12}>\n              <h3 className=\"ant-form-text\">Accounts Recievables</h3>\n              <Form.Item\n                label=\"0 to 30 Days\"\n                name=\"zeroToThirtyDays\"\n                fieldKey=\"zeroToThirtyDays\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('0 to 30 Days is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"31 to 60 Days\"\n                name=\"thirtyOneToSixtyDays\"\n                fieldKey=\"thirtyOneToSixtyDays\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('31 to 60 Days is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"61 to 90 Days\"\n                name=\"sixtyOneToNinetyDays\"\n                fieldKey=\"sixtyOneToNinetyDays\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('61 to 90 Days is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"91+ Days\"\n                name=\"ninetyOneToMoreDays\"\n                fieldKey=\"ninetyOneToMoreDays\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('91+ Days is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Total\"\n                name=\"total\"\n                fieldKey=\"total\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('Total is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatterTotal(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  disabled\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Unpaid Bills Due This Month\"\n                name=\"unpaidBillsDueThisMonth\"\n                fieldKey=\"unpaidBillsDueThisMonth\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Unpaid Bills Due This Month is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    collections: this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nCollectionsStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(CollectionsStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport AppConfig from '@/constants/AppConfig';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass OccupanyAndHPStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        mortgageOrRent: null,\n        utilities: null,\n        janitorial: null,\n        repairs: null,\n        facilitiesInsurance: null,\n        securitySystem: null,\n        propertyTax: null,\n        total: 0,\n        equipType: null,\n        officeFurnitureAndRepairs: null,\n        staffContinuingEducation: null,\n        staffScpdTuitionOrTravel: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('dentistryOccupanyAndHP'));\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryOccupanyAndHP');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  handleTotal = (_, value) => {\n    const total = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (\n        currentKey === 'mortgageOrRent' ||\n        currentKey === 'utilities' ||\n        currentKey === 'janitorial' ||\n        currentKey === 'repairs' ||\n        currentKey === 'facilitiesInsurance' ||\n        currentKey === 'securitySystem' ||\n        currentKey === 'propertyTax'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n\n      return previousValue;\n    }, 0);\n    const totalHp = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (\n        currentKey === 'officeFurnitureAndRepairs' ||\n        currentKey === 'equipType' ||\n        currentKey === 'icatExpenses' ||\n        currentKey === 'staffContinuingEducation' ||\n        currentKey === 'staffScpdTuitionOrTravel'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n\n      return previousValue;\n    }, 0);\n    this.formRef.current.setFieldsValue({\n      total,\n      totalHp,\n    });\n  };\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.STAFF_COMPENSATION}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryOccupanyAndHP', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.SUPPLIES_MARKETING}${location.search}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"occupany-and-h-and-p-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Occupany & H&P\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          onValuesChange={this.handleTotal}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Card title=\"Occupancy\">\n                <Form.Item\n                  label=\"Mortgage / Rent\"\n                  name=\"mortgageOrRent\"\n                  fieldKey=\"mortgageOrRent\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Utilities\"\n                  name=\"utilities\"\n                  fieldKey=\"utilities\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Janitorial\"\n                  name=\"janitorial\"\n                  fieldKey=\"janitorial\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Repairs / Maintenance / Leasehold Improv\"\n                  name=\"repairs\"\n                  fieldKey=\"repairs\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Facilities Insurance\"\n                  name=\"facilitiesInsurance\"\n                  fieldKey=\"facilitiesInsurance\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Security System\"\n                  name=\"securitySystem\"\n                  fieldKey=\"securitySystem\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Property Tax\"\n                  name=\"propertyTax\"\n                  fieldKey=\"propertyTax\"\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Property Tax is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"total\" fieldKey=\"total\">\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card title=\"Human & Physical Resource Development\">\n                <Form.Item\n                  label=\"Dental Equip Loan / Equip Maintenance\"\n                  name=\"equipType\"\n                  fieldKey=\"equipType\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Office Furniture and Repairs\"\n                  name=\"officeFurnitureAndRepairs\"\n                  fieldKey=\"officeFurnitureAndRepairs\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Staff Continuing Education\"\n                  name=\"staffContinuingEducation\"\n                  fieldKey=\"staffContinuingEducation\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Staff SCPD Tuition / Travel\"\n                  name=\"staffScpdTuitionOrTravel\"\n                  fieldKey=\"staffScpdTuitionOrTravel\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"totalHp\" fieldKey=\"totalHp\">\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    occupancy_and_hp: this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nOccupanyAndHPStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(OccupanyAndHPStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\nimport camelcaseKeys from 'camelcase-keys';\nimport { decFormatter } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass PatientActivityStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        activePatientCount: null,\n        newPatient6To20: null,\n        newPatient21To40: null,\n        newPatient41ToMore: null,\n        formalReviewOfFindings: null,\n        formalReviewAppointed: null,\n        formalReviewPresented: null,\n        formalReviewAccepted: null,\n        informalReviewOfFindings: null,\n        informalReviewAppointed: null,\n        informalReviewPresented: null,\n        informalReviewAccepted: null,\n        dueInRecareThisMonth: null,\n        seen: null,\n        patientsOfRecord: null,\n        otherDoctors: null,\n        website: null,\n        signage: null,\n        teamMembers: null,\n        other: null,\n        rpcQuadrant: null,\n        rpcTeeth: null,\n        perioMaintenance: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(\n      localStorage.getItem('dentistryPatientActivity'),\n    );\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryPatientActivity');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.COLLECTIONS}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryPatientActivity', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.STAFF_COMPENSATION}${location.search}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"patient-activity-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Patient Activity\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"Active Patient Count\"\n                name=\"activePatientCount\"\n                tooltip=\"The practice probably has an active patient count\nfrom their Baseline Report. This number should be increased each month by the number\nof patients entering the practice as New Patients and reduced by the number that you are\naware have left the practice. Emergency only patients are not considered a New Patient\nuntil they have been through your New Patient process.\"\n                fieldKey=\"activePatientCount\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Active Patient Count is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"New Patient (6 to 20)\"\n                name=\"newPatient6To20\"\n                tooltip=\"Total number of New Patients for the month, according to their age\ngroup. \"\n                fieldKey=\"newPatient6To20\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'New Patient (6 to 20) is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"New Patient (21 to 40)\"\n                name=\"newPatient21To40\"\n                tooltip=\"Total number of New Patients for the month, according to their age group. \"\n                fieldKey=\"newPatient21To40\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'New Patient (21 to 40) is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"New Patient (41+)\"\n                name=\"newPatient41ToMore\"\n                tooltip=\"Total number of New Patients for the month, according to their age group. \"\n                fieldKey=\"newPatient41ToMore\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'New Patient (41+) is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <h3 className=\"ant-form-text\">Referred By</h3>\n              <Form.Item\n                label=\"Patients of Record\"\n                name=\"patientsOfRecord\"\n                tooltip=\"Total number of New Patients joining the practice\nthis month who were sent to the practice by a patient of record.\"\n                fieldKey=\"patientsOfRecord\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Patients of Record is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item label=\"Website\" name=\"website\" fieldKey=\"website\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8} style={{ paddingTop: '33px' }}>\n              <Form.Item\n                label=\"Other Doctors\"\n                tooltip=\"Total number of New Patients joining the practice this\nmonth who were sent to the practice by another healthcare professional.\"\n                name=\"otherDoctors\"\n                fieldKey=\"otherDoctors\"\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Team Members\"\n                name=\"teamMembers\"\n                fieldKey=\"teamMembers\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('Team Members is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8} style={{ paddingTop: '33px' }}>\n              <Form.Item label=\"Signage\" name=\"signage\" fieldKey=\"signage\">\n                <Input />\n              </Form.Item>\n\n              <Form.Item label=\"Other\" name=\"other\" fieldKey=\"other\">\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"# of Formal Review of Findings\"\n                tooltip=\"Track formal and informal presentations separately. An informal presentation is done at\nthe same appointment where the need was diagnosed. A formal presentation occurs when\nthe patient is brought back for a separate appointment for a longer discussion.\n\nAssistants and Hygienists may be responsible for tracking the number of informal ROFs.\nThe formal number of ROFs may be tracked by the Administrato\n                \"\n                name=\"formalReviewOfFindings\"\n                fieldKey=\"formalReviewOfFindings\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              '# of Formal Review of Findings is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"$ Presented\"\n                tooltip=\"– Track the total dollars presented for formal presentations and separately\ntrack the total dollars presented for informal presentations.\"\n                name=\"formalReviewPresented\"\n                fieldKey=\"formalReviewPresented\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('$ Presented is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"# appointed\"\n                tooltip=\"How many of the patients who had a formal or informal presentation\nscheduled their next appointment before leaving the office? \"\n                name=\"formalReviewAppointed\"\n                fieldKey=\"formalReviewAppointed\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              '# of actual appointed is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"$ Accepted\"\n                tooltip=\"Total dollars accepted by patients from formal presentations and\nseparately from informal presentations. \"\n                name=\"formalReviewAccepted\"\n                fieldKey=\"formalReviewAccepted\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('$ Accepted is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"# of Informal Review of Findings\"\n                name=\"informalReviewOfFindings\"\n                fieldKey=\"informalReviewOfFindings\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              '# of Informal Review of Findings is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"$ Presented\"\n                name=\"informalReviewPresented\"\n                fieldKey=\"informalReviewPresented\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('$ Presented is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"# appointed\"\n                tooltip=\"How many of the patients who had a formal or informal presentation\nscheduled their next appointment before leaving the office? \"\n                name=\"informalReviewAppointed\"\n                fieldKey=\"informalReviewAppointed\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('# appointed is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"$ Accepted\"\n                name=\"informalReviewAccepted\"\n                fieldKey=\"informalReviewAccepted\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('$ Accepted is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[32, 16]}>\n            <Col span={8}>\n              <Form.Item\n                label=\"Due in Recare This Month\"\n                tooltip=\"Total number of patients due for a recare appointment with the\nHygiene Dept Department this month?\"\n                name=\"dueInRecareThisMonth\"\n                fieldKey=\"dueInRecareThisMonth\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Due in Recare This Month is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"# Seen\"\n                tooltip=\"Of the patients who were due, how many were seen in the month?\"\n                name=\"seen\"\n                fieldKey=\"seen\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('# Seen is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Divider />\n\n          <Divider />\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    patient_activity: this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nPatientActivityStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(PatientActivityStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { forEach } from 'lodash';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport api from '@/api';\nimport DebounceSelect from '@/components/DebounceSelect';\nimport AppConfig from '@/constants/AppConfig';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass DoctorProductionStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        doctorProduction: [\n          {\n            doctorId: null,\n            production: null,\n            discount: null,\n            netProduction: null,\n            patientHoursAvailable: null,\n            patientHoursScheduled: null,\n            patientHoursCancelled: null,\n            patientHoursRecoverd: null,\n            patientVisits: null,\n          },\n        ],\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchDoctors, page } = this.props;\n    const formData = JSON.parse(\n      localStorage.getItem('dentistryDoctorProduction'),\n    );\n\n    fetchDoctors({ page });\n\n    this.formRef.current.setFieldsValue(formData);\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryDoctorProduction');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = data?.map((record) => camelcaseKeys(record));\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue({\n          doctorProduction: formatData,\n        });\n      }\n    }\n  }\n\n  fetchDoctorList = (keyword) =>\n    api\n      .get('/api/v1/doctors', { params: { search: keyword } })\n      .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n      .then(({ result }) =>\n        result.data.map((item) => ({\n          label: item.attributes.fullname,\n          value: item.id,\n        })),\n      )\n      .catch((error) => {\n        throw error;\n      });\n\n  optionInit = () => {\n    const { items } = this.props;\n\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryDoctorProduction', JSON.stringify(data));\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.HYGEINIST_PRODUCTION}${location.search}`,\n    );\n  };\n\n  getValueOfKey = (key) =>\n    this.formRef.current.getFieldValue().doctorProduction[key];\n\n  setProduction = (fieldKey, value) => {\n    const data = this.formRef.current.getFieldValue('doctorProduction');\n\n    const updateData = data.map((doctor, index) => {\n      if (index === fieldKey) {\n        return {\n          ...doctor,\n          netProduction:\n            Number(value) - Number(this.getValueOfKey(fieldKey)?.discount || 0),\n        };\n      }\n\n      return doctor;\n    });\n\n    this.formRef.current.setFieldsValue({ doctorProduction: updateData });\n  };\n\n  setDiscount = (fieldKey, value) => {\n    const data = this.formRef.current.getFieldValue('doctorProduction');\n\n    const updateData = data.map((doctor, index) => {\n      if (index === fieldKey) {\n        return {\n          ...doctor,\n          netProduction:\n            Number(this.getValueOfKey(fieldKey)?.production || 0) -\n            Number(value),\n        };\n      }\n\n      return doctor;\n    });\n\n    this.formRef.current.setFieldsValue({ doctorProduction: updateData });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, history, data } = this.props;\n\n    return (\n      <div className=\"doctor-production-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Doctor Production\"\n        />\n\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"horizontal\"\n          labelCol={{\n            xl: {\n              span: 10,\n            },\n            lg: {\n              span: 8,\n            },\n            md: {\n              span: 12,\n            },\n            sm: {\n              span: 8,\n            },\n          }}\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[32, 16]}>\n            <Form.List name=\"doctorProduction\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field) => (\n                    <Col\n                      key={field.key}\n                      xl={{ span: 16 }}\n                      lg={{ span: 24 }}\n                      md={{ span: 24 }}\n                    >\n                      <Form.Item\n                        label=\"Doctor Name\"\n                        name={[field.name, 'doctorId']}\n                        fieldKey={[field.fieldKey, 'doctorId']}\n                      >\n                        <DebounceSelect\n                          showSearch\n                          optionInit={this.optionInit()}\n                          placeholder=\"Select Doctor\"\n                          fetchOptions={this.fetchDoctorList}\n                          style={{ width: '100%' }}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        tooltip=\"Each Doctor’s individual production for the month. Gross\nProduction represents the dollars produced by the Doctor before any discounts. i.e. as if\nevery patient paid the private fee for service fee.\"\n                        label=\"Dr. Production\"\n                        name={[field.name, 'production']}\n                        fieldKey={[field.fieldKey, 'production']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          onChange={(value) =>\n                            this.setProduction(field.key, value)\n                          }\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        tooltip=\"All adjustments made to gross production including courtesies, senior,\nemployee and friends and family discounts as well as insurance and Care Credit write\noffs. Be sure to include only Dr. production discounts in this section. Discounts to\nhygiene production belong under the hygiene adjustments colum\"\n                        label=\"Discounts\"\n                        name={[field.name, 'discount']}\n                        fieldKey={[field.fieldKey, 'discount']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Discounts is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          onChange={(value) =>\n                            this.setDiscount(field.key, value)\n                          }\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Net Production\"\n                        tooltip=\"Each doctor’s gross production for the month, minus any\nadjustment discounts. There is a formula in this cell so it will automatically compute.\"\n                        name={[field.name, 'netProduction']}\n                        fieldKey={[field.fieldKey, 'netProduction']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Net Production is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatterTotal(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          disabled\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr Patient Hours Available\"\n                        tooltip=\"Total hours available for patient care in the month. (Staff meeting\ntimes, administrative time, or lunch breaks are not included). Available hours should be\ndetermined at the END of each day .\"\n                        name={[field.name, 'patientHoursAvailable']}\n                        fieldKey={[field.fieldKey, 'patientHoursAvailable']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Dr Patient Hours Available is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr Patient Hours Scheduled\"\n                        tooltip=\"Report the total hours scheduled with patients.\nDetermine “Scheduled hours” at the END of the day. \"\n                        name={[field.name, 'patientHoursScheduled']}\n                        fieldKey={[field.fieldKey, 'patientHoursScheduled']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Dr Patient Hours Scheduled is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr. Patient Hours Cancelled\"\n                        tooltip=\"Total number of hours cancelled by patients.\nEstablish a system to track cancellations each day.\"\n                        name={[field.name, 'patientHoursCancelled']}\n                        fieldKey={[field.fieldKey, 'patientHoursCancelled']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Dr. Patient Hours Cancelled is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Dr. Patient Hours Recoverd\"\n                        tooltip=\"Total number of cancelled hours that were refilled with other\npatients each day.\"\n                        name={[field.name, 'patientHoursRecoverd']}\n                        fieldKey={[field.fieldKey, 'patientHoursRecoverd']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Dr. Patient Hours Recoverd is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"# of Patient Visits\"\n                        tooltip=\"Total number of patient visits on the doctor’s schedule, not including\nhygiene checks. \"\n                        name={[field.name, 'patientVisits']}\n                        fieldKey={[field.fieldKey, 'patientVisits']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      '# of Patient Visits is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      {field.key > 0 && (\n                        <Form.Item style={{ textAlign: 'right' }}>\n                          <Button\n                            onClick={() => remove(field.name)}\n                            type=\"danger\"\n                          >\n                            Remove\n                          </Button>\n                        </Form.Item>\n                      )}\n                    </Col>\n                  ))}\n\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      icon={<PlusOutlined />}\n                    >\n                      Add Doctor\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() => updateData(this.formRef.current.getFieldValue())}\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={() => {\n                  history.goBack();\n                }}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nDoctorProductionStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  fetchDoctors: PropTypes.func,\n  items: PropTypes.array,\n  page: PropTypes.number,\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ doctor, error }) => ({\n  items: doctor.items,\n  totalCount: doctor.totalCount,\n  page: doctor.page,\n  loading: doctor.loading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchDoctors,\n  })(DoctorProductionStep),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\n\nimport AppConfig from '@/constants/AppConfig';\nimport camelcaseKeys from 'camelcase-keys';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass StaffCompensationStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        assistants: {\n          grossSalary: null,\n          employerMatching: null,\n          futaSuta: null,\n          medicalInsurance: null,\n          pensionProfitSharing: null,\n          bonus: null,\n          otherBenefit: null,\n          workComp: null,\n          total: '0',\n        },\n        administrative: {\n          grossSalary: null,\n          employerMatching: null,\n          futaSuta: null,\n          medicalInsurance: null,\n          pensionProfitSharing: null,\n          bonus: null,\n          otherBenefit: null,\n          total: '0',\n        },\n        hygiene: {\n          grossSalary: null,\n          employerMatching: null,\n          futaSuta: null,\n          medicalInsurance: null,\n          pensionProfitSharing: null,\n          bonus: null,\n          otherBenefit: null,\n          total: '0',\n        },\n        hygieneAssistant: {\n          grossSalary: null,\n          employerMatching: null,\n          futaSuta: null,\n          medicalInsurance: null,\n          pensionProfitSharing: null,\n          bonus: null,\n          otherBenefit: null,\n          total: '0',\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(\n      localStorage.getItem('dentistryStaffCompensation'),\n    );\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      Object.keys(formatData).forEach((key) => {\n        formatData[key] = camelcaseKeys(formatData[key]);\n      });\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryStaffCompensation');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        Object.keys(formatData).forEach((key) => {\n          formatData[key] = camelcaseKeys(formatData[key]);\n        });\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.PATIENT_ACTIVITY}${location.search}`,\n    );\n  };\n\n  handleTotal = (_, value) => {\n    const totalAs = Object.keys(value.assistants).reduce(\n      (previousValue, currentKey) => {\n        if (\n          currentKey === 'grossSalary' ||\n          currentKey === 'employerMatching' ||\n          currentKey === 'futaSuta' ||\n          currentKey === 'medicalInsurance' ||\n          currentKey === 'pensionProfitSharing' ||\n          currentKey === 'bonus' ||\n          currentKey === 'otherBenefit'\n        ) {\n          return previousValue + (Number(value.assistants[currentKey]) || 0);\n        }\n\n        return previousValue;\n      },\n      0,\n    );\n    const totalAd = Object.keys(value.administrative).reduce(\n      (previousValue, currentKey) => {\n        if (\n          currentKey === 'grossSalary' ||\n          currentKey === 'employerMatching' ||\n          currentKey === 'futaSuta' ||\n          currentKey === 'medicalInsurance' ||\n          currentKey === 'pensionProfitSharing' ||\n          currentKey === 'bonus' ||\n          currentKey === 'otherBenefit'\n        ) {\n          return (\n            previousValue + (Number(value.administrative[currentKey]) || 0)\n          );\n        }\n\n        return previousValue;\n      },\n      0,\n    );\n    const totalH = Object.keys(value.hygiene).reduce(\n      (previousValue, currentKey) => {\n        if (\n          currentKey === 'grossSalary' ||\n          currentKey === 'employerMatching' ||\n          currentKey === 'futaSuta' ||\n          currentKey === 'medicalInsurance' ||\n          currentKey === 'pensionProfitSharing' ||\n          currentKey === 'bonus' ||\n          currentKey === 'otherBenefit'\n        ) {\n          return previousValue + (Number(value.hygiene[currentKey]) || 0);\n        }\n\n        return previousValue;\n      },\n      0,\n    );\n    const totalHA = Object.keys(value.hygieneAssistant).reduce(\n      (previousValue, currentKey) => {\n        if (\n          currentKey === 'grossSalary' ||\n          currentKey === 'employerMatching' ||\n          currentKey === 'futaSuta' ||\n          currentKey === 'medicalInsurance' ||\n          currentKey === 'pensionProfitSharing' ||\n          currentKey === 'bonus' ||\n          currentKey === 'otherBenefit'\n        ) {\n          return (\n            previousValue + (Number(value.hygieneAssistant[currentKey]) || 0)\n          );\n        }\n\n        return previousValue;\n      },\n      0,\n    );\n\n    this.formRef.current.setFieldsValue({\n      ...value,\n      administrative: {\n        total: totalAd,\n      },\n      assistants: {\n        ...value.assistants,\n        total: totalAs,\n      },\n      hygiene: {\n        total: totalH,\n      },\n      hygieneAssistant: {\n        total: totalHA,\n      },\n    });\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryStaffCompensation', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.OCCUPANY_AND_H_P}${location.search}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"staff-compensation-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Staff Compensation\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          onValuesChange={this.handleTotal}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={6}>\n              <Card title=\"Assistants\">\n                <Form.Item\n                  label=\"Gross Salary\"\n                  name={['assistants', 'grossSalary']}\n                  fieldKey={['assistants', 'grossSalary']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Gross Salary is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Employer Matching SocSec, Medicare\"\n                  name={['assistants', 'employerMatching']}\n                  fieldKey={['assistants', 'employerMatching']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"FUTA, SUTA\"\n                  name={['assistants', 'futaSuta']}\n                  fieldKey={['assistants', 'futaSuta']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Medical Insurance\"\n                  name={['assistants', 'medicalInsurance']}\n                  fieldKey={['assistants', 'medicalInsurance']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Pension / Profit Sharing\"\n                  name={['assistants', 'pensionProfitSharing']}\n                  fieldKey={['assistants', 'pensionProfitSharing']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Bonus\"\n                  name={['assistants', 'bonus']}\n                  fieldKey={['assistants', 'bonus']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Bonus is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other Benefit\"\n                  name={['assistants', 'otherBenefit']}\n                  fieldKey={['assistants', 'otherBenefit']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name={['assistants', 'total']}\n                  fieldKey={['assistants', 'total']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Work Comp - all\"\n                  name={['assistants', 'workComp']}\n                  fieldKey={['assistants', 'workComp']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={6}>\n              <Card title=\"Administrative\">\n                <Form.Item\n                  label=\"Gross Salary\"\n                  name={['administrative', 'grossSalary']}\n                  fieldKey={['administrative', 'grossSalary']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Gross Salary is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Employer Matching SocSec, Medicare\"\n                  name={['administrative', 'employerMatching']}\n                  fieldKey={['administrative', 'employerMatching']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"FUTA, SUTA\"\n                  name={['administrative', 'futaSuta']}\n                  fieldKey={['administrative', 'futaSuta']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Medical Insurance\"\n                  name={['administrative', 'medicalInsurance']}\n                  fieldKey={['administrative', 'medicalInsurance']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Pension / Profit Sharing\"\n                  name={['administrative', 'pensionProfitSharing']}\n                  fieldKey={['administrative', 'pensionProfitSharing']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Bonus\"\n                  name={['administrative', 'bonus']}\n                  fieldKey={['administrative', 'bonus']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Bonus is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other Benefit\"\n                  name={['administrative', 'otherBenefit']}\n                  fieldKey={['administrative', 'otherBenefit']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name={['administrative', 'total']}\n                  fieldKey={['administrative', 'total']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={6}>\n              <Card title=\"Hygiene\">\n                <Form.Item\n                  label=\"Gross Salary\"\n                  name={['hygiene', 'grossSalary']}\n                  fieldKey={['hygiene', 'grossSalary']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Gross Salary is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Employer Matching SocSec, Medicare\"\n                  name={['hygiene', 'employerMatching']}\n                  fieldKey={['hygiene', 'employerMatching']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"FUTA, SUTA\"\n                  name={['hygiene', 'futaSuta']}\n                  fieldKey={['hygiene', 'futaSuta']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Medical Insurance\"\n                  name={['hygiene', 'medicalInsurance']}\n                  fieldKey={['hygiene', 'medicalInsurance']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Pension / Profit Sharing\"\n                  name={['hygiene', 'pensionProfitSharing']}\n                  fieldKey={['hygiene', 'pensionProfitSharing']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Bonus\"\n                  name={['hygiene', 'bonus']}\n                  fieldKey={['hygiene', 'bonus']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Bonus is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other Benefit\"\n                  name={['hygiene', 'otherBenefit']}\n                  fieldKey={['hygiene', 'otherBenefit']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name={['hygiene', 'total']}\n                  fieldKey={['hygiene', 'total']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={6}>\n              <Card title=\"Hygiene Assistant\">\n                <Form.Item\n                  label=\"Gross Salary\"\n                  name={['hygieneAssistant', 'grossSalary']}\n                  fieldKey={['hygieneAssistant', 'grossSalary']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Gross Salary is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Employer Matching SocSec, Medicare\"\n                  name={['hygieneAssistant', 'employerMatching']}\n                  fieldKey={['hygieneAssistant', 'employerMatching']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"FUTA, SUTA\"\n                  name={['hygieneAssistant', 'futaSuta']}\n                  fieldKey={['hygieneAssistant', 'futaSuta']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Medical Insurance\"\n                  name={['hygieneAssistant', 'medicalInsurance']}\n                  fieldKey={['hygieneAssistant', 'medicalInsurance']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Pension / Profit Sharing\"\n                  name={['hygieneAssistant', 'pensionProfitSharing']}\n                  fieldKey={['hygieneAssistant', 'pensionProfitSharing']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Bonus\"\n                  name={['hygieneAssistant', 'bonus']}\n                  fieldKey={['hygieneAssistant', 'bonus']}\n                  rules={[\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(\n                              new Error('Bonus is not a valid number'),\n                            ),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Other Benefit\"\n                  name={['hygieneAssistant', 'otherBenefit']}\n                  fieldKey={['hygieneAssistant', 'otherBenefit']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Total\"\n                  name={['hygieneAssistant', 'total']}\n                  fieldKey={['hygieneAssistant', 'total']}\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    staff_compensation: this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nStaffCompensationStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(StaffCompensationStep);\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  InputNumber,\n  Button,\n  Divider,\n  PageHeader,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\nimport { PlusOutlined } from '@ant-design/icons';\nimport AppConfig from '@/constants/AppConfig';\nimport { forEach } from 'lodash';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\nimport DebounceSelect from '@/components/DebounceSelect';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { connect } from 'react-redux';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass DoctorSalaryStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        doctorSalary: [\n          {\n            doctorId: null,\n            grossSalary: null,\n            employerMatch: null,\n            drawsDividendsDistributions: null,\n            insurancePremiums: null,\n            personalExpenses: null,\n            other: null,\n          },\n        ],\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(localStorage.getItem('dentistryDoctorSalary'));\n    const { fetchDoctors, page, data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    fetchDoctors({ page });\n    if (formatData) {\n      this.formRef.current.setFieldsValue({\n        doctorSalary: formatData,\n      });\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryDoctorSalary');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n      if (formatData) {\n        this.formRef.current.setFieldsValue({\n          doctorSalary: formatData,\n        });\n      }\n    }\n  }\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.ADMINISTRATIVE_SERVICES}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryDoctorSalary', JSON.stringify(data));\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.SOLVENCY_SAVINGS_ROI_FUNDS}${location.search}`,\n    );\n  };\n\n  optionInit = () => {\n    const { items } = this.props;\n\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n\n  handleTotal = (_, value) => {\n    const tempD = value.doctorSalary;\n    const res = tempD.map((obj) => {\n      const result = { ...obj };\n      if (!obj) {\n        return 0;\n      }\n      const total = Object.keys(obj).reduce((previousValue, currentKey) => {\n        if (\n          currentKey === 'grossSalary' ||\n          currentKey === 'employerMatch' ||\n          currentKey === 'drawsDividendsDistributions' ||\n          currentKey === 'insurancePremiums' ||\n          currentKey === 'personalExpenses' ||\n          currentKey === 'other'\n        ) {\n          return previousValue + (Number(obj[currentKey]) || 0);\n        }\n        return previousValue;\n      }, 0);\n      return { ...result, total };\n    });\n\n    this.formRef.current.setFieldsValue({\n      doctorSalary: res,\n    });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"doctor-salary-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Doctor Salary\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          onValuesChange={this.handleTotal}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Form.List name=\"doctorSalary\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field) => (\n                    <Col\n                      key={field.key}\n                      xl={{ span: 8 }}\n                      lg={{ span: 8 }}\n                      md={{ span: 8 }}\n                    >\n                      <Form.Item\n                        label=\"Doctor Name\"\n                        name={[field.name, 'doctorId']}\n                        fieldKey={[field.fieldKey, 'doctorId']}\n                      >\n                        <DebounceSelect\n                          showSearch\n                          optionInit={this.optionInit()}\n                          placeholder=\"Select Doctor\"\n                          fetchOptions={this.fetchDoctorList}\n                          style={{ width: '100%' }}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Gross Salary\"\n                        name={[field.name, 'grossSalary']}\n                        fieldKey={[field.name, 'grossSalary']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                  new Error(\n                                    'Gross Salary is not a valid number',\n                                  ),\n                                ),\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Employer Match for Soc Sec, Medicare\"\n                        name={[field.name, 'employerMatch']}\n                        fieldKey={[field.name, 'employerMatch']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Draws / Dividends / Distributions\"\n                        name={[field.name, 'drawsDividendsDistributions']}\n                        fieldKey={[field.name, 'drawsDividendsDistributions']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Insurance Premiums\"\n                        name={[field.name, 'insurancePremiums']}\n                        fieldKey={[field.name, 'insurancePremiums']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                  new Error(\n                                    'Insurance Premiums is not a valid number',\n                                  ),\n                                ),\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Personal Expenses Pd by Practice\"\n                        name={[field.name, 'personalExpenses']}\n                        fieldKey={[field.name, 'personalExpenses']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                  new Error(\n                                    'Personal Expenses Pd by Practice is not a valid number',\n                                  ),\n                                ),\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Other\"\n                        name={[field.name, 'other']}\n                        fieldKey={[field.name, 'other']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Total\"\n                        name={[field.name, 'total']}\n                        fieldKey={[field.name, 'total']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatterTotal(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          disabled\n                        />\n                      </Form.Item>\n                      {field.key > 0 && (\n                        <Form.Item style={{ textAlign: 'right' }}>\n                          <Button\n                            onClick={() => remove(field.name)}\n                            type=\"danger\"\n                          >\n                            Remove\n                          </Button>\n                        </Form.Item>\n                      )}\n                    </Col>\n                  ))}\n\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      icon={<PlusOutlined />}\n                    >\n                      Add Doctor\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() => updateData(this.formRef.current.getFieldValue())}\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row style={{ marginTop: 8 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nDoctorSalaryStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ doctor, error }) => ({\n  items: doctor.items,\n  totalCount: doctor.totalCount,\n  page: doctor.page,\n  loading: doctor.loading,\n});\n\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchDoctors,\n  })(DoctorSalaryStep),\n);\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { parseInt } from 'lodash';\n\nconst slice = createSlice({\n  name: 'hygienist',\n  initialState: {\n    page: 1,\n    items: [],\n    totalCount: 0,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    hygienistsFetched(state, { payload: { items, totalCount, page } }) {\n      state.page = page;\n      state.items = items.map((data) => ({\n        ...data,\n        id: parseInt(data.id),\n      }));\n      state.totalCount = totalCount;\n    },\n  },\n});\n\nexport const { setLoading, hygienistsFetched } = slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport {\n  setLoading,\n  hygienistsFetched,\n} from '@/store/hygienist';\n\nconst camelcaseKeys = require('camelcase-keys');\n\nexport const fetchHygienists = ({ page }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/hygienists', { params: { page } })\n    .then(\n      ({ data: response }) => {\n        const {\n          result: { data: items },\n          pagy: {\n            currentPage,\n            totalItems,\n            // totalPages,\n          }\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          hygienistsFetched({\n            items,\n            page: currentPage,\n            totalCount: totalItems,\n          }),\n        );\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { forEach } from 'lodash';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport api from '@/api';\nimport DebounceSelect from '@/components/DebounceSelect';\nimport AppConfig from '@/constants/AppConfig';\nimport { fetchHygienists } from '@/actions/hygienistActions';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass HygeinistProductionStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        hygienistProduction: [\n          {\n            hygienistId: null,\n            production: null,\n            discount: null,\n            netProduction: null,\n            hoursAvailable: null,\n            hoursScheduled: null,\n            hoursCancelled: null,\n            hoursRecoverd: null,\n            patientVisits: null,\n            productSales: null,\n          },\n        ],\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchHygienists, page, data } = this.props;\n    const formatData = data?.map((record) => camelcaseKeys(record));\n\n    const formData = JSON.parse(\n      localStorage.getItem('dentistryHygienistProduction'),\n    );\n\n    fetchHygienists({ page });\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue({\n        hygienistProduction: formatData,\n      });\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryHygienistProduction');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = data?.map((record) => camelcaseKeys(record));\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue({\n          hygienistProduction: formatData,\n        });\n      }\n    }\n  }\n\n  fetchHygienistList = (keyword) =>\n    api\n      .get('/api/v1/hygienists', { params: { search: keyword } })\n      .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n      .then(({ result }) =>\n        result.data.map((item) => ({\n          label: item.attributes.fullname,\n          value: item.id,\n        })),\n      )\n      .catch((error) => {\n        throw error;\n      });\n\n  optionInit = () => {\n    const { items } = this.props;\n\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistryHygienistProduction', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.COLLECTIONS}${location.search}`,\n    );\n  };\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.DOCTOR_PRODUCTION}${location.search}`,\n    );\n  };\n\n  getValueOfKey = (key) =>\n    this.formRef.current.getFieldValue().hygienistProduction[key];\n\n  setProduction = (fieldKey, value) => {\n    const data = this.formRef.current.getFieldValue('hygienistProduction');\n\n    const updateData = data.map((doctor, index) => {\n      if (index === fieldKey) {\n        return {\n          ...doctor,\n          netProduction:\n            Number(value) - Number(this.getValueOfKey(fieldKey)?.discount || 0),\n        };\n      }\n\n      return doctor;\n    });\n\n    this.formRef.current.setFieldsValue({ hygienistProduction: updateData });\n  };\n\n  setDiscount = (fieldKey, value) => {\n    const data = this.formRef.current.getFieldValue('hygienistProduction');\n\n    const updateData = data.map((doctor, index) => {\n      if (index === fieldKey) {\n        return {\n          ...doctor,\n          netProduction:\n            Number(this.getValueOfKey(fieldKey)?.production || 0) -\n            Number(value),\n        };\n      }\n\n      return doctor;\n    });\n\n    this.formRef.current.setFieldsValue({ hygienistProduction: updateData });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"hygienist-production-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Hygeinist Production\"\n        />\n\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"horizontal\"\n          labelCol={{ span: 9 }}\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[32, 16]}>\n            <Form.List name=\"hygienistProduction\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field) => (\n                    <Col span={16} key={field.key}>\n                      <Form.Item\n                        label=\"Hygenist Name\"\n                        tooltip=\"Please place all hygiene names on your master copy so that each\nhygienist’s statistics are placed in the same column every month.\"\n                        name={[field.name, 'hygienistId']}\n                        fieldKey={[field.fieldKey, 'hygienistId']}\n                      >\n                        <DebounceSelect\n                          showSearch\n                          optionInit={this.optionInit()}\n                          placeholder=\"Select Hygenist\"\n                          fetchOptions={this.fetchDoctorList}\n                          style={{ width: '100%' }}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Production\"\n                        name={[field.name, 'production']}\n                        fieldKey={[field.fieldKey, 'production']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          onChange={(value) =>\n                            this.setProduction(field.key, value)\n                          }\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Discounts\"\n                        name={[field.name, 'discount']}\n                        fieldKey={[field.fieldKey, 'discount']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Discounts is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatter(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          onChange={(value) =>\n                            this.setDiscount(field.key, value)\n                          }\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Net Production\"\n                        name={[field.name, 'netProduction']}\n                        fieldKey={[field.fieldKey, 'netProduction']}\n                      >\n                        <InputNumber\n                          formatter={(value) => decFormatterTotal(value)}\n                          parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          disabled\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Hygiene Hours Available\"\n                        tooltip=\"Total hours available for patient care in the month. (Staff\nmeeting times, administrative time, or lunch breaks are not included). Available hours\nshould be determined at the END of each day.\"\n                        name={[field.name, 'hoursAvailable']}\n                        fieldKey={[field.fieldKey, 'hoursAvailable']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Hours Available is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Hygiene Hours Scheduled\"\n                        tooltip=\"Report the total hours scheduled with patients. Determine\n“Scheduled hours” at the END of each day.\"\n                        name={[field.name, 'hoursScheduled']}\n                        fieldKey={[field.fieldKey, 'hoursScheduled']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Hours Scheduled is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Hygiene Hours Cancelled\"\n                        tooltip=\"Report the total hours scheduled with patients.\nDetermine “Scheduled hours” at the END of the day\"\n                        name={[field.name, 'hoursCancelled']}\n                        fieldKey={[field.fieldKey, 'hoursCancelled']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Hours Cancelled is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Hygiene Hours Recoverd\"\n                        tooltip=\"Total number of cancelled hours that were refilled with\nother patients each day.\"\n                        name={[field.name, 'hoursRecoverd']}\n                        fieldKey={[field.fieldKey, 'hoursRecoverd']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      'Hours Recoverd is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"# of Patient Visits\"\n                        name={[field.name, 'patientVisits']}\n                        fieldKey={[field.fieldKey, 'patientVisits']}\n                        rules={[\n                          {\n                            validator: (_, value) =>\n                              !isNaN(value)\n                                ? Promise.resolve()\n                                : Promise.reject(\n                                    new Error(\n                                      '# of Patient Visits is not a valid number',\n                                    ),\n                                  ),\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"Product Sales\"\n                        tooltip=\"Total dollar amount of products sold to patients by each\nhygienist.\"\n                        name={[field.name, 'productSales']}\n                        fieldKey={[field.fieldKey, 'productSales']}\n                      >\n                        <Input />\n                      </Form.Item>\n\n                      {field.key > 0 && (\n                        <Form.Item style={{ textAlign: 'right' }}>\n                          <Button\n                            onClick={() => remove(field.name)}\n                            type=\"danger\"\n                          >\n                            Remove\n                          </Button>\n                        </Form.Item>\n                      )}\n                    </Col>\n                  ))}\n\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      icon={<PlusOutlined />}\n                    >\n                      Add Hygenist\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() => updateData(this.formRef.current.getFieldValue())}\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nHygeinistProductionStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  fetchHygienists: PropTypes.func,\n  items: PropTypes.array,\n  page: PropTypes.number,\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ hygienist, error }) => ({\n  items: hygienist.items,\n  totalCount: hygienist.totalCount,\n  page: hygienist.page,\n  loading: hygienist.loading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchHygienists,\n  })(HygeinistProductionStep),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\nimport AppConfig from '@/constants/AppConfig';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass SuppliesAndMarketingStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        orthoSupplies: null,\n        supplies: null,\n        hygieneSupplies: null,\n        sharedSupplies: null,\n        hygieneProduct: null,\n        website: null,\n        marketing: null,\n        advertising: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(\n      localStorage.getItem('dentistrySuppliesAndMarketing'),\n    );\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistrySuppliesAndMarketing');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.OCCUPANY_AND_H_P}${location.search}`,\n    );\n  };\n\n  handleTotal = (_, value) => {\n    const totalH = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (\n        currentKey === 'supplies' ||\n        currentKey === 'hygieneSupplies' ||\n        currentKey === 'sharedSupplies' ||\n        currentKey === 'orthoSupplies' ||\n        currentKey === 'hygieneProduct'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n      return previousValue;\n    }, 0);\n    const totalM = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (\n        currentKey === 'advertising' ||\n        currentKey === 'website' ||\n        currentKey === 'marketing'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n      return previousValue;\n    }, 0);\n    this.formRef.current.setFieldsValue({\n      totalH,\n      totalM,\n    });\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem('dentistrySuppliesAndMarketing', JSON.stringify(data));\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.LABORTORY}${location.search}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"supplies-and-marketing-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Supplies & Marketing\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onValuesChange={this.handleTotal}\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Card title=\"Supplies / Raw Materials\">\n                <Form.Item\n                  label=\"Orthor Supplies\"\n                  name=\"orthoSupplies\"\n                  fieldKey=\"orthoSupplies\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Dr. Supplies\"\n                  name=\"supplies\"\n                  fieldKey=\"supplies\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Hygiene Supplies\"\n                  name=\"hygieneSupplies\"\n                  fieldKey=\"hygieneSupplies\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Shared Supplies\"\n                  name=\"sharedSupplies\"\n                  fieldKey=\"sharedSupplies\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Hygiene Product\"\n                  name=\"hygieneProduct\"\n                  fieldKey=\"hygieneProduct\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"totalH\" fieldKey=\"totalH\">\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card title=\"Marketing\">\n                <Form.Item label=\"Website\" name=\"website\" fieldKey=\"website\">\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Marketing\"\n                  name=\"marketing\"\n                  fieldKey=\"marketing\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Advertising\"\n                  name=\"advertising\"\n                  fieldKey=\"advertising\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"totalM\" fieldKey=\"totalM\">\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    supplies_and_marketing:\n                      this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nSuppliesAndMarketingStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(SuppliesAndMarketingStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport AppConfig from '@/constants/AppConfig';\nimport { parseInt } from 'lodash';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass AdministrativeServicesStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        administrativeOfficeSupplies: null,\n        bankCcServicesCharges: null,\n        businessEquipmentPurchases: null,\n        businessEquipmentRepair: null,\n        collectionCost: null,\n        dues: null,\n        laundryOrTowelServices: null,\n        prof: null,\n        licenses: null,\n        crmSoftware: null,\n        malpracticeInsurance: null,\n        other: null,\n        overheadInsurance: null,\n        cellPhone: null,\n        payrollServicesFee: null,\n        postageAndFreight: null,\n        subscriptions: null,\n        personalPropertyTaxes: null,\n        telephone: null,\n        uniforms: null,\n        mealAndEntertainment: null,\n        printing: null,\n        total: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(\n      localStorage.getItem('dentistryAdministrativeServices'),\n    );\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryAdministrativeServices');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  handleTotal = (_, value) => {\n    const total = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (currentKey !== 'total') {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n\n      return previousValue;\n    }, 0);\n    this.formRef.current.setFieldsValue({\n      total,\n    });\n  };\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.LABORTORY}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem(\n      'dentistryAdministrativeServices',\n      JSON.stringify(data),\n    );\n\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.DOCTOR_SALARY}${location.search}`,\n    );\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"administrative-services-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Administrative Services\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n          onValuesChange={this.handleTotal}\n        >\n          <Row gutter={48}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Administrative Office Supplies\"\n                name=\"administrativeOfficeSupplies\"\n                fieldKey=\"administrativeOfficeSupplies\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Bank & CC Services Charges\"\n                name=\"bankCcServicesCharges\"\n                fieldKey=\"bankCcServicesCharges\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Business Equipment Purchases\"\n                name=\"businessEquipmentPurchases\"\n                fieldKey=\"businessEquipmentPurchases\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Business Equipment Repair / Main\"\n                name=\"businessEquipmentRepair\"\n                fieldKey=\"businessEquipmentRepair\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Collection Cost\"\n                name=\"collectionCost\"\n                fieldKey=\"collectionCost\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item label=\"Dues\" name=\"dues\" fieldKey=\"dues\">\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Meal and Entertainment\"\n                name=\"mealAndEntertainment\"\n                fieldKey=\"mealAndEntertainment\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item label=\"Printing\" name=\"printing\" fieldKey=\"printing\">\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Laundry / Towel Services\"\n                name=\"laundryOrTowelServices\"\n                fieldKey=\"laundryOrTowelServices\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Prof fees / Legal / Acct\"\n                name=\"prof\"\n                fieldKey=\"prof\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item label=\"Licenses\" name=\"licenses\" fieldKey=\"licenses\">\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"CRM Software\"\n                name=\"crmSoftware\"\n                fieldKey=\"crmSoftware\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Malpractice Insurance\"\n                name=\"malpracticeInsurance\"\n                fieldKey=\"malpracticeInsurance\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item label=\"Other\" name=\"other\" fieldKey=\"other\">\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Overhead Insurance\"\n                name=\"overheadInsurance\"\n                fieldKey=\"overheadInsurance\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Cell Phone\"\n                name=\"cellPhone\"\n                fieldKey=\"cellPhone\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Payroll Services Fee\"\n                name=\"payrollServicesFee\"\n                fieldKey=\"payrollServicesFee\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Payroll Services Fee is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Postage and Freight\"\n                name=\"postageAndFreight\"\n                fieldKey=\"postageAndFreight\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Subscriptions\"\n                name=\"subscriptions\"\n                fieldKey=\"subscriptions\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Taxes (Personal Property OR Other)\"\n                name=\"personalPropertyTaxes\"\n                fieldKey=\"personalPropertyTaxes\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error(\n                              'Taxes (Personal Property OR Other) is not a valid number',\n                            ),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Telephone/Internet\"\n                name=\"telephone\"\n                fieldKey=\"telephone\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n              <Form.Item label=\"Uniforms\" name=\"uniforms\" fieldKey=\"uniforms\">\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Total\"\n                name=\"total\"\n                fieldKey=\"total\"\n                rules={[\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(\n                            new Error('Total is not a valid number'),\n                          ),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) => decFormatterTotal(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  disabled\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    administrative_services:\n                      this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Next\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nAdministrativeServicesStep.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  history: PropTypes.object,\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(AdministrativeServicesStep);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Card,\n  Input,\n  Button,\n  Divider,\n  PageHeader,\n  InputNumber,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\nimport queryString from 'query-string';\n\nimport AppConfig from '@/constants/AppConfig';\nimport { dentistrySubmitData } from '@/actions/dentistryActions';\nimport { decFormatter, decFormatterTotal } from '@/utils/helpers';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass SolvencySavingsROIFundsStep extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        deposit: null,\n        retiringPastDueDebt: null,\n        transferredOutOfSolvencyAcct: null,\n        totalS: null,\n        pension: null,\n        drCe: null,\n        draw: null,\n        dividend: null,\n        distributions: null,\n        profitabilityPayForTeam: null,\n        otherShortTermDebt: null,\n        totalRoi: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const formData = JSON.parse(\n      localStorage.getItem('dentistrySolvencySavingsROIFunds'),\n    );\n\n    const { data } = this.props;\n    const formatData = camelcaseKeys(data);\n\n    if (formatData) {\n      this.formRef.current.setFieldsValue(formatData);\n    } else {\n      this.formRef.current.setFieldsValue(formData);\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistrySolvencySavingsROIFunds');\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (prevProps.data !== data) {\n      const formatData = camelcaseKeys(data);\n\n      if (formatData) {\n        this.formRef.current.setFieldsValue(formatData);\n      }\n    }\n  }\n\n  handleTotal = (_, value) => {\n    const totalRoi = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (\n        currentKey === 'pension' ||\n        currentKey === 'drCe' ||\n        currentKey === 'draw' ||\n        currentKey === 'dividend' ||\n        currentKey === 'distributions' ||\n        currentKey === 'profitabilityPayForTeam'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n      return previousValue;\n    }, 0);\n    const totalS = Object.keys(value).reduce((previousValue, currentKey) => {\n      if (\n        currentKey === 'deposit' ||\n        currentKey === 'retiringPastDueDebt' ||\n        currentKey === 'transferredOutOfSolvencyAcct'\n      ) {\n        return previousValue + (Number(value[currentKey]) || 0);\n      }\n      return previousValue;\n    }, 0);\n    this.formRef.current.setFieldsValue({\n      totalS,\n      totalRoi,\n    });\n  };\n\n  onBack = () => {\n    const {\n      history,\n      match: {\n        params: { studentId },\n      },\n      location,\n    } = this.props;\n    history.push(\n      `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.DOCTOR_SALARY}${location.search}`,\n    );\n  };\n\n  onFinish = (data) => {\n    localStorage.setItem(\n      'dentistrySolvencySavingsROIFunds',\n      JSON.stringify(data),\n    );\n\n    const {\n      match: {\n        params: { studentId },\n      },\n      history,\n      dentistrySubmitData,\n      location,\n    } = this.props;\n\n    const query = queryString.parse(location.search);\n\n    const dentistryDoctorProduction = JSON.parse(\n      localStorage.getItem('dentistryDoctorProduction'),\n    );\n    const dentistryHygienistProduction = JSON.parse(\n      localStorage.getItem('dentistryHygienistProduction'),\n    );\n    const doctSal = JSON.parse(localStorage.getItem('dentistryDoctorSalary'));\n\n    const params = {\n      dentistry: {\n        month: query.month,\n        year: query.year,\n        doctorProduction: dentistryDoctorProduction\n          ? dentistryDoctorProduction.doctorProduction\n          : [],\n        hygienistProduction: dentistryHygienistProduction\n          ? dentistryHygienistProduction.hygienistProduction\n          : [],\n        doctorSalary: doctSal ? doctSal.doctorSalary : [],\n        patientActivity:\n          JSON.parse(localStorage.getItem('dentistryPatientActivity')) || {},\n        collections:\n          JSON.parse(localStorage.getItem('dentistryCollections')) || {},\n        staffCompensation:\n          JSON.parse(localStorage.getItem('dentistryStaffCompensation')) || {},\n        occupancyAndHP:\n          JSON.parse(localStorage.getItem('dentistryOccupanyAndHP')) || {},\n        suppliesAndMarketing:\n          JSON.parse(localStorage.getItem('dentistrySuppliesAndMarketing')) ||\n          {},\n        laboratory:\n          JSON.parse(localStorage.getItem('dentistryLaboratory')) || {},\n        administrativeServices:\n          JSON.parse(localStorage.getItem('dentistryAdministrativeServices')) ||\n          {},\n        solvencySavingsROIFunds:\n          JSON.parse(\n            localStorage.getItem('dentistrySolvencySavingsROIFunds'),\n          ) || {},\n      },\n    };\n\n    dentistrySubmitData(studentId, {\n      params,\n      history,\n    });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { updateData, data } = this.props;\n\n    return (\n      <div className=\"solvency-savings-roi-funds-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Dentistry Submit Data\"\n          subTitle=\"Solvency, Savings and ROI Funds\"\n        />\n        <Divider />\n\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          onValuesChange={this.handleTotal}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={32}>\n            <Col span={12}>\n              <Card title=\"Solvency / Savings\">\n                <Form.Item\n                  label=\"Deposits Made\"\n                  tooltip=\"Total dollars deposited into the Power Account for\nthe purpose of solvency.\"\n                  name=\"deposit\"\n                  fieldKey=\"deposit\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Retiring Past Due Debt\"\n                  tooltip=\"Total of checks written for\npaying expenses that had balances before the Schuster Program began. Included here are:\nPayments toward credit cards balances, used credit line draws, past due payables or past\ndue business taxes.\"\n                  name=\"retiringPastDueDebt\"\n                  fieldKey=\"retiringPastDueDebt\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Transferred out of Solvency Acct\"\n                  tooltip=\"Total dollars transferred out of Solvency to\npay the current month’s expenses.\"\n                  name=\"transferredOutOfSolvencyAcct\"\n                  fieldKey=\"transferredOutOfSolvencyAcct\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"totalS\" fieldKey=\"totalS\">\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card title=\"ROI Funds\">\n                <Form.Item\n                  label=\"Dr. Pension\"\n                  name=\"pension\"\n                  fieldKey=\"pension\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Dr. CE\" name=\"drCe\" fieldKey=\"drCe\">\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Draw\" name=\"draw\" fieldKey=\"draw\">\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Dividend\" name=\"dividend\" fieldKey=\"dividend\">\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Distributions\"\n                  name=\"distributions\"\n                  fieldKey=\"distributions\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label=\"Profitability Pay for Team\"\n                  name=\"profitabilityPayForTeam\"\n                  fieldKey=\"profitabilityPayForTeam\"\n                >\n                  <InputNumber\n                    formatter={(value) => decFormatter(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Total\" name=\"totalRoi\" fieldKey=\"totalRoi\">\n                  <InputNumber\n                    formatter={(value) => decFormatterTotal(value)}\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                    disabled\n                  />\n                </Form.Item>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Other Short Term Debt\"\n                name=\"otherShortTermDebt\"\n                fieldKey=\"otherShortTermDebt\"\n              >\n                <InputNumber\n                  formatter={(value) => decFormatter(value)}\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          {data && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  marginRight: '8px',\n                  marginBottom: '20px',\n                  background: '#13AF22',\n                  color: 'white',\n                }}\n                onClick={() =>\n                  updateData({\n                    solvency_savings_roi_funds:\n                      this.formRef.current.getFieldValue(),\n                  })\n                }\n              >\n                Update\n              </Button>\n            </div>\n          )}\n\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: '8px' }}\n                onClick={this.onBack}\n              >\n                Back\n              </Button>\n              {!data && (\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              )}\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nSolvencySavingsROIFundsStep.propTypes = {\n  history: PropTypes.object,\n  dentistrySubmitData: PropTypes.func,\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  data: PropTypes.array,\n  updateData: PropTypes.func,\n};\n\nexport default withRouter(\n  connect(null, {\n    dentistrySubmitData,\n  })(SolvencySavingsROIFundsStep),\n);\n","import api from '@/api';\nimport snakecaseKeys from 'snakecase-keys';\nimport { setLoading } from '@/store/doctor';\nimport { throwErrors, clearErrors } from '@/actions/errorActions';\nimport { setFlashError, setFlashSuccess } from '@/actions/flashMessageActions';\n\nimport AppConfig from '@/constants/AppConfig';\n\nexport const dentistrySubmitData =\n  (id, { params, history }) =>\n  async (dispatch) => {\n    dispatch(setLoading(true));\n\n    return api\n      .post(`/api/v1/users/${id}/dentistries`, snakecaseKeys(params))\n      .then(({ data: { success, message } }) => {\n        if (success) {\n          dispatch(clearErrors('dentistrySubmitData'));\n          dispatch(setFlashSuccess({ message }));\n\n          history.push(AppConfig.ROUTES.STUDENTS_SUBMIT_DATA);\n        } else {\n          dispatch(setFlashError({ message }));\n        }\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        if (error.response) {\n          dispatch(\n            throwErrors('dentistrySubmitData', {\n              'Submitted data': ['is invalid'],\n            }),\n          );\n        }\n        throw error;\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\nexport const updateDentistryData = (id, params) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .put(`/api/v1/users/${id}/dentistries`, snakecaseKeys(params))\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        dispatch(clearErrors('updateDentistryData'));\n        dispatch(setFlashSuccess({ message }));\n      } else {\n        dispatch(setFlashError({ message }));\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(\n          throwErrors('updateDentistryData', {\n            'Updatted data': ['is invalid'],\n          }),\n        );\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const showDentistryData = (id, params) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get(\n      `/api/v1/users/${id}/dentistries?year=${params.year}&month=${params.month}`,\n    )\n    .then(({ data: { data } }) => {\n      if (Object.keys(data).every((key) => data[key] !== null)) {\n        dispatch(clearErrors('fetchDentistryData'));\n        return data;\n      }\n      return null;\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(\n          throwErrors('fetchDentistryData', {\n            'Fetch data': ['not found'],\n          }),\n        );\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppConfig from '@/constants/AppConfig';\n\nimport LaboratoryStep from '@/containers/Density/SubmitData/LaboratoryStep';\nimport CollectionsStep from '@/containers/Density/SubmitData/CollectionsStep';\nimport OccupanyAndHPStep from '@/containers/Density/SubmitData/OccupanyAndHPStep';\nimport PatientActivityStep from '@/containers/Density/SubmitData/PatientActivityStep';\nimport DoctorProductionStep from '@/containers/Density/SubmitData/DoctorProductionStep';\nimport StaffCompensationStep from '@/containers/Density/SubmitData/StaffCompensationStep';\nimport DoctorSalaryStep from '@/containers/Density/SubmitData/DoctorSalaryStep';\nimport HygeinistProductionStep from '@/containers/Density/SubmitData/HygeinistProductionStep';\nimport SuppliesAndMarketingStep from '@/containers/Density/SubmitData/SuppliesAndMarketingStep';\nimport AdministrativeServicesStep from '@/containers/Density/SubmitData/AdministrativeServicesStep';\nimport SolvencySavingsROIFundsStep from '@/containers/Density/SubmitData/SolvencySavingsROIFundsStep';\nimport { connect } from 'react-redux';\nimport {\n  showDentistryData,\n  updateDentistryData,\n} from '@/actions/dentistryActions';\nimport queryString from 'query-string';\nimport './styles.scss';\n\nclass DensitySubmitData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { studentId },\n      },\n      showDentistryData,\n      location,\n    } = this.props;\n\n    const params = queryString.parse(location.search);\n\n    const data = await showDentistryData(studentId, params);\n    data &&\n      this.setState({\n        data,\n      });\n  }\n\n  updateData = (data) => {\n    const {\n      match: {\n        params: { studentId },\n      },\n      updateDentistryData,\n      location,\n    } = this.props;\n\n    const params = queryString.parse(location.search);\n    updateDentistryData(studentId, {\n      ...params,\n      ...data,\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { step },\n      },\n    } = this.props;\n    const { data } = this.state;\n\n    const {\n      LABORTORY,\n      COLLECTIONS,\n      DOCTOR_SALARY,\n      PATIENT_ACTIVITY,\n      OCCUPANY_AND_H_P,\n      DOCTOR_PRODUCTION,\n      SUPPLIES_MARKETING,\n      STAFF_COMPENSATION,\n      HYGEINIST_PRODUCTION,\n      ADMINISTRATIVE_SERVICES,\n      SOLVENCY_SAVINGS_ROI_FUNDS,\n    } = AppConfig.DENTISTRY_SUBMIT_DATA_STEPS;\n\n    return (\n      <div className=\"submit-data-container\">\n        {step === DOCTOR_PRODUCTION && (\n          <DoctorProductionStep\n            data={data?.doctor_production}\n            updateData={this.updateData}\n            backPath={AppConfig.ROUTES.REVIEW_SUBMITED}\n          />\n        )}\n        {step === HYGEINIST_PRODUCTION && (\n          <HygeinistProductionStep\n            data={data?.hygienist_production}\n            updateData={this.updateData}\n          />\n        )}\n        {step === COLLECTIONS && (\n          <CollectionsStep\n            data={data?.collections}\n            updateData={this.updateData}\n          />\n        )}\n        {step === PATIENT_ACTIVITY && (\n          <PatientActivityStep\n            data={data?.patient_activity}\n            updateData={this.updateData}\n          />\n        )}\n        {step === STAFF_COMPENSATION && (\n          <StaffCompensationStep\n            data={data?.staff_compensation}\n            updateData={this.updateData}\n          />\n        )}\n        {step === OCCUPANY_AND_H_P && (\n          <OccupanyAndHPStep\n            data={data?.occupancy_and_hp}\n            updateData={this.updateData}\n          />\n        )}\n        {step === SUPPLIES_MARKETING && (\n          <SuppliesAndMarketingStep\n            data={data?.supplies_and_marketing}\n            updateData={this.updateData}\n          />\n        )}\n        {step === LABORTORY && (\n          <LaboratoryStep\n            data={data?.laboratory}\n            updateData={this.updateData}\n          />\n        )}\n        {step === ADMINISTRATIVE_SERVICES && (\n          <AdministrativeServicesStep\n            data={data?.administrative_services}\n            updateData={this.updateData}\n          />\n        )}\n        {step === DOCTOR_SALARY && (\n          <DoctorSalaryStep\n            data={data?.doctor_salary}\n            updateData={this.updateData}\n          />\n        )}\n        {step === SOLVENCY_SAVINGS_ROI_FUNDS && (\n          <SolvencySavingsROIFundsStep\n            data={data?.solvency_savings_roi_funds}\n            updateData={this.updateData}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nDensitySubmitData.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  showDentistryData: PropTypes.func,\n  updateDentistryData: PropTypes.func,\n};\n\nexport default connect(null, {\n  showDentistryData,\n  updateDentistryData,\n})(DensitySubmitData);\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'profitPotential',\n  initialState: {\n    page: 1,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n  },\n});\n\nexport const { setLoading } = slice.actions;\n\nexport default slice.reducer;\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Radio,\n  Space,\n  Button,\n  Divider,\n  PageHeader,\n  Typography,\n  Upload,\n  InputNumber,\n  notification,\n} from 'antd';\nimport {\n  PlusOutlined,\n  MinusCircleOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport { omit } from 'lodash';\nimport { connect } from 'react-redux';\nimport { createProfitPotential } from '@/actions/profitPotentialAction';\n\nconst { Text } = Typography;\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: 'is required!',\n};\n\nclass ProfitAndLoss extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      backTaxes: false,\n    };\n  }\n\n  onSubmit = (data) => {\n    const { createProfitPotential } = this.props;\n    const { file } = data.document;\n\n    const formData = new FormData();\n    formData.append('data', JSON.stringify(omit(data, 'document')));\n    formData.append('document', file.originFileObj);\n\n    createProfitPotential(formData, (success, message) => {\n      this.formRef.current.resetFields();\n      this.setState({\n        backTaxes: false,\n      });\n\n      if (success) {\n        notification.success({\n          message,\n        });\n      } else {\n        notification.error({\n          message,\n        });\n      }\n    });\n  };\n\n  onChangeRadio = ({ target: { value } }) => {\n    this.setState({ backTaxes: value === 'yes' });\n  };\n\n  render() {\n    const { backTaxes } = this.state;\n\n    return (\n      <div className=\"profit-and-loss-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Profit Potential Profile\"\n        />\n        <Divider />\n        <Row>\n          <Col span={12}>\n            <Form\n              ref={this.formRef}\n              layout=\"vertical\"\n              validateMessages={validateMessages}\n              onFinish={this.onSubmit}\n            >\n              <Form.Item\n                label=\"Doctor(s) Salary Amount (if not shown on or listed as separate item on P & L):\"\n                name=\"salary\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(new Error('is not a valid number')),\n                  },\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) =>\n                    `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                  }\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n\n              <Space direction=\"vertical\" style={{ marginBottom: 10 }}>\n                <Text>\n                  Practice Loan Payments (All loan payments made through the\n                  practice should be listed)\n                </Text>\n                <Text italic type=\"secondary\">\n                  Type refers to: Equipment, Building, Practice Purchase, Cars,\n                  etc.\n                </Text>\n              </Space>\n              <Form.List name=\"loans\">\n                {(fields, { add, remove }) => (\n                  <>\n                    {fields.map(({ key, name, fieldKey, ...restField }) => (\n                      <Space key={key} align=\"baseline\">\n                        <Form.Item\n                          {...restField}\n                          name={[name, 'amount']}\n                          fieldKey={[fieldKey, 'amount']}\n                          label=\"Loan Payment (Monthly):\"\n                          rules={[{ required: true }]}\n                        >\n                          <InputNumber\n                            formatter={(value) =>\n                              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                            }\n                            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          {...restField}\n                          label=\"Type\"\n                          name={[name, 'type']}\n                          fieldKey={[fieldKey, 'type']}\n                          rules={[{ required: true }]}\n                        >\n                          <Input />\n                        </Form.Item>\n                        <MinusCircleOutlined onClick={() => remove(name)} />\n                      </Space>\n                    ))}\n                    <Form.Item>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => add()}\n                        block\n                        icon={<PlusOutlined />}\n                      >\n                        Add Loan Payment\n                      </Button>\n                    </Form.Item>\n                  </>\n                )}\n              </Form.List>\n\n              <Form.Item label=\"Are there back taxes?\">\n                <Radio.Group\n                  onChange={this.onChangeRadio}\n                  value={backTaxes ? 'yes' : 'no'}\n                >\n                  <Radio value=\"yes\">Yes</Radio>\n                  <Radio value=\"no\">No</Radio>\n                </Radio.Group>\n              </Form.Item>\n\n              {backTaxes && (\n                <Form.Item\n                  label=\"How much?\"\n                  name=\"back_taxes_amount\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      validator: (_, value) =>\n                        !isNaN(value)\n                          ? Promise.resolve()\n                          : Promise.reject(new Error('is not a valid number')),\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    formatter={(value) =>\n                      `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                    }\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                </Form.Item>\n              )}\n\n              <Form.Item\n                label=\"Ave. Dentist(s) Clinical Hours in the Practice:\"\n                name=\"ave_dentist_clinical_hours_practice\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(new Error('is not a valid number')),\n                  },\n                ]}\n              >\n                <Input suffix=\"Monthly\" type=\"number\" />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Ave. Number of Patient Visits (Doctor(s)):\"\n                name=\"ave_number_patient_visits\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (_, value) =>\n                      !isNaN(value)\n                        ? Promise.resolve()\n                        : Promise.reject(new Error('is not a valid number')),\n                  },\n                ]}\n              >\n                <Input suffix=\"Monthly\" type=\"number\" />\n              </Form.Item>\n              <Form.Item name=\"document\" rules={[{ required: true }]}>\n                <Upload accept=\".csv,.pdf\" maxCount={1}>\n                  <Button icon={<UploadOutlined />}>Upload 12 month P&L</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ marginRight: 20 }}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nProfitAndLoss.propTypes = {\n  createProfitPotential: PropTypes.func,\n};\n\nconst mapStateToProps = () => ({});\n\nexport default connect(mapStateToProps, {\n  createProfitPotential,\n})(ProfitAndLoss);\n","import api from '@/api';\nimport { setLoading } from '@/store/profitPotential';\nimport { throwErrors } from '@/actions/errorActions';\n\nexport const createProfitPotential = (formData, callback) => async (\n  dispatch,\n) => {\n  dispatch(setLoading(true));\n\n  return api\n    .post('/api/v1/profit_potentials', formData)\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        callback && callback(true, message);\n      } else {\n        callback && callback(false, message);\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(\n          throwErrors('profitPotential', { 'Submitted data': ['is invalid'] }),\n        );\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'questionsSurvey',\n  initialState: {\n    items: [],\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    questionsFetched(state, { payload: { items} }) {\n      state.items = items;\n    }\n  },\n});\n\nexport const {\n  setLoading,\n  questionsFetched,\n} = slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport snakecaseKeys from 'snakecase-keys';\nimport {\n  setLoading,\n  questionsFetched,\n} from '@/store/questionsSurvey';\n\nconst camelcaseKeys = require('camelcase-keys');\n\nexport const fetchQuestions = ({ questionType }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/questions_surveys', snakecaseKeys({ params: { questionType } }))\n    .then(\n      ({ data: response }) => {\n        const {\n          result,\n          success,\n          message,\n        } = camelcaseKeys(response, { deep: true });\n\n        if (success) {\n          const { data: items } = result;\n\n          dispatch(\n            questionsFetched({\n              items,\n            }),\n          );\n        } else {\n          throw message;\n        }\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'studentSurvey',\n  initialState: {\n    items: [],\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    studentSurveysFetched(state, { payload: { records } }) {\n      state.items = records;\n    },\n  },\n});\n\nexport const { setLoading, studentSurveysFetched } = slice.actions;\n\nexport default slice.reducer;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Form,\n  Divider,\n  PageHeader,\n  Select,\n  Spin,\n  notification,\n} from 'antd';\nimport 'survey-react/survey.css';\nimport * as Survey from 'survey-react';\nimport { fetchQuestions } from '@/actions/questionsSurveyActions';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { submitStudentSurvey } from '@/actions/studentSurveyAction';\n\nimport '../index.scss';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { TYPE_ENERGY_SURVEYS, UserAccountType } from '@/constants';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nconst { Option } = Select;\n\nclass BaseContainer extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedStudentId: null,\n      selectedType: null,\n      completed: false,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchQuestions,\n      fetchStudents,\n      questionType,\n      currentUser,\n    } = this.props;\n\n    if (\n      [UserAccountType.ADMIN, UserAccountType.STUDENT_ADMIN].includes(\n        currentUser?.account_type,\n      )\n    ) {\n      fetchStudents();\n    }\n    fetchQuestions({ questionType });\n  }\n\n  onFinish = (data) => {\n    console.log('🚀 ~ file: index.js ~ line 62 ~ data', data);\n  };\n\n  questions = () => {\n    const { items } = this.props;\n    const pageElements = items.map((item) => ({\n      type: 'rating',\n      name: `result_${item.id}`,\n      title: item.attributes.content,\n      isRequired: true,\n      rateMin: 1,\n      rateMax: 10,\n    }));\n\n    return {\n      completedHtml: '<h3>Thank you for your feedback.</h3>',\n      pages: [\n        {\n          name: 'page1',\n          elements: pageElements,\n        },\n      ],\n    };\n  };\n\n  formatSenderData = (data) =>\n    Object.keys(data).map((key) => {\n      const id = key.split('_')[1];\n      return {\n        questions_survey_id: id,\n        result: data[key],\n      };\n    });\n\n  sendDataToServer = async (sender, options) => {\n    if (\n      !this.formRef.current.getFieldValue('student') ||\n      !this.formRef.current.getFieldValue('type')\n    ) {\n      this.formRef.current.submit();\n      options.allowComplete = false;\n      return;\n    }\n\n    const { submitStudentSurvey } = this.props;\n    const { selectedStudentId, selectedType } = this.state;\n    const result = await submitStudentSurvey(\n      selectedStudentId,\n      selectedType,\n      this.formatSenderData(sender.data),\n    );\n\n    if (!result) {\n      options.allowComplete = false;\n      notification.error({\n        message: 'Something went wrong. Please try again!',\n      });\n    } else {\n      this.setState({\n        completed: true,\n      });\n    }\n  };\n\n  render() {\n    const { students, title } = this.props;\n    const { loading, completed } = this.state;\n\n    return (\n      <div className=\"base-energy-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title={title}\n          style={{ marginBottom: 10 }}\n        />\n        <Form ref={this.formRef} validateMessages={validateMessages}>\n          <Row style={{ alignItems: 'center', flexDirection: 'row' }}>\n            <div style={{ marginRight: 30 }}>\n              <Form.Item\n                label=\"Student\"\n                name=\"student\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please pick a Student!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: 200, marginLeft: 10 }}\n                  onSelect={async (id) => {\n                    this.setState({\n                      selectedStudentId: id,\n                    });\n\n                    if (completed) {\n                      this.setState({\n                        loading: true,\n                      });\n\n                      setTimeout(() => {\n                        this.setState({\n                          loading: false,\n                          completed: false,\n                        });\n                      }, 500);\n                    }\n                  }}\n                >\n                  {students.map((student, index) => (\n                    <Option value={student.id} key={index.toString()}>\n                      {`${student.first_name} ${student.last_name}`}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n\n            <div>\n              <Form.Item\n                label=\"Type\"\n                name=\"type\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please pick a Type!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: 200, marginLeft: 10 }}\n                  onSelect={async (type) => {\n                    this.setState({\n                      selectedType: type,\n                    });\n\n                    if (completed) {\n                      this.setState({\n                        loading: true,\n                      });\n\n                      setTimeout(() => {\n                        this.setState({\n                          loading: false,\n                          completed: false,\n                        });\n                      }, 500);\n                    }\n                  }}\n                >\n                  {TYPE_ENERGY_SURVEYS.map((data, index) => (\n                    <Option value={data.value} key={index.toString()}>\n                      {data.label}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n          </Row>\n\n          <Divider />\n          {loading ? (\n            <Spin\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                marginTop: 50,\n              }}\n              indicator={<LoadingOutlined style={{ fontSize: 50 }} spin />}\n            />\n          ) : (\n            <Row gutter={[24, 24]}>\n              <Survey.Survey\n                json={this.questions()}\n                onCompleting={this.sendDataToServer}\n              />\n            </Row>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nBaseContainer.propTypes = {\n  items: PropTypes.array,\n  students: PropTypes.array,\n  questionType: PropTypes.string,\n  title: PropTypes.string,\n  fetchQuestions: PropTypes.func,\n  fetchStudents: PropTypes.func,\n  submitStudentSurvey: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nconst mapStateToProps = ({\n  questionsSurvey,\n  student,\n  studentSurvey,\n  auth,\n}) => ({\n  items: questionsSurvey.items,\n  studentSurveyItems: studentSurvey.items,\n  students: student.items,\n  loading: student.loading,\n  currentUser: auth.currentUser,\n});\n\nexport default connect(mapStateToProps, {\n  fetchQuestions,\n  fetchStudents,\n  submitStudentSurvey,\n})(BaseContainer);\n","import api from '@/api';\nimport { throwErrors } from '@/actions/errorActions';\nimport { studentSurveysFetched, setLoading } from '@/store/studentSurvey';\n\nexport const submitStudentSurvey = (id, type, results) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .post(`/api/v1/users/${id}/surveys`, { data: { results, type } })\n    .then(({ data: { success } }) => {\n      if (success) return true;\n      return false;\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(throwErrors(error.response));\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const fetchStudentSurveys = (\n  id,\n  { questionType, userType } = {},\n) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get(\n      questionType\n        ? `/api/v1/users/${id}/surveys?question_type=${questionType}&userType=${userType}`\n        : `/api/v1/users/${id}/surveys`,\n    )\n    .then(({ data: { records } }) => {\n      dispatch(\n        studentSurveysFetched({\n          records,\n        }),\n      );\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(throwErrors(error.response));\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport BaseEnergyContainer from '../BaseEnergy';\n\nclass EnergyContainer extends Component {\n  render() {\n    return <BaseEnergyContainer title=\"Energy\" questionType=\"energy\" />;\n  }\n}\n\nEnergyContainer.propTypes = {};\n\nexport default EnergyContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Typography } from 'antd';\nimport { roundNumber } from '@/utils/helpers';\n\nimport './index.scss';\n\nconst { Text, Title } = Typography;\n\nconst columns = [\n  { title: '', dataIndex: 'name' },\n  { title: 'Q1', dataIndex: 'q1' },\n  { title: 'Q2', dataIndex: 'q2' },\n  { title: 'Q3', dataIndex: 'q3' },\n  { title: 'Q4', dataIndex: 'q4' },\n  { title: 'Q5', dataIndex: 'q5' },\n  { title: 'Q6', dataIndex: 'q6' },\n  { title: 'Q7', dataIndex: 'q7' },\n  { title: 'Q8', dataIndex: 'q8' },\n  { title: 'Q9', dataIndex: 'q9' },\n  { title: 'Q10', dataIndex: 'q10' },\n];\n\nconst EPTableComponent = ({ title, dataSource }) => (\n  <div className=\"energy-profile-result-table\">\n    <Title level={4}>{title}</Title>\n\n    <Table\n      bordered\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={false}\n      summary={(pageData) => {\n        let totlaScoreQ1 = 0;\n        let totlaScoreQ2 = 0;\n        let totlaScoreQ3 = 0;\n        let totlaScoreQ4 = 0;\n        let totlaScoreQ5 = 0;\n        let totlaScoreQ6 = 0;\n        let totlaScoreQ7 = 0;\n        let totlaScoreQ8 = 0;\n        let totlaScoreQ9 = 0;\n        let totlaScoreQ10 = 0;\n        const numberOfRow = pageData.length;\n\n        pageData.forEach(({ q1, q2, q3, q4, q5, q6, q7, q8, q9, q10 }) => {\n          totlaScoreQ1 += q1 * 1;\n          totlaScoreQ2 += q2 * 1;\n          totlaScoreQ3 += q3 * 1;\n          totlaScoreQ4 += q4 * 1;\n          totlaScoreQ5 += q5 * 1;\n          totlaScoreQ6 += q6 * 1;\n          totlaScoreQ7 += q7 * 1;\n          totlaScoreQ8 += q8 * 1;\n          totlaScoreQ9 += q9 * 1;\n          totlaScoreQ10 += q10 * 1;\n        });\n\n        return (\n          <>\n            <Table.Summary.Row>\n              <Table.Summary.Cell>Avg.</Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ1 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ2 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ3 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ4 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ5 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ6 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ7 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ8 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ9 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">\n                  {roundNumber(totlaScoreQ10 / numberOfRow)}\n                </Text>\n              </Table.Summary.Cell>\n            </Table.Summary.Row>\n          </>\n        );\n      }}\n    />\n  </div>\n);\n\nEPTableComponent.propTypes = {\n  title: PropTypes.string,\n  dataSource: PropTypes.object,\n};\n\nexport default EPTableComponent;\n","import React, { Component } from 'react';\nimport { Divider, PageHeader } from 'antd';\nimport EPTableComponent from './EPTableComponent';\n\nconst energyData = [\n  {\n    key: '1',\n    name: 'Doctor',\n    q1: 9,\n    q2: 8,\n    q3: 4,\n    q4: 8,\n    q5: 5,\n    q6: 5,\n    q7: 2,\n    q8: 7,\n    q9: 8,\n    q10: 9,\n  },\n  {\n    key: '2',\n    name: 'Two',\n    q1: 9,\n    q2: 5,\n    q3: 7,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 10,\n    q8: 7,\n    q9: 8,\n    q10: 4,\n  },\n  {\n    key: '3',\n    name: 'Three',\n    q1: 9,\n    q2: 7,\n    q3: 9,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 3,\n    q8: 5,\n    q9: 8,\n    q10: 9,\n  },\n];\n\nconst directionData = [\n  {\n    key: '1',\n    name: 'Doctor',\n    q1: 9,\n    q2: 8,\n    q3: 4,\n    q4: 8,\n    q5: 5,\n    q6: 5,\n    q7: 2,\n    q8: 7,\n    q9: 8,\n    q10: 9,\n  },\n  {\n    key: '2',\n    name: 'Two',\n    q1: 9,\n    q2: 5,\n    q3: 7,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 10,\n    q8: 7,\n    q9: 8,\n    q10: 4,\n  },\n  {\n    key: '3',\n    name: 'Three',\n    q1: 9,\n    q2: 7,\n    q3: 9,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 3,\n    q8: 5,\n    q9: 8,\n    q10: 9,\n  },\n];\n\nconst StructureAndSystemsData = [\n  {\n    key: '1',\n    name: 'Doctor',\n    q1: 9,\n    q2: 8,\n    q3: 4,\n    q4: 8,\n    q5: 5,\n    q6: 5,\n    q7: 2,\n    q8: 7,\n    q9: 8,\n    q10: 9,\n  },\n  {\n    key: '2',\n    name: 'Two',\n    q1: 9,\n    q2: 5,\n    q3: 7,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 10,\n    q8: 7,\n    q9: 8,\n    q10: 4,\n  },\n  {\n    key: '3',\n    name: 'Three',\n    q1: 9,\n    q2: 7,\n    q3: 9,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 3,\n    q8: 5,\n    q9: 8,\n    q10: 9,\n  },\n];\n\nconst commAndCoordData = [\n  {\n    key: '1',\n    name: 'Doctor',\n    q1: 9,\n    q2: 8,\n    q3: 4,\n    q4: 8,\n    q5: 5,\n    q6: 5,\n    q7: 2,\n    q8: 7,\n    q9: 8,\n    q10: 9,\n  },\n  {\n    key: '2',\n    name: 'Two',\n    q1: 9,\n    q2: 5,\n    q3: 7,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 10,\n    q8: 7,\n    q9: 8,\n    q10: 4,\n  },\n  {\n    key: '3',\n    name: 'Three',\n    q1: 9,\n    q2: 7,\n    q3: 9,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 3,\n    q8: 5,\n    q9: 8,\n    q10: 9,\n  },\n];\n\nconst AttitudeAndSkillsData = [\n  {\n    key: '1',\n    name: 'Doctor',\n    q1: 9,\n    q2: 8,\n    q3: 4,\n    q4: 8,\n    q5: 5,\n    q6: 5,\n    q7: 2,\n    q8: 7,\n    q9: 8,\n    q10: 9,\n  },\n  {\n    key: '2',\n    name: 'Two',\n    q1: 9,\n    q2: 5,\n    q3: 7,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 10,\n    q8: 7,\n    q9: 8,\n    q10: 4,\n  },\n  {\n    key: '3',\n    name: 'Three',\n    q1: 9,\n    q2: 7,\n    q3: 9,\n    q4: 6,\n    q5: 5,\n    q6: 5,\n    q7: 3,\n    q8: 5,\n    q9: 8,\n    q10: 9,\n  },\n];\n\nclass DataResult extends Component {\n  render() {\n    return (\n      <div className=\"energy-profile-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Data For Energy Profile\"\n        />\n        <Divider />\n\n        <EPTableComponent title=\"Energy\" dataSource={energyData} />\n        <Divider />\n\n        <EPTableComponent title=\"Direction\" dataSource={directionData} />\n        <Divider />\n\n        <EPTableComponent\n          title=\"Structure and Systems\"\n          dataSource={StructureAndSystemsData}\n        />\n        <Divider />\n\n        <EPTableComponent\n          title=\"Communication and Coordination\"\n          dataSource={commAndCoordData}\n        />\n        <Divider />\n\n        <EPTableComponent\n          title=\"Attitude and Skills\"\n          dataSource={AttitudeAndSkillsData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DataResult;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Table,\n  Typography\n} from 'antd';\nimport { roundNumber } from '@/utils/helpers';\n\nimport './index.scss';\n\nconst { Text, Title } = Typography;\n\nconst renderScore = (value) => (\n  {\n    children: roundNumber(value),\n    props: {},\n  }\n);\n\nconst columns = [\n  { title: '#', dataIndex: 'questionNo', },\n  { title: 'Answer', dataIndex: 'score', render: renderScore },\n];\n\nconst ScoreTable = ({ title, dataSource }) =>\n  <div className=\"energy-profile-score-table\">\n    <Title level={5}>{title}</Title>\n\n    <Table\n      bordered\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={false}\n      summary={pageData => {\n        let avgScore = 0;\n        const numberOfRow = pageData.length;\n\n        pageData.forEach(({ score }) => {\n          avgScore += score * 1;\n        });\n\n        return (\n          <>\n            <Table.Summary.Row>\n              <Table.Summary.Cell>Totals</Table.Summary.Cell>\n              <Table.Summary.Cell>\n                <Text type=\"danger\">{roundNumber(avgScore / numberOfRow)}</Text>\n              </Table.Summary.Cell>\n            </Table.Summary.Row>\n          </>\n        );\n      }}\n    />\n  </div>;\n\nScoreTable.propTypes = {\n  title: PropTypes.string,\n  dataSource: PropTypes.object,\n};\n\nexport default ScoreTable;\n","import React from 'react';\nimport {\n  Table,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\n\nconst columns = [\n  { title: '#', dataIndex: 'questionNo', },\n  { title: '', dataIndex: 'score' },\n];\n\nconst dataSource = [\n  { questionNo: 14, score: 2.5 },\n  { questionNo: 18, score: 3.5 },\n  { questionNo: 15, score: 3.5 },\n  { questionNo: 13, score: 3.5 },\n  { questionNo: 25, score: 4.0 },\n  { questionNo: 19, score: 4.5 },\n  { questionNo: 12, score: 4.5 },\n  { questionNo: 24, score: 5.0 },\n  { questionNo: 26, score: 5.0 },\n  { questionNo: 20, score: 5.0 },\n];\n\nconst LowestScores = () =>\n  <div className=\"lowest-scorese-table\">\n    <Title level={5}>Lowest Scores</Title>\n\n    <Table\n      bordered\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={false}\n    />\n  </div>;\n\nexport default LowestScores;\n","import React from 'react';\nimport {\n  Table,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\n\nconst columns = [\n  { title: '#', dataIndex: 'questionNo', },\n  { title: '', dataIndex: 'score' },\n];\n\nconst dataSource = [\n  { questionNo: 28, score: 8.0 },\n  { questionNo: 29, score: 8.0 },\n  { questionNo: 30, score: 8.0 },\n  { questionNo: 1, score: 8.0 },\n  { questionNo: 37, score: 8.0 },\n  { questionNo: 41, score: 8.5 },\n  { questionNo: 42, score: 8.5 },\n  { questionNo: 49, score: 8.5 },\n  { questionNo: 50, score: 8.5 },\n  { questionNo: 21, score: 9.0 },\n];\n\nconst HighestScores = () =>\n  <div className=\"highest-scorese-table\">\n    <Title level={5}>Highest Scores</Title>\n\n    <Table\n      bordered\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={false}\n    />\n  </div>;\n\nexport default HighestScores;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchStudentSurveys } from '@/actions/studentSurveyAction';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport moment from 'moment';\nimport { Row, Col, Tag, Table, Divider, PageHeader } from 'antd';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { SurveyType } from '@/constants';\nimport ScoreTable from './ScoreTable';\nimport LowestScores from './LowestScores';\nimport HighestScores from './HighestScores';\n\nconst columns = [\n  { title: '', dataIndex: 'name' },\n  { title: 'Energy', dataIndex: 'energyScore' },\n  { title: 'Direction', dataIndex: 'directionScore' },\n  { title: 'Structure and Systems', dataIndex: 'sasScore' },\n  { title: 'Communication and Coordination', dataIndex: 'cacScore' },\n  { title: 'Attitude and Skills', dataIndex: 'aasScore' },\n];\n\nclass DataAnalysis extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formatResult: {},\n      dataAvg: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const { location, fetchStudentSurveys } = this.props;\n\n    const params = queryString.parse(location.search);\n\n    fetchStudentSurveys(params.studentId);\n  }\n\n  componentDidUpdate(prevPros) {\n    const { result } = this.props;\n\n    if (result.length === 0) return;\n\n    if (prevPros.result !== result) {\n      this.formatData(result);\n    }\n  }\n\n  formatData(result) {\n    const doctorResult = this.formatAverageData(\n      this.formatResult(\n        result.filter((value) => value.survey_type === SurveyType.DOCTOR),\n      ),\n    );\n    const practiceResult = this.formatAverageData(\n      this.formatResult(\n        result.filter((value) => value.survey_type === SurveyType.PRACTICE),\n      ),\n    );\n\n    this.setState({\n      formatResult: this.formatAverageData(this.formatResult(result)),\n      data: [\n        {\n          name: 'Energy',\n          practice: this.calculateAverge(practiceResult?.energy),\n          doctor: this.calculateAverge(doctorResult?.energy),\n        },\n        {\n          name: 'Direction',\n          practice: this.calculateAverge(practiceResult?.direction),\n          doctor: this.calculateAverge(doctorResult?.direction),\n        },\n        {\n          name: 'Structure and Systems',\n          practice: this.calculateAverge(practiceResult?.structure_and_systems),\n          doctor: this.calculateAverge(doctorResult?.structure_and_systems),\n        },\n        {\n          name: 'Comm. and Coord.',\n          practice: this.calculateAverge(\n            practiceResult?.communication_and_coordination,\n          ),\n          doctor: this.calculateAverge(\n            doctorResult?.communication_and_coordination,\n          ),\n        },\n        {\n          name: 'Attitude and Skills',\n          practice: this.calculateAverge(practiceResult?.attitude_and_skills),\n          doctor: this.calculateAverge(doctorResult?.attitude_and_skills),\n        },\n      ],\n      dataAvg: [\n        {\n          key: '1',\n          name: 'Practice',\n          energyScore: this.calculateAverge(practiceResult?.energy),\n          directionScore: this.calculateAverge(practiceResult?.direction),\n          sasScore: this.calculateAverge(practiceResult?.structure_and_systems),\n          cacScore: this.calculateAverge(\n            practiceResult?.communication_and_coordination,\n          ),\n          aasScore: this.calculateAverge(practiceResult?.attitude_and_skills),\n        },\n        {\n          key: '2',\n          name: 'Doctor',\n          energyScore: this.calculateAverge(doctorResult?.energy),\n          directionScore: this.calculateAverge(doctorResult?.direction),\n          sasScore: this.calculateAverge(doctorResult?.structure_and_systems),\n          cacScore: this.calculateAverge(\n            doctorResult?.communication_and_coordination,\n          ),\n          aasScore: this.calculateAverge(doctorResult?.attitude_and_skills),\n        },\n      ],\n    });\n  }\n\n  /* eslint-disable */\n  formatResult(result) {\n    const data = {};\n    result.forEach((value) => {\n      if (!data[value?.question_type]) {\n        data[value?.question_type] = {};\n      }\n\n      if (!data[value?.question_type][value?.questions_survey_id]) {\n        data[value?.question_type][value?.questions_survey_id] = {\n          key: value?.questions_survey_id,\n          questionNo: value?.questions_survey_id,\n          score: [value?.result],\n        };\n      } else {\n        data[value?.question_type][value?.questions_survey_id].score.push(\n          value?.result,\n        );\n      }\n    });\n\n    return data;\n  }\n\n  /* eslint-disable */\n  formatAverageData(data) {\n    const averageData = {};\n    Object.keys(data)?.forEach((type) => {\n      const dataType = data[type];\n      averageData[type] = Object.keys(dataType)?.map((key) => {\n        const sum = dataType[key].score.reduce((a, b) => a + b, 0);\n        const avg = sum / dataType[key].score.length || 0;\n\n        return {\n          ...dataType[key],\n          score: avg,\n        };\n      });\n    });\n\n    return averageData;\n  }\n\n  /* eslint-disable */\n  calculateAverge(data) {\n    if (data) {\n      const total = data.reduce((a, b) => a + b?.score, 0);\n      return (total / data.length)?.toFixed(2) || 0;\n    }\n\n    return 0;\n  }\n\n  render() {\n    const { formatResult, dataAvg, data } = this.state;\n    return (\n      <div className=\"energy-profile-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Data Analysis\"\n          subTitle=\"Average Scores by Area\"\n          tags={<Tag color=\"blue\">{moment().format('MM/DD/YYYY')}</Tag>}\n        />\n        <Divider />\n\n        <Row gutter={[32, 16]}>\n          <Col span={8}>\n            <ScoreTable title=\"Energy\" dataSource={formatResult?.energy} />\n          </Col>\n\n          <Col span={8}>\n            <ScoreTable\n              title=\"Direction\"\n              dataSource={formatResult?.direction}\n            />\n          </Col>\n\n          <Col span={8}>\n            <ScoreTable\n              title=\"Structure and Systems\"\n              dataSource={formatResult?.structure_and_systems}\n            />\n          </Col>\n\n          <Col span={8}>\n            <ScoreTable\n              title=\"Communication and Coordination\"\n              dataSource={formatResult?.communication_and_coordination}\n            />\n          </Col>\n\n          <Col span={8}>\n            <ScoreTable\n              title=\"Attitude and Skills\"\n              dataSource={formatResult?.attitude_and_skills}\n            />\n          </Col>\n        </Row>\n\n        <Divider />\n        <div>\n          <Table\n            bordered\n            size=\"small\"\n            columns={columns}\n            dataSource={dataAvg}\n            pagination={false}\n            style={{ marginBottom: '30px' }}\n          />\n          <div style={{ height: '400px' }}>\n            <ResponsiveContainer width=\"80%\" height=\"100%\">\n              <BarChart\n                data={data}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 10,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"practice\" fill=\"#9999ff\" />\n                <Bar dataKey=\"doctor\" fill=\"#ff6600\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        <Divider />\n\n        <Row gutter={[32]}>\n          <Col span={12}>\n            <LowestScores />\n          </Col>\n\n          <Col span={12}>\n            <HighestScores />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nDataAnalysis.propTypes = {\n  location: PropTypes.object,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      step: PropTypes.string.isRequired,\n      studentId: PropTypes.string,\n    }),\n  }),\n  fetchStudentSurveys: PropTypes.func,\n  result: PropTypes.array,\n};\n\nconst mapStateToProps = ({ studentSurvey }) => ({\n  result: studentSurvey.items,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudentSurveys,\n})(DataAnalysis);\n","import React, { Component } from 'react';\nimport BaseEnergyContainer from '../BaseEnergy';\n\nclass DirectionContainer extends Component {\n  render() {\n    return <BaseEnergyContainer title=\"Direction\" questionType=\"direction\" />;\n  }\n}\n\nDirectionContainer.propTypes = {};\n\nexport default DirectionContainer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'classRoom',\n  initialState: {\n    page: 1,\n    items: [],\n    totalCount: 0,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    classRoomsFetched(state, { payload: { items, totalCount, page } }) {\n      state.page = page;\n      state.items = items;\n      state.totalCount = totalCount;\n    },\n    classRoomDetail(state, { payload: { item } }) {\n      state.item = item;\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  classRoomDetail,\n  classRoomsFetched,\n} = slice.actions;\n\nexport default slice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'classRoomScheduled',\n  initialState: {\n    page: 1,\n    items: [],\n    totalCount: 0,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    classRoomsScheduledFetched(state, { payload: { items, totalCount, page } }) {\n      state.page = page;\n      state.items = items;\n      state.totalCount = totalCount;\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  classRoomsScheduledFetched,\n} = slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport {\n  setLoading,\n  classRoomsScheduledFetched,\n} from '@/store/classRoomScheduled';\n\nconst camelcaseKeys = require('camelcase-keys');\n\nexport const fetchClassRoomsScheduled = ({ page }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/classes/scheduled', { params: { page } })\n    .then(\n      ({ data: response }) => {\n        const {\n          result: { data: items },\n          pagy: {\n            currentPage,\n            totalItems,\n            // totalPages,\n          }\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          classRoomsScheduledFetched({\n            items,\n            page: currentPage,\n            totalCount: totalItems,\n          }),\n        );\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { forEach } from 'lodash';\nimport {\n  Table,\n} from 'antd';\n\nimport {\n  fetchClassRoomsScheduled\n} from '@/actions/classRoomScheduledActions';\n\nconst classScheduledColumns = [\n  {\n    title: 'Class Name',\n    dataIndex: 'className',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n  },\n  {\n    title: 'Start Time',\n    dataIndex: 'startTime',\n  },\n  {\n    title: 'End Time',\n    dataIndex: 'endTime',\n  },\n  {\n    title: 'Material',\n    dataIndex: 'material',\n  },\n];\n\nclass ClassScheduled extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pagination: {\n        current: 1,\n        pageSize: 10,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchClassRoomsScheduled, page } = this.props;\n    fetchClassRoomsScheduled({ page });\n  }\n\n  handleTableChange = (pagination) => {\n\n  }\n\n  classScheduledData = () => {\n    const { items } = this.props;\n    const data = [];\n\n    forEach(items, item => {\n      const {\n        name: className,\n        date,\n        startTime,\n        endTime,\n        materialInclude,\n      } = item.attributes;\n\n      data.push({\n        key: item.id,\n        className,\n        date,\n        startTime,\n        endTime,\n        material: materialInclude,\n      });\n    });\n\n    return data;\n  }\n\n  render() {\n    const {\n      pagination,\n    } = this.state;\n\n    const {\n      loading\n    } = this.props;\n\n    return (\n      <div className=\"class-scheduled-container\">\n        <h1>Classes Scheduled</h1>\n        <Table\n          columns={classScheduledColumns}\n          dataSource={this.classScheduledData()}\n          rowKey={record => record.key}\n          pagination={pagination}\n          loading={loading}\n          onChange={this.handleTableChange}\n        />\n      </div>\n    );\n  }\n}\n\nClassScheduled.propTypes = {\n  fetchClassRoomsScheduled: PropTypes.func,\n  items: PropTypes.array,\n  page: PropTypes.number,\n  // totalCount: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nconst mapStateToProps = ({ classRoomScheduled, error }) => ({\n  items: classRoomScheduled.items,\n  totalCount: classRoomScheduled.totalCount,\n  page: classRoomScheduled.page,\n  loading: classRoomScheduled.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchClassRoomsScheduled,\n})(ClassScheduled);\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'classRoomCompleted',\n  initialState: {\n    page: 1,\n    items: [],\n    totalCount: 0,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    classRoomsCompletedFetched(state, { payload: { items, totalCount, page } }) {\n      state.page = page;\n      state.items = items;\n      state.totalCount = totalCount;\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  classRoomsCompletedFetched,\n} = slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport {\n  setLoading,\n  classRoomsCompletedFetched,\n} from '@/store/classRoomCompleted';\n\nconst camelcaseKeys = require('camelcase-keys');\n\nexport const fetchClassRoomsCompleted = ({ page }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/classes/completed', { params: { page } })\n    .then(\n      ({ data: response }) => {\n        const {\n          result: { data: items },\n          pagy: {\n            currentPage,\n            totalItems,\n            // totalPages,\n          }\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          classRoomsCompletedFetched({\n            items,\n            page: currentPage,\n            totalCount: totalItems,\n          }),\n        );\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { forEach } from 'lodash';\nimport {\n  Table,\n} from 'antd';\n\nimport {\n  fetchClassRoomsCompleted\n} from '@/actions/classRoomCompletedActions';\n\n\nconst classCompletedColumns = [\n  {\n    title: 'Class Name',\n    dataIndex: 'className',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n  },\n  {\n    title: 'Materials',\n    dataIndex: 'material',\n  },\n];\n\nclass ClassCompleted extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pagination: {\n        current: 1,\n        pageSize: 10,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchClassRoomsCompleted, page } = this.props;\n    fetchClassRoomsCompleted({ page });\n  }\n\n  handleTableChange = (pagination) => {\n  }\n\n  classCompletedData = () => {\n    const { items } = this.props;\n    const data = [];\n\n    forEach(items, item => {\n      const {\n        name: className,\n        date,\n        materialInclude,\n      } = item.attributes;\n\n      data.push({\n        key: item.id,\n        className,\n        date,\n        material: materialInclude,\n      });\n    });\n\n    return data;\n  }\n\n  render() {\n    const {\n      pagination,\n    } = this.state;\n\n    const {\n      loading\n    } = this.props;\n\n    return (\n      <div className=\"class-completed-container\">\n        <h1>Classes Completed</h1>\n        <Table\n          columns={classCompletedColumns}\n          dataSource={this.classCompletedData()}\n          rowKey={record => record.key}\n          pagination={pagination}\n          loading={loading}\n          onChange={this.handleTableChange}\n        />\n      </div>\n    );\n  }\n}\n\nClassCompleted.propTypes = {\n  fetchClassRoomsCompleted: PropTypes.func,\n  items: PropTypes.array,\n  page: PropTypes.number,\n  // totalCount: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nconst mapStateToProps = ({ classRoomCompleted, error }) => ({\n  items: classRoomCompleted.items,\n  totalCount: classRoomCompleted.totalCount,\n  page: classRoomCompleted.page,\n  loading: classRoomCompleted.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchClassRoomsCompleted,\n})(ClassCompleted);\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  forEach,\n} from 'lodash';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Divider,\n  Calendar,\n  PageHeader,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport api from '@/api';\nimport DebounceSelect from '@/components/DebounceSelect';\nimport {\n  fetchClassRooms\n} from '@/actions/classRoomActions';\n\nimport ClassScheduled from './ClassScheduled';\nimport ClassCompleted from './ClassCompleted';\nimport './index.scss';\n\nclass RegisterClassStep extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classSelected: null,\n      dateSelected: moment(),\n    };\n  }\n\n  componentDidMount() {\n    const { fetchClassRooms, page } = this.props;\n    fetchClassRooms({ page });\n  }\n\n  fetchClassList = (keyword) => api\n    .get('/api/v1/class_rooms', { params: { search: keyword } })\n    .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n    .then(({ result }) => result.data.map((item) => ({\n      label: item.attributes.name,\n      value: item.id,\n    })))\n    .catch((error) => {\n      throw error;\n    })\n\n  optionInit = () => {\n    const {\n      items\n    } = this.props;\n\n    const data = [];\n\n    forEach(items, item => {\n      const {\n        name: className,\n      } = item.attributes;\n\n      data.push({\n        label: className,\n        value: item.id,\n      });\n    });\n\n    return data;\n  }\n\n  onChangeSelect = (classSelected) => {\n    this.setState({ classSelected });\n  }\n\n  onCalendarSelect = (value) => {\n    this.setState({ dateSelected: value });\n  }\n\n  onPanelChange = (value, mode) => {\n    this.setState({ dateSelected: value });\n  }\n\n  render() {\n    const {\n      classSelected,\n      dateSelected\n    } = this.state;\n\n    const { onNextPage } = this.props;\n\n    return (\n      <div className=\"schedule-class-register-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Schedule Classes / Sessions\"\n        />\n        <Divider />\n\n        <Form\n          layout=\"vertical\"\n          onFinish={onNextPage}\n        >\n          <Row gutter={48}>\n            <Col\n              xl={8}\n              lg={12}\n              md={24}\n            >\n              <Form.Item\n                label=\"Select Class\"\n                name=\"classSelected\"\n                rules={[{ required: true, message: 'Class is required' }]}\n              >\n                <DebounceSelect\n                  showSearch\n                  value={classSelected}\n                  optionInit={this.optionInit()}\n                  placeholder=\"Select class\"\n                  fetchOptions={this.fetchClassList}\n                  onChange={this.onChangeSelect}\n                  style={{\n                    width: '100%',\n                  }}\n                />\n              </Form.Item>\n            </Col>\n            <Col\n              xl={8}\n              lg={12}\n            >\n              <Form.Item\n                name=\"date\"\n                className=\"calendar\"\n                initialValue={dateSelected}\n              >\n                <Calendar\n                  fullscreen={false}\n                  value={dateSelected}\n                  onSelect={this.onCalendarSelect}\n                  onPanelChange={this.onPanelChange}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Register\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n\n        <Divider />\n\n        <ClassScheduled />\n\n        <Divider />\n\n        <ClassCompleted />\n      </div>\n    );\n  }\n}\n\nRegisterClassStep.propTypes = {\n  fetchClassRooms: PropTypes.func,\n  items: PropTypes.array,\n  page: PropTypes.number,\n  onNextPage: PropTypes.func,\n};\n\nconst mapStateToProps = ({ classRoom, error }) => ({\n  items: classRoom.items,\n  totalCount: classRoom.totalCount,\n  page: classRoom.page,\n  loading: classRoom.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchClassRooms,\n})(RegisterClassStep);\n","import camelcaseKeys from 'camelcase-keys';\nimport snakecaseKeys from 'snakecase-keys';\nimport api from '@/api';\nimport {\n  setLoading,\n  classRoomDetail,\n  classRoomsFetched,\n} from '@/store/classRoom';\nimport {\n  throwErrors,\n  clearErrors\n} from '@/actions/errorActions';\nimport {\n  setFlashError,\n  setFlashSuccess,\n} from '@/actions/flashMessageActions';\n\nexport const fetchClassRooms = ({ page }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/class_rooms', { params: { page } })\n    .then(\n      ({ data: response }) => {\n        const {\n          result: { data: items },\n          pagy: {\n            currentPage,\n            totalItems,\n            // totalPages,\n          }\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          classRoomsFetched({\n            items,\n            page: currentPage,\n            totalCount: totalItems,\n          }),\n        );\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const getClassDetail = ({ classId }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get(`/api/v1/class_rooms/${classId}`)\n    .then(({ data: response }) => {\n      const {\n        result: { data: item },\n      } = camelcaseKeys(response, { deep: true });\n\n      dispatch(classRoomDetail({ item }));\n    })\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const createRegisterClass = ({ classRoomId, date, history }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  const params = {\n    classRoomRegistration: {\n      date,\n      classRoomId,\n    }\n  };\n\n  return api\n    .post('/api/v1/register_class', snakecaseKeys(params))\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        dispatch(clearErrors('registerClass'));\n        dispatch(setFlashSuccess({ message }));\n        history.go(0);\n      } else {\n        dispatch(setFlashError({ message }));\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(throwErrors('registerClass', { 'Submitted data': ['is invalid'] }));\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Space,\n  Divider,\n  PageHeader,\n  Descriptions,\n} from 'antd';\n\nimport {\n  getClassDetail\n} from '@/actions/classRoomActions';\n\nclass ConfirmRegisterClassStep extends Component {\n  componentDidMount() {\n    const { getClassDetail, classIdSelected } = this.props;\n\n    getClassDetail({ classId: classIdSelected });\n  }\n\n  renderInformationConfirm = (data) => {\n    const {\n      endTime,\n      startTime,\n      instructor,\n      description,\n      name: className,\n      materialInclude,\n    } = data;\n\n    const { dateSelected: date } = this.props;\n\n    return (\n      <div>\n        <Descriptions title=\"Class Selected\">\n          <Descriptions.Item label=\"Class Name\">{className}</Descriptions.Item>\n        </Descriptions>\n        <Descriptions>\n          <Descriptions.Item label=\"Date\">{date && moment(date).format('MM/DD/YYYY')}</Descriptions.Item>\n        </Descriptions>\n        <Descriptions>\n          <Descriptions.Item label=\"Start Time\">{startTime}</Descriptions.Item>\n        </Descriptions>\n        <Descriptions>\n          <Descriptions.Item label=\"End Time\">{endTime}</Descriptions.Item>\n        </Descriptions>\n        <Descriptions>\n          <Descriptions.Item label=\"Description\">\n            {description}\n          </Descriptions.Item>\n        </Descriptions>\n        <Descriptions>\n          <Descriptions.Item label=\"Instructor\">\n            {instructor}\n          </Descriptions.Item>\n        </Descriptions>\n        <Descriptions>\n          <Descriptions.Item label=\"Material Include\">\n            {materialInclude}\n          </Descriptions.Item>\n        </Descriptions>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      item,\n      onBack,\n      onSubmit,\n    } = this.props;\n\n    return (\n      <div className=\"schedule-class-confirm-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Schedule Classes / Sessions\"\n        />\n        <Divider />\n\n        <Form\n          layout=\"vertical\"\n        >\n          <Row>\n            <Col span={12}>\n              {item && this.renderInformationConfirm(item.attributes)}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Space>\n                <Button\n                  type=\"primary\"\n                  onClick={onBack}\n                >\n                  Back\n                </Button>\n                <Button\n                  type=\"primary\"\n                  onClick={onSubmit}\n                >\n                  Submit\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nConfirmRegisterClassStep.propTypes = {\n  onBack: PropTypes.func,\n  item: PropTypes.object,\n  onSubmit: PropTypes.func,\n  dateSelected: PropTypes.string,\n  getClassDetail: PropTypes.func,\n  classIdSelected: PropTypes.string,\n};\n\nconst mapStateToProps = ({ classRoom }) => ({\n  item: classRoom.item,\n});\n\nexport default connect(mapStateToProps, {\n  getClassDetail,\n})(ConfirmRegisterClassStep);\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport RegisterClassStep from '@/containers/ScheduleClasses/RegisterClassStep';\nimport ScheduleClassesConfirmStep from '@/containers/ScheduleClasses/ConfirmStep';\nimport {\n  createRegisterClass\n} from '@/actions/classRoomActions';\n\nclass ScheduleContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      step: 'registerClass',\n      formData: {\n        classRoomId: null,\n        date: null,\n      },\n    };\n  }\n\n  nextPage = (values) => {\n    this.setState({\n      step: 'confirm',\n      formData: {\n        classRoomId: values.classSelected.value,\n        date: moment(values.date).format('YYYY-MM-DD')\n      }\n    });\n  }\n\n  prevPage = () => {\n    this.setState({ step: 'registerClass' });\n  }\n\n  onSubmit = () => {\n    const { formData } = this.state;\n    const { createRegisterClass, history } = this.props;\n    createRegisterClass({ history, ...formData });\n  }\n\n  render() {\n    const {\n      step,\n      formData: {\n        date,\n        classRoomId,\n      },\n    } = this.state;\n\n    return (\n      <div className=\"schedule-container\">\n        {step === 'registerClass' &&\n          <RegisterClassStep\n            onNextPage={this.nextPage}\n          />\n        }\n        {step === 'confirm' &&\n          <ScheduleClassesConfirmStep\n            dateSelected={date}\n            onBack={this.prevPage}\n            onSubmit={this.onSubmit}\n            classIdSelected={classRoomId}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nScheduleContainer.propTypes = {\n  createRegisterClass: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default connect(null, {\n  createRegisterClass,\n})(ScheduleContainer);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Form,\n  Radio,\n  Upload,\n  Button,\n  Divider,\n  PageHeader,\n  DatePicker,\n  Select,\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { forEach } from 'lodash';\nimport AppConfig from '@/constants/AppConfig';\nimport { connect } from 'react-redux';\nimport { UserAccountType } from '@/constants';\nimport api from '@/api';\nimport camelcaseKeys from 'camelcase-keys';\nimport DebounceSelect from '@/components/DebounceSelect';\n\nconst { Option } = Select;\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass SubmitDataContainer extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      practiceType: null,\n      studentId: null,\n      dateMonth: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchStudents, fetchDoctors, currentUser } = this.props;\n\n    if (\n      [UserAccountType.ADMIN, UserAccountType.STUDENT_ADMIN].includes(\n        currentUser?.account_type,\n      )\n    ) {\n      fetchStudents({\n        filter: UserAccountType.STUDENT_STAFF,\n      });\n      fetchDoctors();\n    }\n\n    window.onbeforeunload = (e) => {\n      localStorage.removeItem('dentistryDoctorProduction');\n      localStorage.removeItem('dentistryHygienistProduction');\n      localStorage.removeItem('dentistryPatientActivity');\n      localStorage.removeItem('dentistryCollections');\n      localStorage.removeItem('dentistryStaffCompensation');\n      localStorage.removeItem('dentistryOccupanyAndHP');\n      localStorage.removeItem('dentistrySuppliesAndMarketing');\n      localStorage.removeItem('dentistryLaboratory');\n      localStorage.removeItem('dentistryAdministrativeServices');\n      localStorage.removeItem('dentistryDoctorSalary');\n      localStorage.removeItem('dentistrySolvencySavingsROIFunds');\n      localStorage.removeItem('orthoDoctorProduction');\n      localStorage.removeItem('orthoPatientActivity');\n      localStorage.removeItem('orthoCollections');\n      localStorage.removeItem('orthoStaffCompensation');\n      localStorage.removeItem('orthoOccupanyAndHP');\n      localStorage.removeItem('orthoSuppliesAndMarketing');\n      localStorage.removeItem('orthoDoctorSalary');\n      localStorage.removeItem('orthoLaboratory');\n      localStorage.removeItem('orthoAdministrativeServices');\n      localStorage.removeItem('orthoSolvencySavingsROIFunds');\n    };\n  }\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n\n  onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  renderManuallyEnterData = () => {\n    const { practiceType, studentId, dateMonth } = this.state;\n    const { currentUser } = this.props;\n    let href = null;\n\n    const isStudent = [\n      UserAccountType.STUDENT_STAFF,\n      UserAccountType.STUDENT_DOCTOR,\n    ].includes(currentUser?.account_type);\n    console.log(isStudent);\n\n    if (practiceType === 'dentistry' && dateMonth && (studentId || isStudent)) {\n      href = `/${studentId || currentUser.id}${AppConfig.ROUTES.DENTISTRY}/${\n        AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.DOCTOR_PRODUCTION\n      }?year=${dateMonth?.year}&month=${dateMonth?.month}`;\n    }\n\n    if (practiceType === 'ortho' && dateMonth && (studentId || isStudent)) {\n      href = `/${studentId || currentUser.id}${AppConfig.ROUTES.ORTHO}/${\n        AppConfig.ORTHO_SUBMIT_DATA_STEPS.DOCTOR_PRODUCTION\n      }?year=${dateMonth?.year}&month=${dateMonth?.month}`;\n    }\n\n    return (\n      <Button\n        href={href}\n        type=\"primary\"\n        htmlType=\"submit\"\n        onClick={() => {\n          this.formRef.current.submit();\n        }}\n      >\n        Manually Enter Data\n      </Button>\n    );\n  };\n\n  fetchDoctorList = (keyword) =>\n    api\n      .get('/api/v1/doctors', { params: { search: keyword } })\n      .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n      .then(({ result }) =>\n        result.data.map((item) => ({\n          label: item.attributes.fullname,\n          value: item.id,\n        })),\n      )\n      .catch((error) => {\n        throw error;\n      });\n\n  onChangePracticeType = (e) => {\n    this.setState({ practiceType: e.target.value });\n  };\n\n  optionInit = () => {\n    // eslint-disable-next-line react/prop-types\n    const { items } = this.props;\n\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n  onDateSelect = (value) => {\n    if (value) {\n      this.setState({\n        dateMonth: {\n          month: value.month() + 1,\n          year: value.year(),\n        },\n      });\n    } else {\n      this.setState({\n        dateMonth: null,\n      });\n    }\n  };\n\n  render() {\n    const { doctors, currentUser } = this.props;\n    return (\n      <div className=\"submit-data-container\">\n        <PageHeader className=\"site-page-header\" title=\"Submit Data Page\" />\n\n        <Divider />\n\n        <Row align=\"bottom\">\n          <Col span={12}>\n            <Form\n              onFinish={this.onFinish}\n              ref={this.formRef}\n              validateMessages={validateMessages}\n            >\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please pick an item!',\n                  },\n                ]}\n                name=\"radio-group\"\n                label=\"Select Practice Type:\"\n              >\n                <Radio.Group onChange={this.onChangePracticeType}>\n                  <Radio value=\"dentistry\">Dentistry</Radio>\n                </Radio.Group>\n              </Form.Item>\n\n              <Form.Item\n                label=\"Month/Year:\"\n                name=\"month_year\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please pick a Month/Year!',\n                  },\n                ]}\n              >\n                <DatePicker\n                  size=\"middle\"\n                  picker=\"month\"\n                  onChange={this.onDateSelect}\n                />\n              </Form.Item>\n\n              {[UserAccountType.ADMIN, UserAccountType.STUDENT_ADMIN].includes(\n                currentUser?.account_type,\n              ) && (\n                <Form.Item\n                  label=\"Dr/Practice\"\n                  name=\"student\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please pick a Dr/Practice!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{\n                      width: 200,\n                    }}\n                    showSearch\n                    optionFilterProp=\"children\"\n                    onChange={(id) => {\n                      this.setState({\n                        studentId: id,\n                      });\n                      localStorage.setItem('studentsSubmitDataStudentId', id);\n                    }}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                    filterSort={(optionA, optionB) =>\n                      optionA.children\n                        .toLowerCase()\n                        .localeCompare(optionB.children.toLowerCase())\n                    }\n                  >\n                    {this.optionInit().map((doctor, index) => (\n                      <Option value={doctor.value} key={index.toString()}>\n                        {`${doctor?.label}`}\n                      </Option>\n                    ))}\n                  </Select>\n                  {/* <DebounceSelect\n                    showSearch\n                    optionInit={this.optionInit()}\n                    placeholder=\"Select Doctor\"\n                    fetchOptions={this.fetchDoctorList}\n                    onChange={(id) => {\n                      this.setState({\n                        studentId: id,\n                      });\n                      localStorage.setItem('studentsSubmitDataStudentId', id);\n                    }}\n                    style={{ width: '100%' }}\n                  /> */}\n                </Form.Item>\n              )}\n\n              <Form.Item\n                name=\"upload\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={this.normFile}\n                wrapperCol={{\n                  span: 12,\n                  offset: 6,\n                }}\n              >\n                <Upload name=\"file\" listType=\"picture\">\n                  <Button icon={<UploadOutlined />}>Browser</Button>\n                </Upload>\n              </Form.Item>\n              <Form.Item\n                wrapperCol={{\n                  span: 12,\n                  offset: 6,\n                }}\n                style={{ marginBottom: 0 }}\n              >\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n          <Col span={12}>{this.renderManuallyEnterData()}</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nSubmitDataContainer.propTypes = {\n  doctors: PropTypes.array,\n  fetchStudents: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nconst mapStateToProps = ({ student, doctor, auth }) => ({\n  students: student.items,\n  items: doctor.items,\n  loadingFetchStudent: student.loading,\n  currentUser: auth.currentUser,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n  fetchDoctors,\n})(SubmitDataContainer);\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'product',\n  initialState: {\n    page: 1,\n    items: [],\n    totalCount: 0,\n    loading: false,\n  },\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n    productsFetched(state, { payload: { items, totalCount, page } }) {\n      state.page = page;\n      state.items = items;\n      state.totalCount = totalCount;\n    }\n  },\n});\n\nexport const {\n  setLoading,\n  productsFetched,\n} = slice.actions;\n\nexport default slice.reducer;\n","import api from '@/api';\nimport {\n  setLoading,\n  productsFetched,\n} from '@/store/product';\n\nconst camelcaseKeys = require('camelcase-keys');\n\nexport const fetchProducts = ({ page }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/items', { params: { page } })\n    .then(\n      ({ data: response }) => {\n        const {\n          result: { data: items },\n          pagy: {\n            currentPage,\n            totalItems,\n            // totalPages,\n          }\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          productsFetched({\n            items,\n            page: currentPage,\n            totalCount: totalItems,\n          }),\n        );\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n\nexport const fetchProductsBaseIds = ({ page }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .get('/api/v1/items/filter_by_ids', { params: { page } })\n    .then(\n      ({ data: response }) => {\n        const {\n          result: { data: items },\n        } = camelcaseKeys(response, { deep: true });\n\n        dispatch(\n          productsFetched({\n            items,\n          }),\n        );\n      },\n    )\n    .catch((error) => {\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'purchase',\n  initialState: {},\n  reducers: {\n    setLoading(state, { payload }) {\n      state.loading = payload;\n    },\n  },\n});\n\nexport const {\n  setLoading,\n} = slice.actions;\n\nexport default slice.reducer;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-array-index-key */\nimport React, {\n  useRef,\n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n} from 'antd';\n\nconst EditableContext = React.createContext(null);\n\nexport const EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nexport const EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n          {\n            validator: (_, value) =>\n              !isNaN(value) ?\n                Promise.resolve() :\n                Promise.reject(new Error(`${title} is not a valid number`))\n          },\n        ]}\n      >\n        <Input\n          ref={inputRef}\n          onPressEnter={save}\n          onBlur={save}\n        />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        onClick={toggleEdit}\n        aria-hidden=\"true\"\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nEditableRow.propTypes = {\n  index: PropTypes.number,\n};\n\nEditableCell.propTypes = {\n  title: PropTypes.string,\n  editable: PropTypes.bool,\n  children: PropTypes.node,\n  dataIndex: PropTypes.string,\n  record: PropTypes.object,\n  handleSave: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  forEach,\n} from 'lodash';\nimport {\n  Row,\n  Col,\n  Form,\n  Table,\n  Space,\n  Button,\n  Divider,\n  PageHeader,\n  Typography,\n} from 'antd';\nimport camelcaseKeys from 'camelcase-keys';\n\nimport api from '@/api';\nimport DebounceSelect from '@/components/DebounceSelect';\nimport {\n  fetchProducts,\n} from '@/actions/productActions';\nimport {\n  submitPurchaseItems,\n} from '@/actions/purchaseActions';\nimport { formatPrice } from '@/utils/helpers';\nimport {\n  EditableRow,\n  EditableCell,\n} from './items';\n\nimport './index.scss';\n\nconst { Text } = Typography;\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass PurchaseItemsContainer extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.columns = [\n      {\n        title: 'Item Name',\n        dataIndex: 'name',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'description',\n      },\n      {\n        title: 'MSRP',\n        dataIndex: 'price',\n        render: price => price ? <span>${price}</span> : '',\n      },\n      {\n        title: 'Quantity',\n        dataIndex: 'quantity',\n        editable: true,\n        width: '15%',\n      },\n      {\n        title: 'Total',\n        dataIndex: 'total',\n        width: '15%',\n        render: price => price ? <span>${price}</span> : '',\n      },\n    ];\n\n    this.state = {\n      taxPercent: 0.1,\n      dataSource: [],\n    };\n  }\n\n  componentDidMount() {\n    const { fetchProducts, page } = this.props;\n\n    fetchProducts({ page });\n  }\n\n  fetchProductList = (keyword) => api\n    .get('/api/v1/items', { params: { search: keyword } })\n    .then(({ data: response }) => camelcaseKeys(response, { deep: true }))\n    .then(({ result }) => result.data.map((item) => ({\n      label: item.attributes.name,\n      value: item.id,\n    })))\n    .catch((error) => {\n      throw error;\n    })\n\n  optionInit = () => {\n    const {\n      items\n    } = this.props;\n\n    const data = [];\n\n    forEach(items, item => {\n      const {\n        name,\n      } = item.attributes;\n\n      data.push({\n        label: name,\n        value: item.id,\n      });\n    });\n\n    return data;\n  }\n\n  onChange = (value) => {\n    api\n      .get('/api/v1/items/filter_by_ids', { params: { ids: value } })\n      .then(\n        ({ data: response }) => {\n          const {\n            result: { data: items },\n          } = camelcaseKeys(response, { deep: true });\n          const data = [];\n\n          forEach(items, item => {\n            const {\n              name,\n              price,\n              description,\n            } = item.attributes;\n\n            const { id } = item;\n\n            data.push({\n              id,\n              name,\n              price,\n              key: id,\n              description,\n              quantity: 1,\n              total: price * 1,\n            });\n          });\n\n          this.setState({\n            dataSource: data\n          });\n        },\n      )\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  handleSave = (row) => {\n    const { dataSource } = this.state;\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    const quantity = row.quantity * 1;\n    const total = formatPrice(quantity * row.price * 1) * 1;\n\n    newData.splice(index, 1, { ...item, ...row, total, quantity });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  onFinish = data => {\n    const { dataSource } = this.state;\n    const { submitPurchaseItems, history } = this.props;\n\n    if (dataSource.length === 0) {\n      return;\n    }\n\n    const params = {\n      purchase: {\n        items: dataSource.map(item => ({ id: item.id, quantity: item.quantity })),\n      }\n    };\n\n    submitPurchaseItems({ params, history });\n  }\n\n  render() {\n    const { dataSource, taxPercent } = this.state;\n\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n\n    return (\n      <div className=\"purchase-items-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Purchase Items Page\"\n        />\n        <Divider />\n        <Form\n          ref={this.formRef}\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          validateMessages={validateMessages}\n        >\n          <Row gutter={[24, 24]}>\n            <Col span={12}>\n              <Form.Item\n                label=\"Select Items\"\n                rules={[{ required: true }]}\n                name=\"itemIds\"\n                fieldKey=\"itemIds\"\n              >\n                <DebounceSelect\n                  mode=\"multiple\"\n                  optionInit={this.optionInit()}\n                  placeholder=\"Select Items\"\n                  fetchOptions={this.fetchProductList}\n                  style={{ width: '100%' }}\n                  onChange={this.onChange}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Table\n            bordered\n            columns={columns}\n            pagination={false}\n            dataSource={dataSource}\n            components={components}\n            rowClassName={() => 'editable-row'}\n            summary={pageData => {\n              let subTotal = 0;\n              let total = 0;\n              let tax = 0;\n\n              pageData.forEach(({ total: totalItemPrice }) => {\n                subTotal += totalItemPrice;\n              });\n              tax = subTotal * taxPercent;\n              total = subTotal * 1 + tax;\n\n              return (\n                <>\n                  <Table.Summary.Row>\n                    <Table.Summary.Cell colSpan={5} />\n                  </Table.Summary.Row>\n                  <Table.Summary.Row>\n                    <Table.Summary.Cell>\n                      <Text strong>Subtotal</Text>\n                    </Table.Summary.Cell>\n                    <Table.Summary.Cell colSpan={3} />\n                    <Table.Summary.Cell>\n                      <Text strong>${formatPrice(subTotal)}</Text>\n                    </Table.Summary.Cell>\n                  </Table.Summary.Row>\n                  <Table.Summary.Row>\n                    <Table.Summary.Cell colSpan={5} />\n                  </Table.Summary.Row>\n                  <Table.Summary.Row>\n                    <Table.Summary.Cell>\n                      <Text strong>Taxes</Text>\n                    </Table.Summary.Cell>\n                    <Table.Summary.Cell colSpan={3} />\n                    <Table.Summary.Cell>\n                      <Text strong>${formatPrice(tax)}</Text>\n                    </Table.Summary.Cell>\n                  </Table.Summary.Row>\n                  <Table.Summary.Row>\n                    <Table.Summary.Cell>\n                      <Text strong>Total</Text>\n                    </Table.Summary.Cell>\n                    <Table.Summary.Cell colSpan={3} />\n                    <Table.Summary.Cell>\n                      <Text strong>${formatPrice(total)}</Text>\n                    </Table.Summary.Cell>\n                  </Table.Summary.Row>\n                </>\n              );\n            }}\n          />\n          <Row style={{ marginTop: 32 }}>\n            <Col>\n              <Space>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nPurchaseItemsContainer.propTypes = {\n  items: PropTypes.array,\n  page: PropTypes.number,\n  fetchProducts: PropTypes.func,\n  submitPurchaseItems: PropTypes.func,\n  history: PropTypes.object,\n};\n\nconst mapStateToProps = ({ product, error }) => ({\n  items: product.items,\n  totalCount: product.totalCount,\n  page: product.page,\n});\n\nexport default connect(\n  mapStateToProps, {\n  fetchProducts,\n  submitPurchaseItems,\n})(PurchaseItemsContainer);\n","import api from '@/api';\nimport snakecaseKeys from 'snakecase-keys';\nimport {\n  setLoading,\n} from '@/store/purchase';\nimport {\n  throwErrors,\n  clearErrors\n} from '@/actions/errorActions';\nimport {\n  setFlashError,\n  setFlashSuccess,\n} from '@/actions/flashMessageActions';\n\nexport const submitPurchaseItems = ({ params, history }) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  return api\n    .post('/api/v1/purchases', snakecaseKeys(params))\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        dispatch(clearErrors('purchaseItem'));\n        dispatch(setFlashSuccess({ message }));\n\n        history.go(0);\n      } else {\n        dispatch(setFlashError({ message }));\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(throwErrors('purchaseItem', { 'Submitted data': ['is invalid'] }));\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport BaseEnergyContainer from '../BaseEnergy';\n\nclass AttitudeAndSkillsContainer extends Component {\n  render() {\n    return (\n      <BaseEnergyContainer\n        title=\"Attitude And Skills\"\n        questionType=\"attitude_and_skills\"\n      />\n    );\n  }\n}\n\nAttitudeAndSkillsContainer.propTypes = {};\n\nexport default AttitudeAndSkillsContainer;\n","/* eslint-disable react/no-array-index-key */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Select,\n  Divider,\n  PageHeader,\n  InputNumber,\n  Radio,\n} from 'antd';\n\nimport PhoneInput from 'react-phone-input-2';\n\nimport { createStudent } from '@/actions/studentActions';\nimport { STUDENT_DEGREES, UserAccountType } from '@/constants';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nconst { Option } = Select;\n\nclass CreateStudentContainer extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        student: {\n          firstName: null,\n          lastName: null,\n          degree: null,\n          address: null,\n          city: null,\n          zip: null,\n          businessPhone: null,\n          phoneNumber: null,\n          spendingReportMonths: null,\n          state: null,\n          specialty: null,\n          newPractice: null,\n        },\n      },\n    };\n  }\n\n  onFinish = (values) => {\n    const { createStudent, history } = this.props;\n\n    createStudent({\n      params: {\n        student: {\n          ...values.student,\n          account_type: UserAccountType.STUDENT_ADMIN,\n        },\n      },\n      history,\n    });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { loading } = this.props;\n\n    return (\n      <div className=\"registration-container\">\n        <PageHeader className=\"site-page-header\" title=\"Registation Page\" />\n        <Divider />\n\n        <Form\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n            }}\n          >\n            <Row gutter={24}>\n              <Col span={24}>\n                <Form.Item\n                  label=\"Practice Name\"\n                  name={['student', 'practiceName']}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8}>\n                <Form.Item\n                  label=\"First Name\"\n                  name={['student', 'firstName']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n\n              <Col span={8}>\n                <Form.Item\n                  label=\"Last Name\"\n                  name={['student', 'lastName']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n\n              <Col span={8}>\n                <Form.Item\n                  label=\"Degree\"\n                  name={['student', 'degree']}\n                  fieldKey=\"degree\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select>\n                    {STUDENT_DEGREES.map((data, index) => (\n                      <Option key={index.toString()} value={data.value}>\n                        {data.label}\n                      </Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Form.Item\n              label=\"Email\"\n              name={['student', 'email']}\n              fieldKey=\"email\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name={['student', 'password']}\n              fieldKey=\"password\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Address\"\n              name={['student', 'address']}\n              fieldKey=\"address\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Row gutter={24}>\n              <Col span={12}>\n                <Form.Item\n                  label=\"City\"\n                  name={['student', 'city']}\n                  fieldKey=\"city\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Zip\"\n                  name={['student', 'zip']}\n                  fieldKey=\"zip\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Business Phone\"\n                  name={['student', 'businessPhone']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Home Number\"\n                  name={['student', 'phoneNumber']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Spending Report Months\"\n                  name={['student', 'spendingReportMonths']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <InputNumber style={{ width: '100%' }} />\n                </Form.Item>\n\n                <Form.Item\n                  name={['student', 'newPractice']}\n                  fieldKey=\"newPractice\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Radio.Group>\n                    <Radio value>New Practice</Radio>\n                    <Radio value={false}>Existing Practice</Radio>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label=\"State\"\n                  name={['student', 'state']}\n                  fieldKey=\"state\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Specialty\"\n                  name={['student', 'specialty']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select>\n                    <Option value=\"general\">General</Option>\n                    <Option value=\"prostho\">Prostho</Option>\n                    <Option value=\"ortho\">Ortho</Option>\n                    <Option value=\"pedo\">Pedo</Option>\n                    <Option value=\"perio\">Perio</Option>\n                    <Option value=\"endo\">Endo</Option>\n                    <Option value=\"surg\">Surg</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nCreateStudentContainer.propTypes = {\n  history: PropTypes.object,\n  loading: PropTypes.bool,\n  createStudent: PropTypes.func,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  loading: student.loading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    createStudent,\n  })(CreateStudentContainer),\n);\n","import React, { Component } from 'react';\nimport BaseEnergyContainer from '../BaseEnergy';\n\nclass StructureAndSystemsContainer extends Component {\n  render() {\n    return (\n      <BaseEnergyContainer\n        title=\"Structure And Systems\"\n        questionType=\"structure_and_systems\"\n      />\n    );\n  }\n}\n\nStructureAndSystemsContainer.propTypes = {};\n\nexport default StructureAndSystemsContainer;\n","import React, { Component } from 'react';\nimport BaseEnergyContainer from '../BaseEnergy';\n\nclass CommunicationAndCoordinationContainer extends Component {\n  render() {\n    return (\n      <BaseEnergyContainer\n        title=\"Communication And Coordination\"\n        questionType=\"communication_and_coordination\"\n      />\n    );\n  }\n}\n\nCommunicationAndCoordinationContainer.propTypes = {};\n\nexport default CommunicationAndCoordinationContainer;\n","import api from '@/api';\n\nexport const fetchChartAudit = async (args = {}) => {\n  const { id } = args;\n  const res = await api.get(`/api/v1/patient_chart_audits?user_id=${id}`);\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data.result.data;\n};\nexport const postChartAudit = async (args = {}) => {\n  const { payload } = args;\n  const res = await api.post('/api/v1/patient_chart_audits', {\n    patient_chart_audit: payload,\n  });\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data;\n};\n\nexport const deleteChartAudit = async (args = {}) => {\n  const { id } = args;\n  const res = await api.delete(`/api/v1/patient_chart_audits/${id}`);\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data;\n};\n","/* eslint-disable react/no-array-index-key */\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { fetchStudents } from '@/actions/studentActions';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Descriptions,\n  Table,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n  notification,\n} from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport './index.scss';\nimport { formatCurrency } from '@/utils/helpers';\nimport {\n  fetchChartAudit,\n  deleteChartAudit,\n  postChartAudit,\n} from '@/services/chartAudit.service';\n\nconst INITIAL_VALUE = 'initial';\nconst INIT_FORM_VALUE = {\n  new_patient_initials: null,\n  completed_total_amount: null,\n  total_amount_diagnosed: null,\n  total_treatment_completed: null,\n  case: null,\n  chart: null,\n  completed: null,\n  diagnosed: null,\n  dr_appt_scheduled: null,\n  dr: null,\n  has_dr_appt: false,\n  has_has_appt: false,\n  hyg: null,\n  hygiene_appt: null,\n  patient: null,\n  proposed: null,\n  identify_referral_source: null,\n  scheduled: null,\n  unscheduled: null,\n  remaining_unscheduled_treatment: null,\n  // Test\n  test_insurance: null,\n  test_marketing: null,\n  test_other: null,\n  test_outside_dr: null,\n  test_patient: null,\n  test_unknown: null,\n  test_walk_in: null,\n  test_yellow_pages: null,\n  // Proposed\n  proposed_insurance: null,\n  proposed_marketing: null,\n  proposed_other: null,\n  proposed_outside_dr: null,\n  proposed_patient: null,\n  proposed_unknown: null,\n  proposed_walk_in: null,\n  proposed_yellow_pages: null,\n  // Completed\n  completed_insurance: null,\n  completed_marketing: null,\n  completed_other: null,\n  completed_outside_dr: null,\n  completed_patient: null,\n  completed_unknown: null,\n  completed_walk_in: null,\n  completed_yellow_pages: null,\n};\nconst { Option } = Select;\n\nconst ChartAudit = (props) => {\n  const { fetchStudents, students } = props;\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(true);\n  const [studentInfo, setStudentInfo] = useState({});\n  const [dataSource, setDataSource] = useState([{ key: INITIAL_VALUE }]);\n  const [formData, setFormData] = useState(INIT_FORM_VALUE);\n\n  const identifySource = [\n    { text: 'Source A', value: 'a' },\n    { text: 'Source B', value: 'b' },\n  ];\n\n  useEffect(() => {\n    console.log('formData', formData);\n  }, [formData]);\n\n  const initColumns = [\n    {\n      title: 'New Patient Initials',\n      dataIndex: 'new_patient_initials',\n      // sorter: (a, b) => a.new_patient_initials.length - b.new_patient_initials.length,\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"new_patient_initials\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <Input\n                value={formData.new_patient_initials}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    new_patient_initials: e.target.value,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.new_patient_initials;\n      },\n    },\n    {\n      title: 'Total $ Amount Diagnosed',\n      dataIndex: 'amount_diagnosed',\n      // sorter: (a, b) =>\n      // Number(a.amount_diagnosed.match(/\\d/)) -\n      // Number(b.amount_diagnosed.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"amount_diagnosed\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.amount_diagnosed}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    amount_diagnosed: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.total_amount_diagnosed);\n      },\n    },\n    {\n      title: 'Total $ Treatment Completed',\n      dataIndex: 'amount_treatment',\n      // sorter: (a, b) =>\n      //   Number(a.amount_treatment.match(/\\d/)) -\n      //  //amount_treatment.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"amount_treatment\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.amount_treatment}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    amount_treatment: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.total_treatment_completed);\n      },\n    },\n    {\n      title: 'If Case Completed, Total $ Amount',\n      dataIndex: 'completed_total_amount',\n      // sorter: (a, b) =>\n      //   Number(a.completed_total_amount.match(/\\d/)) -\n      //  //completed_total_amount.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"completed_total_amount\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_total_amount}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_total_amount: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.completed_total_amount);\n      },\n    },\n    {\n      title: 'Has Hygiene Appt?',\n      dataIndex: 'hygiene_appt',\n      // sorter: (a, b) => a.hygiene_appt.length - b.hygiene_appt.length,\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"hygiene_appt\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <Select\n                value={formData.hygiene_appt}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    hygiene_appt: e,\n                  });\n                }}\n              >\n                {[true, false].map((value, index) => (\n                  <Option key={index.toString()} value={value}>\n                    {value ? 'Yes' : 'No'}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.has_hygiene_appt ? 'Yes' : 'No';\n      },\n    },\n    {\n      title: 'Has Doctor Appt?',\n      dataIndex: 'doctor_appt',\n      // sorter: (a, b) => a.doctor_appt.length - b.doctor_appt.length,\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"doctor_appt\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <Select\n                value={formData.doctor_appt}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    doctor_appt: e,\n                  });\n                }}\n              >\n                {[true, false].map((value, index) => (\n                  <Option key={index.toString()} value={value}>\n                    {value ? 'Yes' : 'No'}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.has_doctor_appt ? 'Yes' : 'No';\n      },\n    },\n    {\n      title: 'If Dr.Appt, $ Scheduled',\n      dataIndex: 'scheduled',\n      // sorter: (a, b) =>  Number(a.scheduled.match(/\\d/)) -//scheduled.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"scheduled\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.scheduled}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    scheduled: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.dr_appt_scheduled);\n      },\n    },\n    {\n      title: 'Identify Referral Source',\n      dataIndex: 'identify_referral_source',\n      // sorter: (a, b) => a.identify_referral_source - b.identify_referral_source,\n      filters: identifySource,\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"identify_referral_source\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <Select\n                value={formData.identify_referral_source}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    identify_referral_source: e,\n                  });\n                }}\n              >\n                {identifySource?.map((data) => (\n                  <Option value={data.value}>{data.text}</Option>\n                ))}\n              </Select>\n            </Form.Item>\n          );\n        }\n\n        return `Source ${record.attributes?.identify_referral_source?.toUpperCase()}`;\n      },\n    },\n    {\n      title: 'Remaining Unscheduled $ Treatment',\n      dataIndex: 'unscheduled_remaining',\n      // sorter: (a, b) =>\n      //  Number(a.unscheduled_remaining.match(/\\d/)) -\n      // //unscheduled_remaining.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"unscheduled_remaining\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.unscheduled_remaining}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    unscheduled_remaining: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(\n          record.attributes.remaining_unscheduled_treatment,\n        );\n      },\n    },\n    {\n      title: 'Chart',\n      dataIndex: 'chart',\n      // sorter: (a, b) =>\n      // Number(a.chart.match(/\\d/)) - Number(b.chart.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"chart\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.chart}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    chart: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.chart;\n      },\n    },\n    {\n      title: 'Diagnosed',\n      dataIndex: 'diagnosed',\n      // sorter: (a, b) =>\n      //  Number(a.diagnosed.match(/\\d/)) - Number(b.diagnosed.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"diagnosed\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.diagnosed}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    diagnosed: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.diagnosed);\n      },\n    },\n    {\n      title: 'Proposed',\n      dataIndex: 'proposed',\n      // sorter: (a, b) =>\n      // Number(a.proposed.match(/\\d/)) - Number(b.proposed.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"proposed\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.proposed);\n      },\n    },\n    {\n      title: 'Completed',\n      dataIndex: 'completed',\n      // sorter: (a, b) =>\n      //  Number(a.completed.match(/\\d/)) - Number(b.completed.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"completed\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.completed;\n      },\n    },\n    {\n      title: 'Case',\n      dataIndex: 'case',\n      // sorter: (a, b) => Number(a.case.match(/\\d/)) - Number(b.case.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"case\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.case}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    case: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.case);\n      },\n    },\n    {\n      title: 'Hyg',\n      dataIndex: 'hyg',\n      // sorter: (a, b) => Number(a.hyg.match(/\\d/)) - Number(b.hyg.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"hyg\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.hyg}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    hyg: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.hyg;\n      },\n    },\n    {\n      title: 'Dr',\n      dataIndex: 'dr',\n      minWidth: 120, // sorter: (a, b) => Number(a.dr.match(/\\d/)) - Number(b.dr.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"dr\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.dr}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    dr: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.dr;\n      },\n    },\n    {\n      title: 'Has Appt',\n      dataIndex: 'has_appt',\n      // sorter: (a, b) =>\n      //  Number(a.has_appt.match(/\\d/)) - Number(b.has_appt.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"has_appt\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.has_appt}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    has_appt: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.has_appt;\n      },\n    },\n    {\n      title: 'Dr Appt',\n      dataIndex: 'dr_appt',\n      // sorter: (a, b) =>\n      // Number(a.dr_appt.match(/\\d/)) - Number(b.dr_appt.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"dr_appt\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.dr_appt}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    dr_appt: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return record.attributes.dr_appt;\n      },\n    },\n    {\n      title: 'Unscheduled',\n      dataIndex: 'unscheduled',\n      // sorter: (a, b) =>\n      //  Number(a.unscheduled.match(/\\d/)) - Number(b.unscheduled.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item\n              className=\"input-item\"\n              name=\"unscheduled\"\n              rules={[{ required: true, message: 'Required' }]}\n            >\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.unscheduled}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    unscheduled: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n\n        return formatCurrency(record.attributes.unscheduled);\n      },\n    },\n    {\n      title: 'Test Patient',\n      dataIndex: 'test_patient',\n      // sorter: (a, b) =>\n      //  Number(a.test_patient.match(/\\d/)) - Number(b.test_patient.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_patient\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_patient}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_patient: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testPatient =\n          record.attributes.patient_chart_audit_extras[0].patient;\n        return testPatient;\n      },\n    },\n    {\n      title: 'Test Outside Dr.',\n      dataIndex: 'test_outside_dr',\n      // sorter: (a, b) =>\n      //  Number(a.test_outside_dr.match(/\\d/)) -\n      //  Number(b.test_outside_dr.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_outside_dr\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_outside_dr}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_outside_dr: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testOutsideDr =\n          record.attributes.patient_chart_audit_extras[0].outside_dr;\n\n        return testOutsideDr;\n      },\n    },\n    {\n      title: 'Test Marketing',\n      dataIndex: 'test_marketing',\n      // sorter: (a, b) =>\n      //  Number(a.test_marketing.match(/\\d/)) -\n      //  Number(b.test_marketing.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_marketing\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_marketing}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_marketing: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testMarketing =\n          record.attributes.patient_chart_audit_extras[0].marketing;\n        return testMarketing;\n      },\n    },\n    {\n      title: 'Test Yellow Pages',\n      dataIndex: 'test_yellow_pages',\n      // sorter: (a, b) =>\n      //  Number(a.test_yellow_pages.match(/\\d/)) -\n      //  Number(b.test_yellow_pages.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_yellow_pages\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_yellow_pages}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_yellow_pages: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testYellowPages =\n          record.attributes.patient_chart_audit_extras[0].yellow_pages;\n\n        return testYellowPages;\n      },\n    },\n    {\n      title: 'Test Insurance',\n      dataIndex: 'test_insurance',\n      // sorter: (a, b) =>\n      //  Number(a.test_insurance.match(/\\d/)) -\n      //  Number(b.test_insurance.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_insurance\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_insurance}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_insurance: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testInsurance =\n          record.attributes.patient_chart_audit_extras[0].yellow_pages;\n        return testInsurance;\n      },\n    },\n    {\n      title: 'Test Walk-in',\n      dataIndex: 'test_walk_in',\n      // sorter: (a, b) =>\n      // Number(a.test_walk_in.match(/\\d/)) - Number(b.test_walk_in.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_walk_in\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_walk_in}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_walk_in: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testWalkIn =\n          record.attributes.patient_chart_audit_extras[0].walk_in;\n        return testWalkIn;\n      },\n    },\n    {\n      title: 'Test Unknown',\n      dataIndex: 'test_unknown',\n      // sorter: (a, b) =>\n      // Number(a.test_unknown.match(/\\d/)) - Number(b.test_unknown.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_unknown\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_unknown}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_unknown: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testUnknown =\n          record.attributes.patient_chart_audit_extras[0].unknown;\n        return testUnknown;\n      },\n    },\n    {\n      title: 'Test Other',\n      dataIndex: 'test_other',\n      // sorter: (a, b) =>\n      // Number(a.test_other.match(/\\d/)) - Number(b.test_other.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"test_other\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.test_other}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    test_other: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const testOther = record.attributes.patient_chart_audit_extras[0].other;\n        return testOther;\n      },\n    },\n    {\n      title: 'Proposed Patient',\n      dataIndex: 'proposed_patient',\n      // sorter: (a, b) =>\n      // Number(a.proposed_patient.match(/\\d/)) -\n      // Number(b.proposed_patient.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_patient\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_patient}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_patient: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedPatient =\n          record.attributes.patient_chart_audit_extras[1].patient;\n        return proposedPatient;\n      },\n    },\n    {\n      title: 'Proposed Outside Dr.',\n      dataIndex: 'proposed_outside_dr',\n      // sorter: (a, b) =>\n      // Number(a.proposed_outside_dr.match(/\\d/)) -\n      // Number(b.proposed_outside_dr.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_outside_dr\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_outside_dr}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_outside_dr: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedOutsideDr =\n          record.attributes.patient_chart_audit_extras[1].outside_dr;\n\n        return proposedOutsideDr;\n      },\n    },\n    {\n      title: 'Proposed Marketing',\n      dataIndex: 'proposed_marketing',\n      // sorter: (a, b) =>\n      // Number(a.proposed_marketing.match(/\\d/)) -\n      // Number(b.proposed_marketing.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_marketing\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_marketing}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_marketing: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedMarketing =\n          record.attributes.patient_chart_audit_extras[1].marketing;\n        return proposedMarketing;\n      },\n    },\n    {\n      title: 'Proposed Yellow Pages',\n      dataIndex: 'proposed_yellow_pages',\n      // sorter: (a, b) =>\n      // Number(a.proposed_yellow_pages.match(/\\d/)) -\n      // Number(b.proposed_yellow_pages.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_yellow_pages\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_yellow_pages}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_yellow_pages: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedYellowPages =\n          record.attributes.patient_chart_audit_extras[1].yellow_pages;\n\n        return proposedYellowPages;\n      },\n    },\n    {\n      title: 'Proposed Insurance',\n      dataIndex: 'proposed_insurance',\n      // sorter: (a, b) =>\n      // Number(a.proposed_insurance.match(/\\d/)) -\n      // Number(b.proposed_insurance.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_insurance\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_insurance}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_insurance: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedInsurance =\n          record.attributes.patient_chart_audit_extras[1].yellow_pages;\n        return proposedInsurance;\n      },\n    },\n    {\n      title: 'Proposed Walk-in',\n      dataIndex: 'proposed_walk_in',\n      // sorter: (a, b) =>\n      // Number(a.proposed_walk_in.match(/\\d/)) -\n      // Number(b.proposed_walk_in.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_walk_in\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_walk_in}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_walk_in: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedWalkIn =\n          record.attributes.patient_chart_audit_extras[1].walk_in;\n        return proposedWalkIn;\n      },\n    },\n    {\n      title: 'Proposed Unknown',\n      dataIndex: 'proposed_unknown',\n      // sorter: (a, b) =>\n      // Number(a.proposed_unknown.match(/\\d/)) -\n      // Number(b.proposed_unknown.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_unknown\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_unknown}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_unknown: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedUnknown =\n          record.attributes.patient_chart_audit_extras[1].unknown;\n        return proposedUnknown;\n      },\n    },\n    {\n      title: 'Proposed Other',\n      dataIndex: 'proposed_other',\n      // sorter: (a, b) =>\n      // Number(a.proposed_other.match(/\\d/)) -\n      // Number(b.proposed_other.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"proposed_other\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.proposed_other}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    proposed_other: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const proposedOther =\n          record.attributes.patient_chart_audit_extras[1].other;\n        return proposedOther;\n      },\n    },\n    {\n      title: 'Completed Patient',\n      dataIndex: 'completed_patient',\n      // sorter: (a, b) =>\n      // Number(a.completed_patient.match(/\\d/)) -\n      // Number(b.completed_patient.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_patient\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_patient}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_patient: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedPatient =\n          record.attributes.patient_chart_audit_extras[2].patient;\n        return completedPatient;\n      },\n    },\n    {\n      title: 'Completed Outside Dr.',\n      dataIndex: 'completed_outside_dr',\n      // sorter: (a, b) =>\n      // Number(a.completed_outside_dr.match(/\\d/)) -\n      // Number(b.completed_outside_dr.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_outside_dr\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_outside_dr}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_outside_dr: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedOutsideDr =\n          record.attributes.patient_chart_audit_extras[2].outside_dr;\n\n        return completedOutsideDr;\n      },\n    },\n    {\n      title: 'Completed Marketing',\n      dataIndex: 'completed_marketing',\n      // sorter: (a, b) =>\n      // Number(a.completed_marketing.match(/\\d/)) -\n      // Number(b.completed_marketing.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_marketing\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_marketing}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_marketing: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedMarketing =\n          record.attributes.patient_chart_audit_extras[2].marketing;\n        return completedMarketing;\n      },\n    },\n    {\n      title: 'Completed Yellow Pages',\n      dataIndex: 'completed_yellow_pages',\n      // sorter: (a, b) =>\n      // Number(a.completed_yellow_pages.match(/\\d/)) -\n      // Number(b.completed_yellow_pages.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_yellow_pages\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_yellow_pages}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_yellow_pages: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedYellowPages =\n          record.attributes.patient_chart_audit_extras[2].yellow_pages;\n\n        return completedYellowPages;\n      },\n    },\n    {\n      title: 'Completed Insurance',\n      dataIndex: 'completed_insurance',\n      // sorter: (a, b) =>\n      // Number(a.completed_insurance.match(/\\d/)) -\n      // Number(b.completed_insurance.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_insurance\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_insurance}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_insurance: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedInsurance =\n          record.attributes.patient_chart_audit_extras[2].yellow_pages;\n        return completedInsurance;\n      },\n    },\n    {\n      title: 'Completed Walk-in',\n      dataIndex: 'completed_walk_in',\n      // sorter: (a, b) =>\n      // Number(a.completed_walk_in.match(/\\d/)) -\n      // Number(b.completed_walk_in.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_walk_in\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_walk_in}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_walk_in: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedWalkIn =\n          record.attributes.patient_chart_audit_extras[2].walk_in;\n        return completedWalkIn;\n      },\n    },\n    {\n      title: 'Completed Unknown',\n      dataIndex: 'completed_unknown',\n      // sorter: (a, b) =>\n      // Number(a.completed_unknown.match(/\\d/)) -\n      // Number(b.completed_unknown.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_unknown\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_unknown}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_unknown: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedUnknown =\n          record.attributes.patient_chart_audit_extras[2].unknown;\n        return completedUnknown;\n      },\n    },\n    {\n      title: 'Completed Other',\n      dataIndex: 'completed_other',\n      // sorter: (a, b) =>\n      // Number(a.completed_other.match(/\\d/)) -\n      // Number(b.completed_other.match(/\\d/)),\n      render: (value, record) => {\n        if (record.key === INITIAL_VALUE) {\n          return (\n            <Form.Item className=\"input-item\" name=\"completed_other\">\n              <InputNumber\n                formatter={(value) =>\n                  `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={formData.completed_other}\n                onChange={(e) => {\n                  setFormData({\n                    ...formData,\n                    completed_other: e,\n                  });\n                }}\n              />\n            </Form.Item>\n          );\n        }\n        const completedOther =\n          record.attributes.patient_chart_audit_extras[2].other;\n        return completedOther;\n      },\n    },\n\n    {\n      title: '',\n      dataIndex: 'action',\n      width: '50px',\n      render: (_, record) => (\n        <>\n          {record.key === INITIAL_VALUE && (\n            <Form.Item>\n              <Button\n                icon={<PlusOutlined />}\n                shape=\"circle\"\n                htmlType=\"submit\"\n              />\n            </Form.Item>\n          )}\n          {record.key !== INITIAL_VALUE && (\n            <Button\n              icon={<DeleteOutlined />}\n              shape=\"circle\"\n              type=\"danger\"\n              onClick={() => removeItem(record.id)}\n            />\n          )}\n        </>\n      ),\n    },\n  ];\n  const [columns, setColumns] = useState(initColumns);\n\n  useEffect(() => {\n    fetchStudents();\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    fetchChartAuditList();\n  }, [studentInfo]);\n\n  const fetchChartAuditList = async () => {\n    const { id } = studentInfo;\n    if (id) {\n      const res = await fetchChartAudit({ id });\n      if (res.length > 0) {\n        const data = res;\n        if (data) {\n          const temp = [...data, { key: INITIAL_VALUE }];\n          setDataSource(temp);\n          console.log(columns);\n        }\n      }\n    }\n  };\n\n  const deleteChartAuditById = async (id) => {\n    if (id) {\n      const res = await deleteChartAudit({ id });\n      return res;\n    }\n    return { error: 'no id' };\n  };\n\n  const addItem = async () => {\n    const { id } = studentInfo;\n    if (!id) {\n      notification.error({\n        message: 'Please choose student before add data',\n      });\n    }\n    const temp = {\n      user_id: id,\n      new_patient_initials: formData.new_patient_initials,\n      completed_total_amount: formData.completed_total_amount,\n      total_amount_diagnosed: formData.amount_diagnosed,\n      total_treatment_completed: formData.amount_treatment,\n      case: formData.case,\n      chart: formData.chart,\n      completed: formData.completed,\n      diagnosed: formData.diagnosed,\n      dr_appt_scheduled: formData.doctor_appt,\n      dr: formData.dr,\n      has_dr_appt: formData.has_dr_appt,\n      has_has_appt: formData.has_has_appt,\n      hyg: formData.hyg,\n      hygiene_appt: formData.hygiene_appt,\n      patient: formData.patient,\n      proposed: formData.proposed,\n      identify_referral_source: formData.identify_referral_source,\n      scheduled: formData.scheduled,\n      unscheduled: formData.unscheduled,\n      remaining_unscheduled_treatment: formData.unscheduled_remaining,\n      patient_chart_audit_extras_attributes: [\n        {\n          section: 'tests',\n          insurance: formData.test_patient,\n          marketing: formData.test_marketing,\n          other: formData.test_other,\n          outside_dr: formData.test_outside_dr,\n          patient: formData.test_patient,\n          unknown: formData.test_unknown,\n          walk_in: formData.test_walk_in,\n          yellow_pages: formData.test_yellow_pages,\n        },\n        {\n          section: 'proposed',\n          insurance: formData.proposed_insurance,\n          marketing: formData.proposed_marketing,\n          other: formData.proposed_other,\n          outside_dr: formData.proposed_outside_dr,\n          patient: formData.proposed_patient,\n          unknown: formData.proposed_unknown,\n          walk_in: formData.proposed_walk_in,\n          yellow_pages: formData.proposed_yellow_pages,\n        },\n        {\n          section: 'completed',\n          insurance: formData.completed_insurance,\n          marketing: formData.completed_marketing,\n          other: formData.completed_other,\n          outside_dr: formData.completed_outside_dr,\n          patient: formData.completed_patient,\n          unknown: formData.completed_unknown,\n          walk_in: formData.completed_walk_in,\n          yellow_pages: formData.completed_yellow_pages,\n        },\n      ],\n    };\n    const res = await postChartAudit({\n      id,\n      payload: temp,\n    });\n    if (res) {\n      setFormData(INIT_FORM_VALUE);\n      form.resetFields();\n      setColumns(initColumns);\n      fetchChartAuditList();\n    }\n  };\n\n  const removeItem = async (id) => {\n    const res = await deleteChartAuditById(id);\n    if (res.success) {\n      const temp = dataSource.filter((item) => item.id !== id);\n      setDataSource(temp);\n    }\n  };\n\n  // const { loading, dataSource, studentInfo } = this.state;\n  // const { students } = this.props;\n\n  return (\n    <>\n      <div\n        style={{\n          marginBottom: 20,\n          width: 'auto',\n        }}\n      >\n        <Descriptions title=\"Doctor's Personal Information\" column={12}>\n          <Descriptions.Item span={12} label=\"First Name\">\n            {studentInfo?.first_name}\n          </Descriptions.Item>\n          <Descriptions.Item span={12} label=\"Last Name\">\n            {studentInfo?.last_name}\n          </Descriptions.Item>\n          <Descriptions.Item span={12} label=\"Degree\">\n            {studentInfo?.degree?.toUpperCase()}\n          </Descriptions.Item>\n        </Descriptions>\n\n        <span>Student:</span>\n        <Select\n          style={{ width: 200, marginLeft: 10 }}\n          onChange={async (id) => {\n            setLoading(true);\n            const temp = students.find((student) => student.id === id);\n            setStudentInfo(temp);\n            setTimeout(() => {\n              setLoading(false);\n            }, 1000);\n          }}\n        >\n          {students.map((student, index) => (\n            <Option value={student.id} key={index.toString()}>\n              {`${student.first_name} ${student.last_name}`}\n            </Option>\n          ))}\n        </Select>\n      </div>\n\n      <Form\n        form={form}\n        value={formData}\n        className=\"form-wrapper\"\n        name=\"data\"\n        autoComplete=\"off\"\n        onFinish={addItem}\n      >\n        <div style={{ overflowY: 'scroll' }}>\n          <Table\n            dataSource={dataSource}\n            columns={columns}\n            loading={loading}\n            pagination={{ position: ['bottomLeft'] }}\n          />\n        </div>\n      </Form>\n    </>\n  );\n};\n\nChartAudit.propTypes = {\n  students: PropTypes.array,\n  fetchStudents: PropTypes.func,\n};\n\nconst mapStateToProps = ({ student, error }) => ({\n  students: student.items,\n  loading: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n})(ChartAudit);\n","/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Row, Col, Form, Input, Select, InputNumber } from 'antd';\n\nimport PhoneInput from 'react-phone-input-2';\n\nimport { STUDENT_DEGREES } from '@/constants';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nconst { Option } = Select;\n\nclass EnterClientPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        student: {\n          first_name: null,\n          last_name: null,\n          degree: null,\n          address: null,\n          city: null,\n          zip: null,\n          business_phone: null,\n          phone_number: null,\n          spending_report_months: null,\n          state: null,\n          specialty: null,\n        },\n      },\n    };\n  }\n\n  render() {\n    const { initialValues } = this.state;\n    const { formRef } = this.props;\n\n    return (\n      <Form\n        ref={formRef}\n        layout=\"vertical\"\n        initialValues={initialValues}\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          wrapperCol={{\n            span: 12,\n          }}\n        >\n          <Row gutter={24}>\n            <Col span={8}>\n              <Form.Item\n                label=\"First Name\"\n                name={['student', 'first_name']}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n\n            <Col span={8}>\n              <Form.Item\n                label=\"Last Name\"\n                name={['student', 'last_name']}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n\n            <Col span={8}>\n              <Form.Item\n                label=\"Degree\"\n                name={['student', 'degree']}\n                fieldKey=\"degree\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Select>\n                  {STUDENT_DEGREES.map((data, index) => (\n                    <Option key={index.toString()} value={data.value}>\n                      {data.label}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            label=\"Address\"\n            name={['student', 'address']}\n            fieldKey=\"address\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Row gutter={24}>\n            <Col span={12}>\n              <Form.Item\n                label=\"City\"\n                name={['student', 'city']}\n                fieldKey=\"city\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Zip\"\n                name={['student', 'zip']}\n                fieldKey=\"zip\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Business Phone\"\n                name={['student', 'business_phone']}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Home Number\"\n                name={['student', 'phone_number']}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Spending Report Months\"\n                name={['student', 'spending_report_months']}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <InputNumber style={{ width: '100%' }} />\n              </Form.Item>\n            </Col>\n\n            <Col span={12}>\n              <Form.Item\n                label=\"State\"\n                name={['student', 'state']}\n                fieldKey=\"state\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Specialty\"\n                name={['student', 'specialty']}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Select>\n                  <Option value=\"general\">General</Option>\n                  <Option value=\"prostho\">Prostho</Option>\n                  <Option value=\"ortho\">Ortho</Option>\n                  <Option value=\"pedo\">Pedo</Option>\n                  <Option value=\"perio\">Perio</Option>\n                  <Option value=\"endo\">Endo</Option>\n                  <Option value=\"surg\">Surg</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nEnterClientPage.propTypes = {\n  formRef: PropTypes.object,\n};\n\nconst mapStateToProps = () => ({});\n\nexport default withRouter(connect(mapStateToProps, {})(EnterClientPage));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Input, InputNumber } from 'antd';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass TotalInputPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {},\n    };\n  }\n\n  render() {\n    const { initialValues } = this.state;\n    const { formRef } = this.props;\n\n    return (\n      <Form\n        ref={formRef}\n        initialValues={initialValues}\n        validateMessages={validateMessages}\n      >\n        <Form.Item\n          label=\"TOTAL PRODUCTION FOR SPENDING REPORT\"\n          name=\"total_production_for_spending_report\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"PRODUCTION LAST CALENDAR YEAR\"\n          name=\"production_last_calendar_year\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber\n            formatter={(value) =>\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n            }\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"PRODUCTION 2 YEARS AGO\"\n          name=\"production_2_years_ago\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber\n            formatter={(value) =>\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n            }\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"TOTAL COLLECTIONS FOR SPENDING REPORT\"\n          name=\"total_collections_for_spending_report\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber\n            formatter={(value) =>\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n            }\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"COLLECTIONS LAST CALENDAR YEAR\"\n          name=\"collections_last_calendar_year\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber\n            formatter={(value) =>\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n            }\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"COLLECTIONS 2 YEARS AGO\"\n          name=\"collections_2_years ago\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber\n            formatter={(value) =>\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n            }\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label='AVG # NEW PATIENTS LAST 3 \"TYPICAL\" MONTHS'\n          name=\"avg_new_patients_last_3_typical_months \"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"AVG # OF DOCTOR PATIENT VISITS/MONTH\"\n          name=\"avg_of_doctor_patient_visits_month\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"AVG # OF CLINICAL HOURS WORKED/MONTH\"\n          name=\"avg_of_clinical_hours_worked_month\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"TOTAL PRACTICE DEBT PAYMENT/MONTH\"\n          name=\"total_practice_debt_payment_month\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"TOTAL PERSONAL DEBT PAYMENT/MONTH\"\n          name=\"total_personal_debt_payment_month\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nTotalInputPage.propTypes = {\n  formRef: PropTypes.object,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  loading: student.loading,\n});\n\nexport default withRouter(connect(mapStateToProps, {})(TotalInputPage));\n","export const KEY = {\n  staffCompensation: 'staffCompensation',\n  adminServices: 'adminServices',\n  occupancy: 'occupancy',\n  resourceDev: 'resourceDev',\n  marketing: 'marketing',\n  laboratory: 'laboratory',\n  supplies: 'supplies',\n  doctorComp: 'doctorComp',\n  solvency: 'solvency',\n  roi: 'roi',\n};\n\nexport const tabsleft = [\n  {\n    name: 'STAFF COMPENSATION',\n    key: KEY.staffCompensation,\n  },\n  {\n    name: 'OCCUPANCY',\n    key: KEY.occupancy,\n  },\n  {\n    name: 'H&P RESOURCE DEV',\n    key: KEY.resourceDev,\n  },\n  {\n    name: 'LABORATORY',\n    key: KEY.laboratory,\n  },\n  {\n    name: 'Supplies',\n    key: KEY.supplies,\n  },\n  {\n    name: 'SOLVENCY',\n    key: KEY.solvency,\n  },\n];\n\nexport const tabsright = [\n  {\n    name: 'ADMIN SERVICES',\n    key: KEY.adminServices,\n  },\n  {\n    name: 'MARKETING',\n    key: KEY.marketing,\n  },\n  {\n    name: 'DOCTOR COMP',\n    key: KEY.doctorComp,\n  },\n  {\n    name: 'ROI',\n    key: KEY.roi,\n  },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Input, Table } from 'antd';\nimport moment from 'moment';\nimport { isNaN } from 'lodash';\nimport { KEY } from '../config';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nclass SummaryPage extends Component {\n  columns = [\n    {\n      title: '',\n      dataIndex: 'field',\n      key: 'field',\n    },\n    {\n      title: '',\n      dataIndex: 'year',\n      key: 'year',\n    },\n    {\n      title: '',\n      dataIndex: 'percentage',\n      key: 'percentage',\n      render: (value) =>\n        !isNaN(value) && value !== Infinity ? <span>{value} %</span> : '',\n    },\n    {\n      title: '',\n      dataIndex: 'amount',\n      key: 'amount',\n      render: (value) => <span>$ {value}</span>,\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {},\n      dataSource: [],\n    };\n  }\n\n  componentDidMount() {\n    const { total } = this.props;\n    this.updateDataSource(total);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { total } = this.props;\n\n    if (total !== prevProps.total) {\n      this.updateDataSource(total);\n    }\n  }\n\n  updateDataSource = (total) => {\n    const dataSource = [\n      {\n        field: 'STAFF SALARIES',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.staffCompensation]),\n        amount: total[KEY.staffCompensation] || 0,\n      },\n      {\n        field: 'OCCUPANCY',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.occupancy]),\n        amount: total[KEY.occupancy] || 0,\n      },\n      {\n        field: 'H&P RESOURCES',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.resourceDev]),\n        amount: total[KEY.resourceDev] || 0,\n      },\n      {\n        field: 'LABORATORY',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.laboratory]),\n        amount: total[KEY.laboratory] || 0,\n      },\n      {\n        field: 'SUPPLIES',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.supplies]),\n        amount: total[KEY.supplies] || 0,\n      },\n      {\n        field: 'SERVICES',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.adminServices]),\n        amount: total[KEY.adminServices] || 0,\n      },\n      {\n        field: 'MARKETING',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.marketing]),\n        amount: total[KEY.marketing] || 0,\n      },\n      {\n        field: 'TOTAL OVERHEAD',\n        year: moment().year(),\n        percentage: this.calculatePercentage(\n          total[KEY.staffCompensation] ||\n            0 + total[KEY.occupancy] ||\n            0 + total[KEY.resourceDev] ||\n            0 + total[KEY.laboratory] ||\n            0 + total[KEY.supplies] ||\n            0 + total[KEY.adminServices] ||\n            0 + total[KEY.marketing] ||\n            0,\n        ),\n        amount:\n          total[KEY.staffCompensation] ||\n          0 + total[KEY.occupancy] ||\n          0 + total[KEY.resourceDev] ||\n          0 + total[KEY.laboratory] ||\n          0 + total[KEY.supplies] ||\n          0 + total[KEY.adminServices] ||\n          0 + total[KEY.marketing] ||\n          0,\n      },\n      {\n        field: 'DR SALARY',\n        year: moment().year(),\n        percentage: this.calculatePercentage(total[KEY.doctorComp]),\n        amount: total[KEY.doctorComp] || 0,\n      },\n      {\n        field: 'TOTAL EXPENSES',\n        year: moment().year(),\n        percentage: this.calculatePercentage(\n          total[KEY.staffCompensation] ||\n            0 + total[KEY.occupancy] ||\n            0 + total[KEY.resourceDev] ||\n            0 + total[KEY.laboratory] ||\n            0 + total[KEY.supplies] ||\n            0 + total[KEY.adminServices] ||\n            0 + total[KEY.marketing] ||\n            0 + total[KEY.doctorComp] ||\n            0,\n        ),\n        amount:\n          total[KEY.staffCompensation] ||\n          0 + total[KEY.occupancy] ||\n          0 + total[KEY.resourceDev] ||\n          0 + total[KEY.laboratory] ||\n          0 + total[KEY.supplies] ||\n          0 + total[KEY.adminServices] ||\n          0 + total[KEY.marketing] ||\n          0 + total[KEY.doctorComp] ||\n          0,\n      },\n      {\n        field: 'ACTUAL SOLVENCY DEPOSITS',\n        year: '',\n        percentage: NaN,\n        amount: total[KEY.solvency] || 0,\n      },\n      {\n        field: 'ACTUAL ROI EXPENSES',\n        year: '',\n        percentage: NaN,\n        amount: total[KEY.roi] || 0,\n      },\n    ];\n\n    // eslint-disable-next-line\n    this.setState({\n      dataSource,\n    });\n  };\n\n  calculatePercentage(total) {\n    const { report } = this.props;\n\n    if (!total) return NaN;\n\n    return (report.total_collections_for_spending_report / total).toFixed(2);\n  }\n\n  render() {\n    const { initialValues, dataSource } = this.state;\n    const { formRef } = this.props;\n\n    return (\n      <>\n        <Table\n          style={{ marginTop: 40, marginBottom: 50 }}\n          dataSource={dataSource}\n          columns={this.columns}\n          pagination={false}\n          showHeader={false}\n        />\n        <Form\n          ref={formRef}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Form.Item\n            label=\"PROJECTED GROWTH RATE\"\n            name=\"projected_growth_rate\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input suffix=\"%\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"ASSUMED FINAL OVERHEAD IN PERCENTAGE\"\n            name=\"assumed_final_overhead_in_percentage\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input suffix=\"%\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"ESTIMATED FIRST IRR\"\n            name=\"estimated_first_irr\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input suffix=\"%\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"ESTIMATED SECOND IRR\"\n            name=\"estimated_second_irr\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input suffix=\"%\" />\n          </Form.Item>\n        </Form>\n      </>\n    );\n  }\n}\n\nSummaryPage.propTypes = {\n  formRef: PropTypes.object,\n  total: PropTypes.object,\n  report: PropTypes.object,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  loading: student.loading,\n});\n\nexport default withRouter(connect(mapStateToProps, {})(SummaryPage));\n","import { KEY } from './config';\n\nexport default {\n  [KEY.staffCompensation]: [\n    {\n      label: 'Staff Salaries',\n      key: 'staff_salaries',\n      value: 0,\n    },\n    {\n      label: 'Payroll Taxes',\n      key: 'staff_payroll_taxes',\n      value: 0,\n    },\n    {\n      label: 'Payroll Expenses',\n      key: 'staff_payroll_expenses',\n      value: 0,\n    },\n    {\n      label: 'Medical Premiums',\n      key: 'staff_medial_premiums',\n      value: 0,\n    },\n    {\n      label: 'Uniform Allowance',\n      key: 'staff_uniform_allowance',\n      value: 0,\n    },\n    {\n      label: 'FUTA',\n      key: 'staff_futa',\n      value: 0,\n    },\n    {\n      label: 'Staff IRA',\n      key: 'staff_ira',\n      value: 0,\n    },\n  ],\n  [KEY.adminServices]: [\n    {\n      label: 'Prof Fees',\n      key: 'admin_prof_fees',\n      value: 0,\n    },\n    {\n      label: 'Office Supplies',\n      key: 'admin_office_supplies',\n      value: 0,\n    },\n    {\n      label: 'Bank Charges',\n      key: 'admin_bank_charges',\n      value: 0,\n    },\n    {\n      label: 'PT Parking',\n      key: 'admin_pt_parking',\n      value: 0,\n    },\n    {\n      label: 'Dues/Subscriptions',\n      key: 'admin_dues_subscriptions',\n      value: 0,\n    },\n    {\n      label: 'Collection Expense',\n      key: 'admin_collection_expense',\n      value: 0,\n    },\n    {\n      label: 'Hazardous Waste',\n      key: 'admin_hazardous_waste',\n      value: 0,\n    },\n    {\n      label: 'Laundry Services',\n      key: 'admin_laundry_services',\n      value: 0,\n    },\n    {\n      label: 'Licenses',\n      key: 'admin_licenses',\n      value: 0,\n    },\n    {\n      label: 'Insurance (Malprac)',\n      key: 'admin_insurance_malprac',\n      value: 0,\n    },\n    {\n      label: 'Insurance (O/H)',\n      key: 'admin_insurance_oh',\n      value: 0,\n    },\n    {\n      label: 'Office Equipment',\n      key: 'admin_office_equipment',\n      value: 0,\n    },\n    {\n      label: 'Off Equip Repair & M',\n      key: 'admin_off_equip_repair_and_m',\n      value: 0,\n    },\n    {\n      label: 'Postage',\n      key: 'admin_postage',\n      value: 0,\n    },\n    {\n      label: 'Taxes-Corp',\n      key: 'admin_taxes_corp',\n      value: 0,\n    },\n    {\n      label: 'Taxes-Bus',\n      key: 'admin_taxes_bus',\n      value: 0,\n    },\n    {\n      label: 'Taxes-Personal Prop',\n      key: 'admin_taxes_personal_prop',\n      value: 0,\n    },\n    {\n      label: 'Telephone',\n      key: 'admin_telephone',\n      value: 0,\n    },\n    {\n      label: 'Credit card fee',\n      key: 'admin_credit_card_fee',\n      value: 0,\n    },\n    {\n      label: 'NSF checks',\n      key: 'admin_nsf_checks',\n      value: 0,\n    },\n    {\n      label: 'Interest',\n      key: 'admin_interest',\n      value: 0,\n    },\n    {\n      label: 'Misc',\n      key: 'admin_misc',\n      value: 0,\n    },\n  ],\n  [KEY.resourceDev]: [\n    {\n      label: 'Dental Equipment',\n      key: 'hp_dental_equipment',\n      value: 0,\n    },\n    {\n      label: 'Repair & Maintenance',\n      key: 'hp_repair_and_maintenance',\n      value: 0,\n    },\n    {\n      label: 'Office Furniture',\n      key: 'hp_office_furniture',\n      value: 0,\n    },\n    {\n      label: 'Staff CE',\n      key: 'hp_staff_ce',\n      value: 0,\n    },\n    {\n      label: 'Other',\n      key: 'hp_other',\n      value: 0,\n    },\n    {\n      label: 'Equipment Payments',\n      key: 'hp_equipment_payments',\n      value: 0,\n    },\n  ],\n  [KEY.doctorComp]: [\n    {\n      label: 'Salary-Cash Draw',\n      key: 'doctor_salary_cash_draw',\n      value: 0,\n    },\n    {\n      label: 'Auto Expense',\n      key: 'doctor_auto_expense',\n      value: 0,\n    },\n    {\n      label: 'Med Insurance',\n      key: 'doctor_med_insurance',\n      value: 0,\n    },\n    {\n      label: 'Disability Ins',\n      key: 'doctor_disability_ins',\n      value: 0,\n    },\n    {\n      label: 'Travel',\n      key: 'doctor_travel',\n      value: 0,\n    },\n    {\n      label: 'Lodging',\n      key: 'doctor_lodging',\n      value: 0,\n    },\n    {\n      label: 'Payroll Taxes',\n      key: 'doctor_payroll_taxes',\n      value: 0,\n    },\n    {\n      label: 'Life Insurance',\n      key: 'doctor_life_insurance',\n      value: 0,\n    },\n    {\n      label: 'Personal Debt ',\n      key: 'doctor_personal_debt',\n      value: 0,\n    },\n  ],\n  [KEY.laboratory]: [\n    {\n      label: 'Laboratory',\n      key: 'laboratory',\n      value: 0,\n    },\n    {\n      label: 'Other',\n      key: 'laboratory_other',\n      value: 0,\n    },\n  ],\n  [KEY.marketing]: [\n    {\n      label: 'Advertising',\n      key: 'marketing_advertising',\n      value: 0,\n    },\n    {\n      label: 'Entertain & Meals',\n      key: 'marketing_entertain_and_meals',\n      value: 0,\n    },\n    {\n      label: 'Donations',\n      key: 'marketing_donations',\n      value: 0,\n    },\n    {\n      label: 'Promotion',\n      key: 'marketing_promotion',\n      value: 0,\n    },\n  ],\n  [KEY.supplies]: [\n    {\n      label: 'Dental Supplies',\n      key: 'supplies_dental',\n      value: 0,\n    },\n    {\n      label: 'Ortho Supplies',\n      key: 'supplies_ortho',\n      value: 0,\n    },\n    {\n      label: 'Other',\n      key: 'supplies_other',\n      value: 0,\n    },\n  ],\n  [KEY.solvency]: [\n    {\n      label: 'Other',\n      key: 'solvency_other',\n      value: 0,\n    },\n  ],\n  [KEY.roi]: [\n    {\n      label: 'Dr CE',\n      key: 'roi_dr_ce',\n      value: 0,\n    },\n    {\n      label: 'Dr Investment',\n      key: 'roi_dr_investment',\n      value: 0,\n    },\n    {\n      label: 'Loan Pre-payment',\n      key: 'roi_loan_pre_payment',\n      value: 0,\n    },\n    {\n      label: 'Interest Expense',\n      key: 'roi_interest_expense',\n      value: 0,\n    },\n  ],\n  [KEY.occupancy]: [\n    {\n      label: 'Rent',\n      key: 'occupancy_rent',\n      value: 0,\n    },\n    {\n      label: 'Office Décor',\n      key: 'occupancy_decor',\n      value: 0,\n    },\n    {\n      label: 'Lease Improvements',\n      key: 'occupancy_lease_improvements',\n      value: 0,\n    },\n    {\n      label: 'Repairs & Maintenance',\n      key: 'occupancy_repairs_and_maintenance',\n      value: 0,\n    },\n    {\n      label: 'Utilities',\n      key: 'occupancy_utilities',\n      value: 0,\n    },\n    {\n      label: 'Janitorial-Security',\n      key: 'occupancy_janitorial_security',\n      value: 0,\n    },\n    {\n      label: 'Waste disposal',\n      key: 'occupancy_waste_disposal',\n      value: 0,\n    },\n    {\n      label: 'Property Taxes',\n      key: 'occupancy_property_taxes',\n      value: 0,\n    },\n  ],\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react';\nimport { Row, Col, Typography, Collapse, Form, InputNumber } from 'antd';\nimport PropTypes from 'prop-types';\nimport { CaretRightOutlined, PlusCircleFilled } from '@ant-design/icons';\nimport { formatCurrency } from '@/utils/helpers';\nimport configColumn from '../CoachingPPP/configColumn';\n\nconst { Panel } = Collapse;\nconst { Text } = Typography;\n\nclass TabSummary extends Component {\n  render() {\n    const { tabData, totalData, total } = this.props;\n\n    return (\n      <>\n        <Collapse\n          bordered={false}\n          collapsible={false}\n          expandIcon={({ isActive }) => (\n            <CaretRightOutlined rotate={isActive ? 90 : 0} />\n          )}\n          className=\"site-collapse-custom-collapse\"\n        >\n          {tabData.map((tab, index) => (\n            <Panel\n              header={tab.name}\n              key={index.toString()}\n              className=\"site-collapse-custom-panel\"\n            >\n              {configColumn[tab.key]?.map((row, index) => (\n                <Row gutter={24} key={tab.name + index.toString()}>\n                  <Col span={24}>\n                    <Row style={{ marginBottom: 10 }}>\n                      <Col span={12}>\n                        <Text>{row.label}</Text>\n                      </Col>\n                      <Col span={12} className=\"border-bottom\">\n                        <Form.Item\n                          className=\"input-item\"\n                          name={[tab.key, row.key]}\n                          rules={row?.rules}\n                        >\n                          <InputNumber\n                            formatter={(value) =>\n                              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                            }\n                            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                          />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              ))}\n              <Row gutter={24}>\n                <Col span={12}>\n                  <Text\n                    style={{\n                      marginTop: 10,\n                      fontSize: 16,\n                      width: 80,\n                      fontWeight: 'normal',\n                      color: '#349DFF',\n                    }}\n                  >\n                    <PlusCircleFilled\n                      style={{ marginRight: 5, color: '#349DFF' }}\n                    />\n                    Total\n                  </Text>\n                </Col>\n                <Col span={12}>\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      marginTop: 10,\n                      color: '#349DFF',\n                    }}\n                  >\n                    {formatCurrency(total[tab.key] || 0)}\n                  </Text>\n                </Col>\n              </Row>\n            </Panel>\n          ))}\n        </Collapse>\n\n        {totalData.map((data, index) => (\n          <div\n            style={{ display: 'flex', flexDirection: 'row' }}\n            key={`tab_summary_data_${index.toString()}`}\n          >\n            <Text\n              style={{\n                marginRight: 20,\n                marginTop: 10,\n                fontSize: 16,\n                width: 80,\n                fontWeight: 'normal',\n                color: '#349DFF',\n              }}\n            >\n              <PlusCircleFilled style={{ marginRight: 5, color: '#349DFF' }} />\n              {data.label}\n            </Text>\n            <Text\n              style={{\n                fontSize: 16,\n                marginTop: 10,\n                color: '#349DFF',\n              }}\n            >\n              {data.value}\n            </Text>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nTabSummary.propTypes = {\n  total: PropTypes.object,\n  tabData: PropTypes.array,\n  totalData: PropTypes.array,\n};\n\nexport default TabSummary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../index.scss';\nimport { Form } from 'antd';\nimport { formatCurrency } from '@/utils/helpers';\nimport { connect } from 'react-redux';\nimport { tabsleft, tabsright } from '../config';\nimport TabSummary from '../../tab1/tabSummary';\n\nclass DetailDataPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      total: {},\n      totalTabLeft: 0,\n      totalTabRight: 0,\n    };\n  }\n\n  handleTotal = (_, value) => {\n    const { setTotal } = this.props;\n    const total = {};\n    Object.keys(value).forEach((field) => {\n      const fieldObject = value[field];\n      total[field] = Object.keys(fieldObject).reduce(\n        (previous, value) => previous + (Number(fieldObject[value]) || 0),\n        0,\n      );\n    });\n\n    setTotal(total);\n\n    this.setState({\n      total,\n      totalTabLeft: tabsleft.reduce(\n        (previous, tab) => previous + (total[tab.key] || 0),\n        0,\n      ),\n      totalTabRight: tabsright.reduce(\n        (previous, tab) => previous + (total[tab.key] || 0),\n        0,\n      ),\n    });\n  };\n\n  render() {\n    const { total, totalTabLeft, totalTabRight } = this.state;\n    const { formRef } = this.props;\n\n    return (\n      <>\n        <Form\n          ref={formRef}\n          style={{ marginTop: 40 }}\n          className=\"form-wrapper\"\n          name=\"data\"\n          onValuesChange={this.handleTotal}\n          autoComplete=\"off\"\n        >\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div style={{ width: '100%', marginRight: '50px' }}>\n              <TabSummary\n                total={total}\n                tabData={tabsleft}\n                totalData={[\n                  { label: 'Total', value: formatCurrency(totalTabLeft) },\n                ]}\n              />\n            </div>\n            <div style={{ width: '100%' }}>\n              <TabSummary\n                total={total}\n                tabData={tabsright}\n                totalData={[\n                  { label: 'IRA', value: formatCurrency(0) },\n                  { label: 'Total', value: formatCurrency(totalTabRight) },\n                ]}\n              />\n            </div>\n          </div>\n        </Form>\n      </>\n    );\n  }\n}\n\nDetailDataPage.propTypes = {\n  formRef: PropTypes.object,\n  setTotal: PropTypes.func,\n};\n\nconst mapStateToProps = () => ({});\n\nexport default connect(mapStateToProps, {})(DetailDataPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\nimport { Button, notification } from 'antd';\nimport { connect } from 'react-redux';\nimport { createCoachPppReport } from '@/actions/coachPppReportActions';\nimport EnterClientPage from './FormSteps/EnterClientPage';\nimport TotalInputPage from './FormSteps/TotalInputPage';\nimport SummaryPage from './FormSteps/SummaryPage';\nimport { KEY } from './config';\nimport DetailDataPage from './FormSteps/DetailDataPage';\n\nclass FormTab extends Component {\n  clientRef = React.createRef();\n\n  totalRef = React.createRef();\n\n  detailRef = React.createRef();\n\n  summaryRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentStep: 0,\n      data: {},\n      total: {},\n    };\n  }\n\n  setTotal = (total) => {\n    this.setState({\n      total,\n    });\n  };\n\n  goNext = () => {\n    const { currentStep, data } = this.state;\n    const nextTrigger = () => {\n      this.setState({\n        currentStep: currentStep + 1,\n      });\n    };\n\n    if (currentStep === 0) {\n      this.clientRef.current\n        .validateFields()\n        .then(() => {\n          this.setState({\n            data: {\n              student: this.clientRef.current.getFieldValue().student,\n            },\n          });\n          nextTrigger();\n        })\n        .catch((err) => console.log(err));\n    }\n\n    if (currentStep === 1) {\n      this.totalRef.current\n        .validateFields()\n        .then(() => {\n          this.setState({\n            data: {\n              ...data,\n              report: {\n                ...(data?.report || {}),\n                ...this.totalRef.current.getFieldValue(),\n              },\n            },\n          });\n          nextTrigger();\n        })\n        .catch((err) => console.log(err));\n    }\n\n    if (currentStep === 2) {\n      this.detailRef.current\n        .validateFields()\n        .then(() => {\n          const formData = this.detailRef.current.getFieldValue();\n          const detailData = {};\n\n          Object.keys(KEY).forEach((key) => {\n            if (formData[key]) {\n              Object.keys(formData[key]).forEach((nestedKey) => {\n                detailData[nestedKey] = formData[key][nestedKey];\n              });\n            }\n          });\n\n          this.setState({\n            data: {\n              ...data,\n              report: {\n                ...data?.report,\n                ...detailData,\n              },\n            },\n          });\n          nextTrigger();\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  onSubmit = () => {\n    const { createCoachPppReport, setData } = this.props;\n    const { data, total } = this.state;\n\n    const formatData = {\n      ...data,\n      total,\n      report: {\n        ...data.report,\n        ...this.summaryRef.current.getFieldValue(),\n      },\n    };\n    createCoachPppReport(formatData, (success, message) => {\n      if (success) {\n        setData(formatData);\n        notification.success({\n          message,\n        });\n      } else {\n        notification.error({\n          message,\n        });\n      }\n    });\n  };\n\n  goBack = () => {\n    const { currentStep } = this.state;\n    this.setState({\n      currentStep: currentStep - 1,\n    });\n  };\n\n  render() {\n    const { currentStep, data, total } = this.state;\n\n    return (\n      <>\n        <div style={{ marginTop: 50, marginBottom: 30 }}>\n          <div style={{ display: currentStep !== 0 && 'none' }}>\n            <EnterClientPage formRef={this.clientRef} />\n          </div>\n          <div style={{ display: currentStep !== 1 && 'none' }}>\n            <TotalInputPage formRef={this.totalRef} />\n          </div>\n          <div style={{ display: currentStep !== 2 && 'none' }}>\n            <DetailDataPage formRef={this.detailRef} setTotal={this.setTotal} />\n          </div>\n          <div style={{ display: currentStep !== 3 && 'none' }}>\n            <SummaryPage\n              formRef={this.summaryRef}\n              report={data?.report}\n              total={total}\n            />\n          </div>\n        </div>\n\n        {currentStep !== 0 && (\n          <Button\n            type=\"secondary\"\n            onClick={this.goBack}\n            style={{ marginRight: 20 }}\n          >\n            Back\n          </Button>\n        )}\n        {currentStep !== 3 && (\n          <Button\n            type=\"primary\"\n            onClick={this.goNext}\n            htmlType=\"submit\"\n            style={{ marginRight: 20 }}\n          >\n            Next\n          </Button>\n        )}\n        {currentStep === 3 && (\n          <Button\n            type=\"primary\"\n            style={{ marginRight: 20, marginTop: 50 }}\n            onClick={this.onSubmit}\n          >\n            Submit\n          </Button>\n        )}\n      </>\n    );\n  }\n}\n\nFormTab.propTypes = {\n  createCoachPppReport: PropTypes.func,\n  setData: PropTypes.func,\n};\n\nconst mapStateToProps = () => ({});\n\nexport default connect(mapStateToProps, {\n  createCoachPppReport,\n})(FormTab);\n","import api from '@/api';\nimport { setLoading } from '@/store/profitPotential';\nimport { throwErrors } from '@/actions/errorActions';\nimport { omit } from 'lodash';\n\nexport const createCoachPppReport = (data, callback) => async (dispatch) => {\n  dispatch(setLoading(true));\n\n  const formatData = omit(data, 'total');\n\n  return api\n    .post('/api/v1/coach_ppp_reports', { data: formatData })\n    .then(({ data: { success, message } }) => {\n      if (success) {\n        callback && callback(true, message);\n      } else {\n        callback && callback(false, message);\n      }\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n      if (error.response) {\n        dispatch(\n          throwErrors('profitPotential', { 'Submitted data': ['is invalid'] }),\n        );\n      }\n      throw error;\n    })\n    .finally(() => {\n      dispatch(setLoading(false));\n    });\n};\n","import React, { Component } from 'react';\nimport { Descriptions, Table } from 'antd';\nimport PropTypes from 'prop-types';\nimport { fetchStudents } from '@/actions/studentActions';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { formatCurrency } from '@/utils/helpers';\nimport moment from 'moment';\n\nclass Report extends Component {\n  columns = [\n    {\n      title: '',\n      dataIndex: 'field',\n      key: 'field',\n    },\n    {\n      title: 'PRACTICE',\n      dataIndex: 'percentage_col',\n      key: 'percentage_col',\n      render: (value) => (value ? <span>{value}%</span> : '-'),\n    },\n    {\n      title: 'CPD',\n      dataIndex: 'target',\n      key: 'target',\n    },\n    {\n      title: 'PRACTICE',\n      dataIndex: 'practice_amount',\n      key: 'practice_amount',\n      render: (value) => (Number(value) ? <span>${value}</span> : value),\n    },\n    {\n      title: 'CPD',\n      dataIndex: 'cpd_amount',\n      key: 'cpd_amount',\n    },\n    {\n      title: 'VARIANCE',\n      dataIndex: 'variance_amount',\n      key: 'variance_amount',\n    },\n    {\n      title: 'ADJUSTED',\n      dataIndex: 'variance',\n      key: 'variance',\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n    };\n  }\n\n  componentDidMount() {\n    const { fetchStudents, data } = this.props;\n    fetchStudents();\n    this.updateDataSource(data);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (data !== prevProps.data) {\n      this.updateDataSource(data);\n    }\n  }\n\n  get collections() {\n    const { data } = this.props;\n\n    return (\n      (data?.report?.total_collections_for_spending_report /\n        data?.student?.spending_report_months) *\n      12\n    );\n  }\n\n  get modelCollections() {\n    const { data } = this.props;\n\n    return (\n      (data?.total?.staffCompensation ||\n        0 + data?.total?.occupancy ||\n        0 + data?.total?.staffCompensation ||\n        0) / 0.31\n    );\n  }\n\n  get production() {\n    const { data } = this.props;\n\n    return (\n      ((Number(data?.report?.total_production_for_spending_report) || 0) /\n        data?.student?.spending_report_months) *\n      12\n    );\n  }\n\n  get collectionsHr() {\n    const { data } = this.props;\n\n    return (\n      data?.report?.total_collections_for_spending_report /\n      (Number(data?.report?.avg_of_clinical_hours_worked_month) *\n        data?.student?.spending_report_months)\n    );\n  }\n\n  get year1Collections() {\n    const { data } = this.props;\n\n    return (\n      (this.collectionsHr + 100) *\n      Number(data?.report?.avg_of_clinical_hours_worked_month) *\n      12\n    );\n  }\n\n  get modelExpenseReduction() {\n    const { data } = this.props;\n    const total = data?.total;\n\n    return (\n      this.collections *\n      (((data?.report?.total_collections_for_spending_report /\n        total?.laboratory) *\n        100 +\n        (data?.report?.total_collections_for_spending_report /\n          total?.supplies) *\n          100 +\n        (data?.report?.total_collections_for_spending_report /\n          total?.adminServices) *\n          100 +\n        (data?.report?.total_collections_for_spending_report /\n          total?.marketing) *\n          100 -\n        (10 + 4 + 6 + 1)) /\n        100)\n    );\n  }\n\n  get year1ExpenseReduction() {\n    return this.modelExpenseReduction * 0.7;\n  }\n\n  get prodPt() {\n    const { data } = this.props;\n\n    return (\n      Number(data?.report?.total_production_for_spending_report) /\n      (Number(data?.report?.avg_of_doctor_patient_visits_month) *\n        data?.student?.spending_report_months)\n    );\n  }\n\n  updateDataSource = (data) => {\n    const total = data?.total || {};\n\n    const dataSource = [\n      {\n        key: 'title',\n        field: '',\n        percentage_col: '%COL',\n        target: 'TARGET',\n        practice_amount: 'AMOUNT',\n        cpd_amount: 'AMOUNT',\n        variance_amount: 'AMOUNT',\n        variance: 'VARIANCE',\n      },\n      {\n        key: 'staff',\n        field: 'Staff',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.staffCompensation /\n          100\n        ).toFixed(2),\n        target: '20%',\n        practice_amount: formatCurrency(total?.staffCompensation || 0),\n        cpd_amount: formatCurrency((this.collections * 20) / 100),\n        variance_amount: formatCurrency(\n          (total?.staffCompensation || 0) - (this.collections * 20) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 20) / 100 > total?.staffCompensation || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.staffCompensation || 0) - (this.collections * 20) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'occupancy',\n        field: 'Occupancy',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.occupancy /\n          100\n        ).toFixed(2),\n        target: '6%',\n        practice_amount: formatCurrency(total?.occupancy || 0),\n        cpd_amount: formatCurrency((this.collections * 6) / 100),\n        variance_amount: formatCurrency(\n          (total?.occupancy || 0) - (this.collections * 6) / 100,\n        ),\n        variance: (() => {\n          if ((this.occupancy * 6) / 100 > total?.occupancy || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.occupancy || 0) - (this.collections * 6) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'resource',\n        field: 'H&P Resources',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.resourceDev /\n          100\n        ).toFixed(2),\n        target: '5%',\n        practice_amount: formatCurrency(total?.resourceDev || 0),\n        cpd_amount: formatCurrency((this.collections * 5) / 100),\n        variance_amount: formatCurrency(\n          (total?.resourceDev || 0) - (this.collections * 5) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 5) / 100 > total?.resourceDev || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.resourceDev || 0) - (this.collections * 5) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'laboratory',\n        field: 'Laboratory',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.laboratory /\n          100\n        ).toFixed(2),\n        target: '10%',\n        practice_amount: formatCurrency(total?.laboratory || 0),\n        cpd_amount: formatCurrency((this.collections * 10) / 100),\n        variance_amount: formatCurrency(\n          (total?.laboratory || 0) - (this.collections * 10) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 10) / 100 > total?.laboratory || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.laboratory || 0) - (this.collections * 10) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'supplies',\n        field: 'Supplies',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.supplies /\n          100\n        ).toFixed(2),\n        target: '4%',\n        practice_amount: formatCurrency(total?.supplies || 0),\n        cpd_amount: formatCurrency((this.collections * 4) / 100),\n        variance_amount: formatCurrency(\n          (total?.supplies || 0) - (this.collections * 4) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 4) / 100 > total?.supplies || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.supplies || 0) - (this.collections * 4) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'admin',\n        field: 'Admin',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.adminServices /\n          100\n        ).toFixed(2),\n        target: '6%',\n        practice_amount: formatCurrency(total?.adminServices || 0),\n        cpd_amount: formatCurrency((this.collections * 6) / 100),\n        variance_amount: formatCurrency(\n          (total?.adminServices || 0) - (this.collections * 6) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 6) / 100 > total?.adminServices || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.adminServices || 0) - (this.collections * 6) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'marketing',\n        field: 'Marketing',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.marketing /\n          100\n        ).toFixed(2),\n        target: '1%',\n        practice_amount: formatCurrency(total?.marketing || 0),\n        cpd_amount: formatCurrency((this.collections * 1) / 100),\n        variance_amount: formatCurrency(\n          (total?.marketing || 0) - (this.collections * 1) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 1) / 100 > total?.marketing || 0) {\n            return '_';\n          }\n          return formatCurrency(\n            (total?.marketing || 0) - (this.collections * 1) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'empty_1',\n        field: '',\n        percentage_col: '',\n        target: '',\n        practice_amount: '',\n        cpd_amount: '',\n        variance_amount: '',\n        variance: '',\n      },\n      {\n        key: 'overhead',\n        field: 'OVERHEAD',\n        percentage_col: (\n          (data?.report?.total_collections_for_spending_report /\n            total?.staffCompensation +\n            data?.report?.total_collections_for_spending_report /\n              total?.occupancy +\n            data?.report?.total_collections_for_spending_report /\n              total?.resourceDev +\n            data?.report?.total_collections_for_spending_report /\n              total?.laboratory +\n            data?.report?.total_collections_for_spending_report /\n              total?.supplies +\n            data?.report?.total_collections_for_spending_report /\n              total?.adminServices +\n            data?.report?.total_collections_for_spending_report /\n              total?.marketing) /\n          100\n        ).toFixed(2),\n        target: '52%',\n        practice_amount: formatCurrency(\n          total?.staffCompensation ||\n            0 + total?.occupancy ||\n            0 + total?.resourceDev ||\n            0 + total?.laboratory ||\n            0 + total?.supplies ||\n            0 + total?.adminServices ||\n            0 + total?.marketing ||\n            0,\n        ),\n        cpd_amount: formatCurrency(\n          (this.collections * 20) / 100 +\n            (this.collections * 6) / 100 +\n            (this.collections * 5) / 100 +\n            (this.collections * 10) / 100 +\n            (this.collections * 4) / 100 +\n            (this.collections * 6) / 100 +\n            (this.collections * 1) / 100,\n        ),\n        variance_amount: formatCurrency(\n          (total?.staffCompensation ||\n            0 + total?.occupancy ||\n            0 + total?.resourceDev ||\n            0 + total?.laboratory ||\n            0 + total?.supplies ||\n            0 + total?.adminServices ||\n            0 + total?.marketing ||\n            0) -\n            ((this.collections * 20) / 100 +\n              (this.collections * 6) / 100 +\n              (this.collections * 5) / 100 +\n              (this.collections * 10) / 100 +\n              (this.collections * 4) / 100 +\n              (this.collections * 6) / 100 +\n              (this.collections * 1) / 100),\n        ),\n        variance: (() => {\n          let a = 0;\n          if ((this.collections * 20) / 100 > total?.staffCompensation || 0) {\n            a = 0;\n          } else {\n            a = (total?.staffCompensation || 0) - (this.collections * 20) / 100;\n          }\n\n          let b = 0;\n          if ((this.occupancy * 6) / 100 > total?.occupancy || 0) {\n            b = 0;\n          } else {\n            b = (total?.occupancy || 0) - (this.collections * 6) / 100;\n          }\n\n          let c = 0;\n          if ((this.collections * 5) / 100 > total?.resourceDev || 0) {\n            c = 0;\n          } else {\n            c = (total?.resourceDev || 0) - (this.collections * 5) / 100;\n          }\n\n          let d = 0;\n          if ((this.collections * 10) / 100 > total?.laboratory || 0) {\n            d = 0;\n          } else {\n            d = (total?.laboratory || 0) - (this.collections * 10) / 100;\n          }\n\n          let e = 0;\n          if ((this.collections * 4) / 100 > total?.supplies || 0) {\n            e = 0;\n          } else {\n            e = (total?.supplies || 0) - (this.collections * 4) / 100;\n          }\n\n          let f = 0;\n          if ((this.collections * 6) / 100 > total?.adminServices || 0) {\n            f = 0;\n          } else {\n            f = (total?.adminServices || 0) - (this.collections * 6) / 100;\n          }\n\n          let g = 0;\n          if ((this.collections * 1) / 100 > total?.marketing || 0) {\n            g = 0;\n          } else {\n            g = (total?.marketing || 0) - (this.collections * 1) / 100;\n          }\n\n          return formatCurrency(a + b + c + d + e + f + g);\n        })(),\n      },\n      {\n        key: 'empty_2',\n        field: '',\n        percentage_col: '',\n        target: '',\n        practice_amount: '',\n        cpd_amount: '',\n        variance_amount: '',\n        variance: '',\n      },\n      {\n        key: 'dr_salary',\n        field: 'Dr.Salary',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.doctorComp /\n          100\n        ).toFixed(2),\n        target: '24%',\n        practice_amount: formatCurrency(total?.doctorComp || 0),\n        cpd_amount: formatCurrency((this.collections * 24) / 100),\n        variance_amount: formatCurrency(\n          (total?.doctorComp || 0) - (this.collections * 24) / 100,\n        ),\n        variance: (() => {\n          if ((this.collections * 24) / 100 > total?.doctorComp || 0) {\n            return '-';\n          }\n          return formatCurrency(\n            (total?.doctorComp || 0) - (this.collections * 24) / 100,\n          );\n        })(),\n      },\n      {\n        key: 'redline',\n        field: 'REDLINE',\n        percentage_col: (this.redlinePercentageCol() / 100).toFixed(2),\n        target: '76%',\n        practice_amount: formatCurrency(this.redlinePracticeAmount()),\n        cpd_amount: formatCurrency(this.redlineCpdAmount()),\n        variance_amount: formatCurrency(this.redlineVarianceAmount()),\n        variance: this.redlineVariance()\n          ? formatCurrency(this.redlineVariance())\n          : '-',\n      },\n      {\n        key: 'solvency',\n        field: 'Solvency',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.solvency /\n          100\n        ).toFixed(2),\n        target: '24%',\n        practice_amount: formatCurrency(total?.solvency || 0),\n        cpd_amount: formatCurrency((this.collections * 24) / 100),\n        variance_amount: formatCurrency(\n          (total?.solvency || 0) - (this.collections * 24) / 100,\n        ),\n        variance: this.solvencyVariance()\n          ? formatCurrency(this.solvencyVariance())\n          : '-',\n      },\n      {\n        key: 'roi',\n        field: 'ROI',\n        percentage_col: (\n          data?.report?.total_collections_for_spending_report /\n          total?.roi /\n          100\n        ).toFixed(2),\n        target: '24%',\n        practice_amount: formatCurrency(total?.roi || 0),\n        cpd_amount: formatCurrency((this.collections * 10) / 100),\n        variance_amount: formatCurrency(\n          (total?.roi || 0) - (this.collections * 10) / 100,\n        ),\n        variance: this.roiVariance() ? formatCurrency(this.roiVariance()) : '-',\n      },\n      {\n        key: 'add_profit',\n        field: 'Add.Profit',\n        percentage_col: (this.profitPercentageCol() / 100).toFixed(2),\n        target: '4%',\n        practice_amount: formatCurrency(this.profitPracticeAmount()),\n        cpd_amount: formatCurrency(this.profitCpdAmount()),\n        variance_amount: formatCurrency(this.profitVarianceAmount()),\n        variance: this.profitVariance\n          ? formatCurrency(this.profitVariance())\n          : '-',\n      },\n      {\n        key: 'empty_3',\n        field: '',\n        percentage_col: '',\n        target: '',\n        practice_amount: '',\n        cpd_amount: '',\n        variance_amount: '',\n        variance: '',\n      },\n      {\n        key: 'total',\n        field: 'TOTAL',\n        percentage_col: (\n          (this.redlinePercentageCol() +\n            data?.report?.total_collections_for_spending_report /\n              total?.solvency +\n            data?.report?.total_collections_for_spending_report / total?.roi +\n            this.profitPercentageCol()) /\n          100\n        ).toFixed(2),\n        target: '100%',\n        practice_amount: formatCurrency(\n          this.redlinePracticeAmount() + total?.solvency ||\n            0 + total?.solvency ||\n            0 + this.profitPracticeAmount(),\n        ),\n        cpd_amount: formatCurrency(\n          this.redlineCpdAmount() +\n            (this.collections * 24) / 100 +\n            (this.collections * 10) / 100 +\n            this.profitCpdAmount(),\n        ),\n        variance_amount: formatCurrency(\n          this.redlineVarianceAmount() +\n            ((total?.solvency || 0) - (this.collections * 24) / 100) +\n            ((total?.roi || 0) - (this.collections * 10) / 100) +\n            this.profitVarianceAmount(),\n        ),\n        variance: formatCurrency(\n          this.redlineVariance() +\n            this.roiVariance() +\n            this.solvencyVariance() +\n            this.profitVariance(),\n        ),\n      },\n      {\n        key: 'yr_one_roi',\n        field: 'YR.1 ROI',\n        percentage_col: '',\n        target: '',\n        practice_amount: '',\n        cpd_amount: '',\n        variance_amount: '',\n        variance: '$116,910',\n      },\n    ];\n\n    // eslint-disable-next-line\n    this.setState({\n      dataSource,\n    });\n  };\n\n  redlinePercentageCol() {\n    const { data } = this.props;\n    const total = data?.total || {};\n\n    return (\n      data?.report?.total_collections_for_spending_report /\n        total?.staffCompensation +\n      data?.report?.total_collections_for_spending_report / total?.occupancy +\n      data?.report?.total_collections_for_spending_report / total?.resourceDev +\n      data?.report?.total_collections_for_spending_report / total?.laboratory +\n      data?.report?.total_collections_for_spending_report / total?.supplies +\n      data?.report?.total_collections_for_spending_report /\n        total?.adminServices +\n      data?.report?.total_collections_for_spending_report / total?.marketing +\n      data?.report?.total_collections_for_spending_report / total?.doctorComp\n    );\n  }\n\n  redlinePracticeAmount() {\n    const { data } = this.props;\n    const total = data?.total || {};\n\n    return (\n      total?.staffCompensation ||\n      0 + total?.occupancy ||\n      0 + total?.resourceDev ||\n      0 + total?.laboratory ||\n      0 + total?.supplies ||\n      0 + total?.adminServices ||\n      0 + total?.marketing ||\n      0 + total?.doctorComp ||\n      0\n    );\n  }\n\n  redlineCpdAmount() {\n    return (\n      (this.collections * 20) / 100 +\n      (this.collections * 6) / 100 +\n      (this.collections * 5) / 100 +\n      (this.collections * 10) / 100 +\n      (this.collections * 4) / 100 +\n      (this.collections * 6) / 100 +\n      (this.collections * 1) / 100 +\n      (this.collections * 24) / 100\n    );\n  }\n\n  redlineVarianceAmount() {\n    const { data } = this.props;\n    const total = data?.total || {};\n    return (\n      (total?.staffCompensation ||\n        0 + total?.occupancy ||\n        0 + total?.resourceDev ||\n        0 + total?.laboratory ||\n        0 + total?.supplies ||\n        0 + total?.adminServices ||\n        0 + total?.marketing ||\n        0) -\n      ((this.collections * 20) / 100 +\n        (this.collections * 6) / 100 +\n        (this.collections * 5) / 100 +\n        (this.collections * 10) / 100 +\n        (this.collections * 4) / 100 +\n        (this.collections * 6) / 100 +\n        (this.collections * 1) / 100) +\n      ((total?.doctorComp || 0) - (this.collections * 24) / 100)\n    );\n  }\n\n  redlineVariance() {\n    const { data } = this.props;\n    const total = data?.total || {};\n\n    let a = 0;\n    if ((this.collections * 20) / 100 > total?.staffCompensation || 0) {\n      a = 0;\n    } else {\n      a = (total?.staffCompensation || 0) - (this.collections * 20) / 100;\n    }\n\n    let b = 0;\n    if ((this.occupancy * 6) / 100 > total?.occupancy || 0) {\n      b = 0;\n    } else {\n      b = (total?.occupancy || 0) - (this.collections * 6) / 100;\n    }\n\n    let c = 0;\n    if ((this.collections * 5) / 100 > total?.resourceDev || 0) {\n      c = 0;\n    } else {\n      c = (total?.resourceDev || 0) - (this.collections * 5) / 100;\n    }\n\n    let d = 0;\n    if ((this.collections * 10) / 100 > total?.laboratory || 0) {\n      d = 0;\n    } else {\n      d = (total?.laboratory || 0) - (this.collections * 10) / 100;\n    }\n\n    let e = 0;\n    if ((this.collections * 4) / 100 > total?.supplies || 0) {\n      e = 0;\n    } else {\n      e = (total?.supplies || 0) - (this.collections * 4) / 100;\n    }\n\n    let f = 0;\n    if ((this.collections * 6) / 100 > total?.adminServices || 0) {\n      f = 0;\n    } else {\n      f = (total?.adminServices || 0) - (this.collections * 6) / 100;\n    }\n\n    let g = 0;\n    if ((this.collections * 1) / 100 > total?.marketing || 0) {\n      g = 0;\n    } else {\n      g = (total?.marketing || 0) - (this.collections * 1) / 100;\n    }\n\n    let h = 0;\n    if ((this.collections * 24) / 100 > total?.doctorComp || 0) {\n      h = 0;\n    } else {\n      h = (total?.doctorComp || 0) - (this.collections * 24) / 100;\n    }\n\n    return a + b + c + d + e + f + g + h;\n  }\n\n  profitPercentageCol() {\n    const { data } = this.props;\n    const total = data?.total || {};\n\n    return (\n      1 -\n      this.redlinePercentageCol() -\n      data?.report?.total_collections_for_spending_report /\n        (total?.solvency || 0) -\n      data?.report?.total_collections_for_spending_report / (total?.roi || 0)\n    );\n  }\n\n  profitPracticeAmount() {\n    return (4 * (this.profitPercentageCol() || 0)) / 100;\n  }\n\n  profitCpdAmount() {\n    return (4 * this.collections) / 100;\n  }\n\n  profitVarianceAmount() {\n    return (this.profitCpdAmount() || 0) - (this.profitPracticeAmount() || 0);\n  }\n\n  profitVariance() {\n    if (this.profitPracticeAmount() < this.profitCpdAmount()) {\n      return 0;\n    }\n    return this.profitVarianceAmount();\n  }\n\n  roiVariance() {\n    const { data } = this.props;\n    const total = data?.total || {};\n\n    if ((this.collections * 10) / 100 > total?.roi || 0) {\n      return 0;\n    }\n    return (total?.roi || 0) - (this.collections * 10) / 100;\n  }\n\n  solvencyVariance() {\n    const { data } = this.props;\n    const total = data?.total || {};\n\n    if ((this.collections * 24) / 100 > total?.solvency || 0) {\n      return 0;\n    }\n    return (total?.solvency || 0) - (this.collections * 24) / 100;\n  }\n\n  render() {\n    const { data } = this.props;\n    const { dataSource } = this.state;\n    console.log(data);\n\n    return (\n      <>\n        <Descriptions>\n          <Descriptions.Item label=\"Doctor Name\">{`${data?.student?.last_name} ${data?.student?.first_name}`}</Descriptions.Item>\n          <Descriptions.Item label=\"Doctor Degree\">\n            {data?.student?.degree?.toUpperCase()}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Date\">\n            {moment().format('MM/DD/YYYY')}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Collections\">\n            {formatCurrency(this.collections)}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Production\">\n            {formatCurrency(this.production)}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"\" />\n          <Descriptions.Item label=\"Model Collections\">\n            {formatCurrency(this.modelCollections)}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Model ExpenseReduction\">\n            {this.modelExpenseReduction.toFixed(2)}%\n          </Descriptions.Item>\n          <Descriptions.Item label=\"\" />\n          <Descriptions.Item label=\"Collections/Hr\">\n            {formatCurrency(this.collectionsHr)}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Prod/Pt\">\n            {formatCurrency(this.prodPt)}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"\" />\n          <Descriptions.Item label=\"Yr 1 Collections\">\n            {formatCurrency(this.year1Collections)}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Yr 1 Expense Reduction\">\n            {this.year1ExpenseReduction.toFixed(2)}%\n          </Descriptions.Item>\n        </Descriptions>\n        <Table\n          style={{ marginTop: 40 }}\n          dataSource={dataSource}\n          columns={this.columns}\n          pagination={false}\n        />\n\n        <Descriptions style={{ marginTop: 40 }} column={12}>\n          <Descriptions.Item\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n            span={6}\n            label=\"Average Monthly Expenses with MP\"\n          >\n            1,600\n          </Descriptions.Item>\n          <Descriptions.Item\n            span={6}\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n            label=\"Average Monthly Income with MP\"\n          />\n          <Descriptions.Item\n            span={6}\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n            label=\"Average Monthly Expenses Currently\"\n          >\n            0\n          </Descriptions.Item>\n          <Descriptions.Item\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n            span={6}\n            label=\"Average Monthly Income Currently\"\n          />\n          <Descriptions.Item span={3} label=\"\" />\n          <Descriptions.Item\n            span={3}\n            style={{\n              background: '#F68081',\n            }}\n            label=\"Increase\"\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n          >\n            1,600\n          </Descriptions.Item>\n          <Descriptions.Item span={3} label=\"\" />\n          <Descriptions.Item\n            span={3}\n            style={{\n              background: '#FEFE03',\n            }}\n            label=\"Increase\"\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n          />\n\n          <Descriptions.Item span={3} label=\"\" />\n          <Descriptions.Item\n            span={3}\n            style={{\n              background: '#F68081',\n            }}\n            label=\"% of Expenses\"\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n          >\n            100%\n          </Descriptions.Item>\n          <Descriptions.Item span={3} label=\"\" />\n          <Descriptions.Item\n            span={3}\n            style={{\n              background: '#FEFE03',\n            }}\n            label=\"ROI Percentage\"\n            labelStyle={{\n              fontWeight: 'bold',\n            }}\n          />\n        </Descriptions>\n      </>\n    );\n  }\n}\n\nReport.propTypes = {\n  fetchStudents: PropTypes.func,\n  data: PropTypes.object,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  students: student.items,\n  loadingFetchStudent: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n})(Report);\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { Tabs } from 'antd';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport FormTab from './form';\nimport Report from './report';\n\nconst { TabPane } = Tabs;\n\nconst renderTabBar = (props, DefaultTabBar) => (\n  <Sticky bottomOffset={80}>\n    {({ style }) => (\n      <DefaultTabBar\n        {...props}\n        className=\"site-custom-tab-bar\"\n        style={{ ...style }}\n      />\n    )}\n  </Sticky>\n);\n\nclass CoachingPPP extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: null,\n      /* data: {\n        student: {\n          first_name: 'Test',\n          last_name: 'Test',\n          degree: 'dmd',\n          address: '12312',\n          city: '123',\n          zip: '123',\n          business_phone: '1123123',\n          phone_number: '11231233',\n          spending_report_months: 12,\n          state: '123',\n          specialty: 'prostho',\n        },\n        report: {\n          total_production_for_spending_report: '12',\n          production_last_calendar_year: 12,\n          production_2_years_ago: 121212,\n          total_collections_for_spending_report: 55555,\n          collections_last_calendar_year: 123,\n          'collections_2_years ago': 12,\n          'avg_new_patients_last_3_typical_months ': '21',\n          avg_of_doctor_patient_visits_month: '12',\n          avg_of_clinical_hours_worked_month: '23',\n          total_practice_debt_payment_month: '44',\n          total_personal_debt_payment_month: '23',\n          staff_salaries: 5,\n          staff_payroll_taxes: 5,\n          staff_payroll_expenses: 3,\n          staff_medial_premiums: 3,\n          staff_uniform_allowance: 3,\n          staff_futa: 3,\n          staff_ira: 3,\n          admin_prof_fees: 2,\n          admin_office_supplies: 3,\n          admin_bank_charges: 2,\n          admin_pt_parking: 5,\n          admin_dues_subscriptions: 1,\n          admin_collection_expense: 2,\n          admin_hazardous_waste: 3,\n          admin_laundry_services: 4,\n          admin_licenses: 5,\n          admin_insurance_malprac: 6,\n          admin_insurance_oh: 87,\n          admin_office_equipment: 1,\n          admin_off_equip_repair_and_m: 2,\n          admin_postage: 55,\n          admin_taxes_corp: 22,\n          admin_taxes_bus: 33,\n          admin_taxes_personal_prop: 2,\n          admin_telephone: 31,\n          admin_credit_card_fee: 23,\n          admin_nsf_checks: 23,\n          admin_interest: 5,\n          admin_misc: 5,\n          occupancy_rent: 5,\n          occupancy_decor: 5,\n          occupancy_lease_improvements: 3,\n          occupancy_repairs_and_maintenance: 45,\n          occupancy_utilities: 22,\n          occupancy_janitorial_security: 3,\n          occupancy_waste_disposal: 2,\n          occupancy_property_taxes: 1,\n          hp_dental_equipment: 2,\n          hp_repair_and_maintenance: 3,\n          hp_office_furniture: 4,\n          hp_staff_ce: 5,\n          hp_other: 6,\n          hp_equipment_payments: 7,\n          marketing_advertising: 2,\n          marketing_entertain_and_meals: 3,\n          marketing_donations: 4,\n          marketing_promotion: 5,\n          laboratory: 2,\n          laboratory_other: 3,\n          supplies_dental: 4,\n          supplies_ortho: 2,\n          supplies_other: 5,\n          doctor_salary_cash_draw: 5,\n          doctor_auto_expense: 2,\n          doctor_med_insurance: 55,\n          doctor_disability_ins: 2,\n          doctor_travel: 34,\n          doctor_lodging: 4,\n          doctor_payroll_taxes: 55,\n          doctor_life_insurance: 23,\n          doctor_personal_debt: 2,\n          solvency_other: 2,\n          roi_dr_ce: 3,\n          roi_dr_investment: 4,\n          roi_loan_pre_payment: 5,\n          roi_interest_expense: 2,\n          projected_growth_rate: '5',\n          assumed_final_overhead_in_percentage: '3',\n          estimated_first_irr: '4',\n          estimated_second_irr: '5',\n        },\n        total: {\n          staffCompensation: 25,\n          occupancy: 86,\n          resourceDev: 27,\n          laboratory: 5,\n          supplies: 11,\n          solvency: 2,\n          adminServices: 322,\n          marketing: 14,\n          doctorComp: 182,\n          roi: 14,\n        },\n      }, */\n      activeKey: 'form',\n    };\n  }\n\n  setData = (data) => {\n    this.setState({\n      data,\n      activeKey: 'report',\n    });\n  };\n\n  render() {\n    const { data, activeKey } = this.state;\n\n    return (\n      <StickyContainer>\n        <Tabs\n          defaultActiveKey=\"form\"\n          activeKey={activeKey}\n          renderTabBar={renderTabBar}\n          onChange={(activeKey) => {\n            this.setState({\n              activeKey,\n            });\n          }}\n        >\n          <TabPane tab=\"Form\" key=\"form\">\n            <FormTab setData={this.setData} />\n          </TabPane>\n          <TabPane tab=\"Report\" key=\"report\" disabled={!data}>\n            <Report data={data} />\n          </TabPane>\n        </Tabs>\n      </StickyContainer>\n    );\n  }\n}\n\nCoachingPPP.propTypes = {};\n\nexport default CoachingPPP;\n","import api from '@/api';\n\nexport const getReportByUserId = async ({ id } = {}) => {\n  const res = await api.get(\n    `/api/v1/patient_chart_audits/report?user_id=${id}`,\n  );\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data.result;\n};\n","/* eslint-disable react/prop-types */\nimport { Table } from 'antd';\nimport './index.scss';\nimport React, { Component, useEffect, useState } from 'react';\nimport { formatCurrency } from '@/utils/helpers';\n\nconst MarketingAnalysis = ({ data = {} } = {}) => {\n  const columns = [\n    {\n      title: 'Lead Source %',\n      dataIndex: 'lead_source',\n      sorter: (a, b) =>\n        Number(a.lead_source.match(/\\d/)) - Number(b.lead_source.match(/\\d/)),\n      key: '1',\n    },\n    {\n      title: 'Source',\n      dataIndex: 'source',\n      sorter: (a, b) => a.source.length - b.source.length,\n      key: '2',\n    },\n    {\n      title: 'Average $ Presented',\n      dataIndex: 'average_presented',\n      sorter: (a, b) =>\n        Number(a.average_presented.match(/\\d/)) -\n        Number(b.average_presented.match(/\\d/)),\n      key: '3',\n    },\n    {\n      title: 'Ave. $',\n      dataIndex: 'ave',\n      sorter: (a, b) => Number(a.ave.match(/\\d/)) - Number(b.ave.match(/\\d/)),\n      key: '4',\n    },\n    {\n      title: '% completed',\n      dataIndex: 'percentage_completed',\n      sorter: (a, b) =>\n        Number(a.percentage_completed.match(/\\d/)) -\n        Number(b.percentage_completed.match(/\\d/)),\n      key: '5',\n    },\n  ];\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '1',\n      lead_source: '20%',\n      source: 'Patient',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '2',\n      lead_source: '30%',\n      source: 'Dr.',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '3',\n      lead_source: '25%',\n      source: 'Marketing',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '4',\n      lead_source: '55%',\n      source: 'YP Ad',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '5',\n      lead_source: '70%',\n      source: 'Insurance',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '6',\n      lead_source: '100%',\n      source: 'Walk-In',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '7',\n      lead_source: '22%',\n      source: 'Walk-In',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0',\n    },\n    {\n      key: '8',\n      lead_source: '10%',\n      source: 'Unknown',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n    {\n      key: '9',\n      lead_source: '70%',\n      source: 'Other',\n      average_presented: formatCurrency(0),\n      ave: formatCurrency(0),\n      percentage_completed: '0%',\n    },\n  ]);\n\n  useEffect(() => {\n    if (data.lead_source) {\n      setDataSource([\n        {\n          key: '1',\n          lead_source: Math.round(data.lead_source?.patient * 100) / 100,\n          source: 'Patient',\n          average_presented: formatCurrency(data.ave_presented?.patient),\n          ave: formatCurrency(data.ave?.patient),\n          percentage_completed: `${data.percentage_completed?.patient}%`,\n        },\n        {\n          key: '2',\n          lead_source: Math.round(data.lead_source?.outside_dr * 100) / 100,\n          source: 'Dr.',\n          average_presented: formatCurrency(data.ave_presented?.outside_dr),\n          ave: formatCurrency(data.ave?.outside_dr),\n          percentage_completed: `${data.percentage_completed?.outside_dr}%`,\n        },\n        {\n          key: '3',\n          lead_source: Math.round(data.lead_source?.marketing * 100) / 100,\n          source: 'Marketing',\n          average_presented: formatCurrency(data.ave_presented?.marketing),\n          ave: formatCurrency(data.ave?.marketing),\n          percentage_completed: `${data.percentage_completed?.marketing}%`,\n        },\n        {\n          key: '4',\n          lead_source: Math.round(data.lead_source?.yellow_pages * 100) / 100,\n          source: 'YP Ad',\n          average_presented: formatCurrency(data.ave_presented?.yellow_pages),\n          ave: formatCurrency(data.ave?.yellow_pages),\n          percentage_completed: `${data.percentage_completed?.yellow_pages}%`,\n        },\n        {\n          key: '5',\n          lead_source: Math.round(data.lead_source?.insurance * 100) / 100,\n          source: 'Insurance',\n          average_presented: formatCurrency(data.ave_presented?.insurance),\n          ave: formatCurrency(data.ave?.insurance),\n          percentage_completed: `${data.percentage_completed?.insurance}%`,\n        },\n        {\n          key: '6',\n          lead_source: Math.round(data.lead_source?.walk_in * 100) / 100,\n          source: 'Walk-In',\n          average_presented: formatCurrency(data.ave_presented?.walk_in),\n          ave: formatCurrency(data.ave?.walk_in),\n          percentage_completed: `${data.percentage_completed?.walk_in}%`,\n        },\n        {\n          key: '7',\n          lead_source: Math.round(data.lead_source?.unknown * 100) / 100,\n          source: 'Unknown',\n          average_presented: formatCurrency(data.ave_presented?.unknown),\n          ave: formatCurrency(data.ave?.unknown),\n          percentage_completed: `${data.percentage_completed?.unknown}%`,\n        },\n        {\n          key: '8',\n          lead_source: Math.round(data.lead_source?.other * 100) / 100,\n          source: 'Other',\n          average_presented: formatCurrency(data.ave_presented?.other),\n          ave: formatCurrency(data.ave?.other),\n          percentage_completed: `${data.percentage_completed?.other}%`,\n        },\n      ]);\n    }\n  }, [data]);\n\n  return (\n    <Table\n      className=\"marketing-analysis\"\n      columns={columns}\n      size=\"small\"\n      dataSource={dataSource}\n      bordered\n      pagination={false}\n      title={() => 'Marketing Analysis'}\n    />\n  );\n};\n\nexport default MarketingAnalysis;\n","/* eslint-disable react/prop-types */\nimport { Table } from 'antd';\nimport './index.scss';\nimport React, { Component, useEffect, useState } from 'react';\nimport { formatCurrency } from '@/utils/helpers';\n\nconst MoneyAnalysis = ({ data = {} } = {}) => {\n  const columns = [\n    {\n      dataIndex: 'field',\n      render: (text, object) => (\n        <span style={{ fontWeight: object?.fieldBold ? 'bold' : 'normal' }}>\n          {text}\n        </span>\n      ),\n    },\n    {\n      dataIndex: 'value',\n      render: (text, object) => (\n        <span style={{ fontWeight: object?.fieldBold ? 'bold' : 'normal' }}>\n          {text}\n        </span>\n      ),\n    },\n  ];\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '1',\n      field: 'Ave. $ Treatment Diagnosed',\n      value: formatCurrency(0),\n    },\n    {\n      key: '2',\n      field: 'Ave. $ Treatment Proposed',\n      value: formatCurrency(0),\n    },\n    {\n      key: '3',\n      field: 'Ave. $ Treatment Completed',\n      value: formatCurrency(0),\n    },\n    {\n      key: '4',\n      field: 'Ave. $  Case Completed',\n      value: formatCurrency(0),\n    },\n    {\n      key: '5',\n      field: 'Ave. $ Scheduled w/Doctor',\n      value: formatCurrency(0),\n    },\n    {\n      key: '6',\n      field: 'Amount $ Scheduled w/Doctor',\n      value: formatCurrency(0),\n    },\n    {\n      key: '7',\n      field: '% Unscheduled Diagnosed Tx',\n      value: formatCurrency(0),\n    },\n    {\n      key: '8',\n      field: '% Unscheduled Proposed Tx',\n      value: formatCurrency(0),\n    },\n    {\n      key: '9',\n      field: 'Amount $ Unscheduled',\n      value: formatCurrency(0),\n    },\n    {\n      key: '10',\n      field: 'Average Diff Proposed vs. Completed',\n      value: formatCurrency(0),\n      fieldBold: true,\n    },\n    {\n      key: '11',\n      field: 'Average Number of New Patients a Month',\n      value: formatCurrency(0),\n      fieldBold: true,\n    },\n    {\n      key: '12',\n      field: 'Average $ Loss Per New Patients Monthly',\n      value: formatCurrency(0),\n      fieldBold: true,\n    },\n    {\n      key: '13',\n      field: 'Average $ Loss Per New Patients Yearly',\n      value: formatCurrency(0),\n      fieldBold: true,\n    },\n  ]);\n  useEffect(() => {\n    if (data.ave_treatment_completed) {\n      setDataSource([\n        {\n          key: '1',\n          field: 'Ave. $ Treatment Diagnosed',\n          value: formatCurrency(data.ave_treatment_diagnosed),\n        },\n        {\n          key: '2',\n          field: 'Ave. $ Treatment Proposed',\n          value: formatCurrency(data.ave_treatment_proposed),\n        },\n        {\n          key: '3',\n          field: 'Ave. $ Treatment Completed',\n          value: formatCurrency(data.ave_treatment_completed),\n        },\n        {\n          key: '4',\n          field: 'Ave. $  Case Completed',\n          value: formatCurrency(data.ave_case_completed),\n        },\n        {\n          key: '5',\n          field: 'Ave. $ Scheduled w/Doctor',\n          value: formatCurrency(data.amount_scheduled_doctor),\n        },\n        {\n          key: '6',\n          field: 'Amount $ Scheduled w/Doctor',\n          value: formatCurrency(data.amount_scheduled_doctor),\n        },\n        {\n          key: '7',\n          field: '% Unscheduled Diagnosed Tx',\n          value: formatCurrency(data.percentage_unscheduled_diagnosed),\n        },\n        {\n          key: '8',\n          field: '% Unscheduled Proposed Tx',\n          value: formatCurrency(data.percentage_unscheduled_proposed),\n        },\n        {\n          key: '9',\n          field: 'Amount $ Unscheduled',\n          value: formatCurrency(data.amount_unscheduled),\n        },\n        {\n          key: '10.',\n          field: 'Average Diff Proposed vs. Completed',\n          value: formatCurrency(data.average_diff_proposed_vs_completed),\n          fieldBold: true,\n        },\n        {\n          key: '11',\n          field: 'Average Number of New Patients a Month',\n          value: formatCurrency(data.average_number_of_new_patients_a_month),\n          fieldBold: true,\n        },\n        {\n          key: '12',\n          field: 'Average $ Loss Per New Patients Monthly',\n          value: formatCurrency(data.average_loss_per_new_patients_monthly),\n          fieldBold: true,\n        },\n        {\n          key: '13',\n          field: 'Average $ Loss Per New Patients Yearly',\n          value: formatCurrency(data.average_loss_per_new_patients_yearly),\n          fieldBold: true,\n        },\n      ]);\n    }\n  }, [data]);\n\n  return (\n    <Table\n      className=\"money-analysis\"\n      columns={columns}\n      size=\"small\"\n      dataSource={dataSource}\n      bordered\n      pagination={false}\n      title={() => 'Money Analysis'}\n    />\n  );\n};\n\nMoneyAnalysis.propTypes = {};\n\nexport default MoneyAnalysis;\n","/* eslint-disable react/prop-types */\nimport React, { Component, useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport './index.scss';\nimport { formatCurrency } from '@/utils/helpers';\n\nconst ReferralSource = ({ data = {} } = {}) => {\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '1',\n      patient_count: 0,\n      source: 'Patient',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '2',\n      patient_count: 0,\n      source: 'Dr.',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '3',\n      patient_count: 0,\n      source: 'Marketing',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '4',\n      patient_count: 0,\n      source: 'YP Ad',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '5',\n      patient_count: 0,\n      source: 'Insurance',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '6',\n      patient_count: 0,\n      source: 'Walk-In',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '7',\n      patient_count: 0,\n      source: 'Unknown',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '8',\n      patient_count: 0,\n      source: 'Other',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n    {\n      key: '9',\n      patient_count: 0,\n      source: 'Totals:',\n      presented: formatCurrency(0),\n      completed: formatCurrency(0),\n    },\n  ]);\n  useEffect(() => {\n    if (data.patient_count) {\n      setDataSource([\n        {\n          key: '1',\n          patient_count: data.patient_count?.patient,\n          source: 'Patient',\n          presented: formatCurrency(data.presented?.patient),\n          completed: formatCurrency(data.completed?.patient),\n        },\n        {\n          key: '2',\n          patient_count: data.patient_count?.outside_dr,\n          source: 'Dr.',\n          presented: formatCurrency(data.presented?.outside_dr),\n          completed: formatCurrency(data.completed?.outside_dr),\n        },\n        {\n          key: '3',\n          patient_count: data.patient_count?.marketing,\n          source: 'Marketing',\n          presented: formatCurrency(data.presented?.marketing),\n          completed: formatCurrency(data.completed?.marketing),\n        },\n        {\n          key: '4',\n          patient_count: data.patient_count?.yellow_pages,\n          source: 'YP Ad',\n          presented: formatCurrency(data.presented?.yellow_pages),\n          completed: formatCurrency(data.completed?.yellow_pages),\n        },\n        {\n          key: '5',\n          patient_count: data.patient_count?.insurance,\n          source: 'Insurance',\n          presented: formatCurrency(data.presented?.insurance),\n          completed: formatCurrency(data.completed?.insurance),\n        },\n        {\n          key: '6',\n          patient_count: data.patient_count?.walk_in,\n          source: 'Walk-In',\n          presented: formatCurrency(data.presented?.walk_in),\n          completed: formatCurrency(data.completed?.walk_in),\n        },\n        {\n          key: '7',\n          patient_count: data.patient_count?.unknown,\n          source: 'Unknown',\n          presented: formatCurrency(data.presented?.unknown),\n          completed: formatCurrency(data.completed?.unknown),\n        },\n        {\n          key: '8',\n          patient_count: data.patient_count?.other,\n          source: 'Other',\n          presented: formatCurrency(data.presented?.other),\n          completed: formatCurrency(data.completed?.other),\n        },\n        {\n          key: '9',\n          patient_count: data.total?.patient_count,\n          source: 'Totals:',\n          presented: formatCurrency(data?.total?.presented),\n          completed: formatCurrency(data?.total?.completed),\n        },\n      ]);\n    }\n  }, [data]);\n  const columns = [\n    {\n      title: 'Patient Count',\n      dataIndex: 'patient_count',\n      key: 'patientCount',\n      align: 'center',\n      sorter: (a, b) => a.patient_count - b.patient_count,\n      className: 'patient-header-col',\n    },\n    {\n      title: 'Referral Source',\n      align: 'center',\n      className: 'referral-source-col',\n      children: [\n        {\n          title: 'Source',\n          dataIndex: 'source',\n          sorter: (a, b) => a.source.length - b.source.length,\n          key: 'source',\n          width: 200,\n          align: 'center',\n        },\n        {\n          title: '$ Presented',\n          dataIndex: 'presented',\n          key: 'presented',\n          sorter: (a, b) =>\n            Number(a.presented.match(/\\d/)) - Number(b.presented.match(/\\d/)),\n          align: 'center',\n        },\n        {\n          title: '$ Completed',\n          dataIndex: 'completed',\n          key: 'completed',\n          sorter: (a, b) =>\n            Number(a.completed.match(/\\d/)) - Number(b.completed.match(/\\d/)),\n          align: 'center',\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Table\n      className=\"referral-resource\"\n      columns={columns}\n      size=\"small\"\n      dataSource={dataSource}\n      bordered\n      pagination={false}\n    />\n  );\n};\n\nexport default ReferralSource;\n","/* eslint-disable react/prop-types */\nimport { Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport './index.scss';\n\nconst SchedulingAnalysis = ({ data = [] } = {}) => {\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '1',\n      value: null,\n      field: 'Patients w/Treatment Diagnosed',\n    },\n    {\n      key: '2',\n      value: null,\n      field: 'Patients w/Treatment Proposed',\n    },\n    {\n      key: '3',\n      value: null,\n      field: 'Patients Completed Some Treatment',\n    },\n    {\n      key: '4',\n      value: null,\n      field: 'Patients $ Completed Treatment',\n    },\n    {\n      key: '5',\n      value: null,\n      field: 'Patients w/Scheduled Appointment',\n    },\n    {\n      key: '6',\n      value: null,\n      field: \"Patients w/Doctor's Appointment\",\n    },\n    {\n      key: '7',\n      value: null,\n      field: 'Patients w/Hygiene Appointment',\n    },\n    {\n      key: '8',\n      value: null,\n      field: 'Patient with no Appointment scheduled',\n    },\n  ]);\n  useEffect(() => {\n    if (data.patients_completed_some_treatment) {\n      setDataSource([\n        {\n          key: '1',\n          value: Math.round(data.patients_treatment_diagnosed * 100) / 100,\n          field: 'Patients w/Treatment Diagnosed',\n        },\n        {\n          key: '2',\n          value: Math.round(data.patients_treatment_proposed * 100) / 100,\n          field: 'Patients w/Treatment Proposed',\n        },\n        {\n          key: '3',\n          value: Math.round(data.patients_completed_some_treatment * 100) / 100,\n          field: 'Patients Completed Some Treatment',\n        },\n        {\n          key: '4',\n          value: Math.round(data.patients_completed_treatment * 100) / 100,\n          field: 'Patients $ Completed Treatment',\n        },\n        {\n          key: '5',\n          value: Math.round(data.patients_scheduled_appointment * 100) / 100,\n          field: 'Patients w/Scheduled Appointment',\n        },\n        {\n          key: '6',\n          value: Math.round(data.patients_doctor_appointment * 100) / 100,\n          field: \"Patients w/Doctor's Appointment\",\n        },\n        {\n          key: '7',\n          value: Math.round(data.patients_hygiene_appointment * 100) / 100,\n          field: 'Patients w/Hygiene Appointment',\n        },\n        {\n          key: '8',\n          value: Math.round(data.patients_no_appointment * 100) / 100,\n          field: 'Patient with no Appointment scheduled',\n        },\n      ]);\n    }\n  }, [data]);\n  const columns = [\n    {\n      dataIndex: 'value',\n    },\n    {\n      dataIndex: 'field',\n    },\n  ];\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Table\n        className=\"scheduling-analysis\"\n        columns={columns}\n        size=\"small\"\n        dataSource={dataSource}\n        bordered\n        pagination={false}\n        title={() => 'Scheduling Analysis'}\n      />\n      {data.actual && (\n        <div className=\"floatingTable\">\n          <div>Actual #S</div>\n          <div>{data.actual.scheduled_appointment}</div>\n          <div>{data.actual.doctor_appointment}</div>\n          <div>{data.actual.hygiene_appointment}</div>\n          <div>{data.actual.no_appointment}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nSchedulingAnalysis.propTypes = {};\n\nexport default SchedulingAnalysis;\n","/* eslint-disable react/prop-types */\nimport React, { Component, useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport './index.scss';\nimport { formatCurrency } from '@/utils/helpers';\n\nconst PtChart = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const { data = {} } = props;\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '1',\n      ptChart: 'Total $ Amount',\n      diagnosed: 0,\n      proposed: 0,\n      treatmentCompleted: 0,\n      caseCompleted: 0,\n    },\n    {\n      key: '2',\n      ptChart: 'Total # Patients',\n      diagnosed: 0,\n      proposed: 0,\n      treatmentCompleted: 0,\n      caseCompleted: 0,\n    },\n  ]);\n\n  useEffect(() => {\n    if (data.total_amount_case) {\n      setDataSource([\n        {\n          key: '1',\n          ptChart: 'Total $ Amount',\n          diagnosed: data ? formatCurrency(data.total_amount_diagnosed) : null,\n          proposed: data ? formatCurrency(data.total_amount_proposed) : null,\n          treatmentCompleted: data\n            ? formatCurrency(data.total_amount_completed)\n            : null,\n          caseCompleted: data ? formatCurrency(data.total_amount_case) : null,\n        },\n        {\n          key: '2',\n          ptChart: 'Total # Patients',\n          diagnosed: data.total_patient_diagnosed,\n          proposed: data.total_patient_proposed,\n          treatmentCompleted: data.total_patient_completed,\n          caseCompleted: data.total_patient_case,\n        },\n      ]);\n    }\n  }, [data]);\n\n  const columns = [\n    {\n      title: 'Total Pt Charts',\n      dataIndex: 'ptChart',\n      key: 'ptChart',\n      align: 'center',\n      className: 'pt-chart-header-col',\n    },\n    {\n      title: '',\n      align: 'center',\n      className: 'unit-source-group-col',\n      children: [\n        {\n          title: 'Diagnosed',\n          dataIndex: 'diagnosed',\n          key: 'diagnosed',\n          width: 200,\n          className: 'unit-source-col',\n          align: 'center',\n        },\n        {\n          title: 'Proposed',\n          dataIndex: 'proposed',\n          key: 'proposed',\n          className: 'unit-source-col',\n          align: 'center',\n        },\n        {\n          title: 'Treatment Completed',\n          dataIndex: 'treatmentCompleted',\n          key: 'treatmentCompleted',\n          className: 'unit-source-col',\n          align: 'center',\n        },\n        {\n          title: 'Cases Completed',\n          dataIndex: 'caseCompleted',\n          key: 'caseCompleted',\n          className: 'unit-source-col',\n          align: 'center',\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Table\n      className=\"pt-chart\"\n      columns={columns}\n      size=\"small\"\n      dataSource={dataSource}\n      bordered\n      pagination={false}\n    />\n  );\n};\n\nexport default PtChart;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { connect } from 'react-redux';\nimport './index.scss';\nimport { Col, Row, Select } from 'antd';\nimport { getReportByUserId } from '@/services/coachAudit.service';\nimport MarketingAnalysis from './MarketingAnalysis';\nimport MoneyAnalysis from './MoneyAnalysis';\nimport ReferralSource from './ReferralSource';\nimport SchedulingAnalysis from './SchedulingAnalysis';\nimport PtChart from './PtChart';\n\nconst { Option } = Select;\n\nexport const ChartAuditReport = (props) => {\n  const { fetchStudents, loadingFetchStudent, students } = props;\n  const [student, setStudent] = useState(undefined);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  useEffect(() => {\n    fetchReport();\n  }, [student]);\n\n  const fetchReport = async () => {\n    const res = await getReportByUserId({ id: student });\n    if (res) {\n      setData(res);\n    }\n  };\n\n  const render = () => (\n    <>\n      <div style={{ width: 100 }}>Student: </div>\n      <Select\n        loading={loadingFetchStudent}\n        style={{\n          width: 200,\n        }}\n        onChange={(id) => {\n          setStudent(id);\n        }}\n      >\n        {students.map((student, index) => (\n          <Option value={student.id} key={index.toString()}>\n            {`${student.first_name} ${student.last_name}`}\n          </Option>\n        ))}\n      </Select>\n\n      <Row style={{ width: '100%', marginTop: 40 }}>\n        <Col span={11} style={{ marginRight: 50 }}>\n          <div style={{ marginBottom: 30 }}>\n            <PtChart data={data.total_pt} />\n          </div>\n          <div style={{ marginBottom: 30 }}>\n            <SchedulingAnalysis data={data.scheduling} />\n          </div>\n          <div>\n            <ReferralSource data={data.referral_source} />\n          </div>\n        </Col>\n        <Col span={11}>\n          <div style={{ width: '100%' }}>\n            <div style={{ marginBottom: 30 }}>\n              <MoneyAnalysis data={data.money_analysis} />\n            </div>\n            <div style={{ marginBottom: 30 }}>\n              <MarketingAnalysis data={data.marketing_analysis} />\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n  return render();\n};\n\nChartAuditReport.propTypes = {\n  students: PropTypes.array,\n  loadingFetchStudent: PropTypes.bool,\n  fetchStudents: PropTypes.func,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  students: student.items,\n  loadingFetchStudent: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n})(ChartAuditReport);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/no-unused-prop-types */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Form,\n  Radio,\n  Button,\n  Divider,\n  PageHeader,\n  DatePicker,\n  Select,\n} from 'antd';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { forEach } from 'lodash';\nimport AppConfig from '@/constants/AppConfig';\nimport { connect } from 'react-redux';\nimport { UserAccountType } from '@/constants';\n\nconst { Option } = Select;\n\nclass ReviewSubmittedContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      practiceType: null,\n      studentId: null,\n      dateMonth: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchStudents, fetchDoctors } = this.props;\n    fetchStudents({\n      filter: UserAccountType.STUDENT_STAFF,\n    });\n    fetchDoctors();\n  }\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n\n  onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  renderManuallyEnterData = () => {\n    const { practiceType, studentId, dateMonth } = this.state;\n    let href = null;\n\n    if (practiceType === 'dentistry') {\n      href = `/${studentId}${AppConfig.ROUTES.DENTISTRY}/${AppConfig.DENTISTRY_SUBMIT_DATA_STEPS.DOCTOR_PRODUCTION}?year=${dateMonth?.year}&month=${dateMonth?.month}`;\n    }\n\n    if (practiceType === 'ortho') {\n      href = `/${studentId}${AppConfig.ROUTES.ORTHO}/${AppConfig.ORTHO_SUBMIT_DATA_STEPS.DOCTOR_PRODUCTION}?year=${dateMonth?.year}&month=${dateMonth?.month}`;\n    }\n\n    return (\n      <Button\n        href={href}\n        type=\"primary\"\n        disabled={!(studentId && dateMonth && href)}\n      >\n        Show\n      </Button>\n    );\n  };\n\n  onChangePracticeType = (e) => {\n    this.setState({ practiceType: e.target.value });\n  };\n\n  onDateSelect = (value) => {\n    if (value) {\n      this.setState({\n        dateMonth: {\n          month: value.month() + 1,\n          year: value.year(),\n        },\n      });\n    } else {\n      this.setState({\n        dateMonth: null,\n      });\n    }\n  };\n\n  optionInit = () => {\n    // eslint-disable-next-line react/prop-types\n    const { items } = this.props;\n\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n  render() {\n    const { students, loadingFetchStudent } = this.props;\n    return (\n      <div className=\"submit-data-container\">\n        <PageHeader className=\"site-page-header\" title=\"Review Submitted\" />\n\n        <Divider />\n\n        <Row align=\"bottom\">\n          <Col span={12}>\n            <Form onFinish={this.onFinish}>\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please pick an item!',\n                  },\n                ]}\n                name=\"radio-group\"\n                label=\"Select Practice Type:\"\n              >\n                <Radio.Group onChange={this.onChangePracticeType}>\n                  <Radio value=\"dentistry\">Dentistry</Radio>\n                </Radio.Group>\n              </Form.Item>\n              <Row style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ width: 100 }}>Month/Year:</div>\n                <DatePicker\n                  size=\"middle\"\n                  picker=\"month\"\n                  onChange={this.onDateSelect}\n                />\n              </Row>\n              <Row\n                style={{\n                  marginBottom: 30,\n                  marginTop: 20,\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <div style={{ width: 100 }}>Dr/Practice:</div>\n                {/* <Select\n                  loading={loadingFetchStudent}\n                  style={{\n                    width: 200,\n                  }}\n                  onChange={(id) => {\n                    this.setState({\n                      studentId: id,\n                    });\n                  }}\n                >\n                  {students.map((student, index) => (\n                    <Option value={student.id} key={index.toString()}>\n                      {`${student.first_name} ${student.last_name}`}\n                    </Option>\n                  ))}\n                </Select> */}\n\n                <Select\n                  style={{\n                    width: 200,\n                  }}\n                  showSearch\n                  optionFilterProp=\"children\"\n                  onChange={(id) => {\n                    this.setState({\n                      studentId: id,\n                    });\n                  }}\n                  filterOption={(input, option) =>\n                    option.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  filterSort={(optionA, optionB) =>\n                    optionA.children\n                      .toLowerCase()\n                      .localeCompare(optionB.children.toLowerCase())\n                  }\n                >\n                  {this.optionInit().map((doctor, index) => (\n                    <Option value={doctor.value} key={index.toString()}>\n                      {`${doctor?.label}`}\n                    </Option>\n                  ))}\n                </Select>\n              </Row>\n              <Form.Item\n                wrapperCol={{\n                  span: 12,\n                  offset: 6,\n                }}\n                style={{ marginBottom: 0 }}\n              >\n                <Col span={12}>{this.renderManuallyEnterData()}</Col>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nReviewSubmittedContainer.propTypes = {\n  students: PropTypes.array,\n  loadingFetchStudent: PropTypes.bool,\n  fetchStudents: PropTypes.func,\n  fetchDoctors: PropTypes.func,\n};\n\nconst mapStateToProps = ({ doctor, student }) => ({\n  students: student.items,\n  items: doctor.items,\n  loadingFetchStudent: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n  fetchDoctors,\n})(ReviewSubmittedContainer);\n","/* eslint-disable react/no-array-index-key */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Col,\n  Form,\n  Input,\n  Button,\n  Select,\n  Divider,\n  PageHeader,\n  Row,\n} from 'antd';\n\nimport { createStudent } from '@/actions/studentActions';\nimport { STUDENT_ACCOUNT_TYPES } from '@/constants';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nconst { Option } = Select;\n\nclass CreateStudentContainer extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        student: {\n          firstName: null,\n          lastName: null,\n          degree: null,\n          address: null,\n          city: null,\n          zip: null,\n          businessPhone: null,\n          phoneNumber: null,\n          spendingReportMonths: null,\n          state: null,\n          specialty: null,\n          newPractice: null,\n        },\n      },\n    };\n  }\n\n  onFinish = (values) => {\n    const { createStudent, history, currentUser } = this.props;\n\n    createStudent({\n      params: {\n        student: {\n          ...values.student,\n          admin_id: currentUser.id,\n        },\n      },\n      history,\n    });\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const { loading } = this.props;\n\n    return (\n      <div className=\"registration-container\">\n        <PageHeader className=\"site-page-header\" title=\"Registation Page\" />\n        <Divider />\n\n        <Form\n          layout=\"vertical\"\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n            }}\n          >\n            <Row gutter={24}>\n              <Col span={24}>\n                <Form.Item\n                  label=\"Practice Name\"\n                  name={['student', 'practiceName']}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8}>\n                <Form.Item\n                  label=\"First Name\"\n                  name={['student', 'firstName']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n\n              <Col span={8}>\n                <Form.Item\n                  label=\"Last Name\"\n                  name={['student', 'lastName']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Form.Item\n              label=\"Email\"\n              name={['student', 'email']}\n              fieldKey=\"email\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Col span={8}>\n              <Form.Item\n                label=\"Type\"\n                name={['student', 'account_type']}\n                fieldKey=\"account_type\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Select>\n                  {STUDENT_ACCOUNT_TYPES.map((data, index) => (\n                    <Option value={data.value} key={index.toString()}>\n                      {data.label}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n\n            <Form.Item\n              label=\"Password\"\n              name={['student', 'password']}\n              fieldKey=\"password\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nCreateStudentContainer.propTypes = {\n  history: PropTypes.object,\n  loading: PropTypes.bool,\n  createStudent: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nconst mapStateToProps = ({ student, auth }) => ({\n  loading: student.loading,\n  currentUser: auth.currentUser,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    createStudent,\n  })(CreateStudentContainer),\n);\n","import { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { fetchStudents, deleteStudent } from '@/actions/studentActions';\nimport PropTypes from 'prop-types';\nimport { Button, Table, Form, PageHeader, Divider, Pagination } from 'antd';\nimport React, { Component } from 'react';\nimport { capitalizeFirstLetter } from '@/utils/helpers';\nimport './index.scss';\nimport AppConfig from '@/constants/AppConfig';\n\nclass StudentManagement extends Component {\n  formRef = React.createRef();\n\n  columns = [\n    {\n      title: 'ID',\n      width: '100px',\n      dataIndex: 'id',\n      render: (value) => <span style={{ fontWeight: 'bold' }}>{value}</span>,\n    },\n    {\n      title: 'First Name',\n      dataIndex: 'first_name',\n      render: (value) => value,\n    },\n    {\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      render: (value) => value,\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      render: (value) => value,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'account_type',\n      render: (value) => capitalizeFirstLetter(value?.split('_')?.[1]),\n    },\n    {\n      title: '',\n      dataIndex: 'action',\n      width: '100px',\n      render: (_, record) => (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n          }}\n        >\n          <Form.Item style={{ marginRight: 10 }}>\n            <Button\n              icon={<EditOutlined />}\n              onClick={() => {\n                const { history } = this.props;\n                history.push(\n                  `${AppConfig.ROUTES.MANGEMENT}/${AppConfig.MANGEMENT.STUDENT}/${record.id}`,\n                );\n              }}\n              shape=\"circle\"\n              type=\"primary\"\n              htmlType=\"submit\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                const { deleteStudent } = this.props;\n                deleteStudent(record.id);\n              }}\n              shape=\"circle\"\n              type=\"danger\"\n              htmlType=\"submit\"\n            />\n          </Form.Item>\n        </div>\n      ),\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchParams: {\n        size: 5,\n        number: 1,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchStudents } = this.props;\n    const { searchParams } = this.state;\n\n    fetchStudents(searchParams);\n  }\n\n  render() {\n    const { students, loading, meta, fetchStudents } = this.props;\n    const { searchParams } = this.state;\n\n    return (\n      <div className=\"profit-and-loss-container\">\n        <PageHeader className=\"site-page-header\" title=\"Student Management\" />\n        <Divider />\n        <Form\n          ref={this.formRef}\n          className=\"form-wrapper\"\n          name=\"data\"\n          autoComplete=\"off\"\n        >\n          <Table\n            pagination={false}\n            dataSource={students || []}\n            columns={this.columns}\n            loading={loading}\n          />\n        </Form>\n        <Pagination\n          defaultCurrent={searchParams?.number || 1}\n          total={meta?.total_record || 0}\n          style={{ marginTop: 50 }}\n          defaultPageSize={5}\n          pageSizeOptions={[5, 10, 15, 20]}\n          showSizeChanger\n          onChange={(page, pageSize) => {\n            this.setState({\n              searchParams: {\n                number: page,\n                size: pageSize,\n              },\n            });\n            fetchStudents({\n              number: page,\n              size: pageSize,\n            });\n          }}\n        />\n        ,\n      </div>\n    );\n  }\n}\n\nStudentManagement.propTypes = {\n  students: PropTypes.array,\n  fetchStudents: PropTypes.func,\n  deleteStudent: PropTypes.func,\n  history: PropTypes.object,\n  meta: PropTypes.object,\n  loading: PropTypes.bool,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  students: student.items,\n  loading: student.loading,\n  meta: student.meta,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n  deleteStudent,\n})(StudentManagement);\n","\n/* eslint-disable react/no-array-index-key */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Select,\n  Divider,\n  PageHeader,\n  InputNumber,\n  Radio,\n  Spin,\n} from 'antd';\n\nimport PhoneInput from 'react-phone-input-2';\n\nimport { fetchStudent, updateStudent } from '@/actions/studentActions';\nimport { STUDENT_DEGREES, UserAccountType } from '@/constants';\nimport { camelCase } from 'lodash';\n\nconst validateMessages = {\n  // eslint-disable-next-line no-template-curly-in-string\n  required: '${label} is required!',\n};\n\nconst { Option } = Select;\n\nclass DetailStudentContainer extends Component {\n  formRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        student: {\n          firstName: null,\n          lastName: null,\n          degree: null,\n          address: null,\n          email: null,\n          city: null,\n          zip: null,\n          businessPhone: null,\n          phoneNumber: null,\n          spendingReportMonths: null,\n          state: null,\n          specialty: null,\n          newPractice: null,\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: { studentId },\n      },\n      fetchStudent,\n    } = this.props;\n    fetchStudent(studentId);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { student } = this.props;\n\n    if (student !== prevProps.student && this.formRef?.current && student) {\n      const formatData = {};\n      Object.keys(student).forEach((key) => {\n        formatData[camelCase(key)] = student[key];\n      });\n      this.formRef.current.setFieldsValue({\n        student: formatData,\n      });\n    }\n  }\n\n  onFinish = async (values) => {\n    const {\n      match: {\n        params: { studentId },\n      },\n      updateStudent,\n    } = this.props;\n\n    await updateStudent(studentId, {\n      params: values,\n    });\n  };\n\n  getFieldValue = (key) => {\n    if (this.formRef.current) {\n      return (this.formRef.current.getFieldValue('student') || {})[key];\n    }\n    return null;\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const {\n      loading,\n      actionLoading,\n      match: {\n        params: { studentId },\n      },\n      history,\n      student,\n    } = this.props;\n\n    return (\n      <div className=\"registration-container\">\n        <PageHeader\n          className=\"site-page-header\"\n          title={`Student ID: ${studentId}`}\n        />\n        <Divider />\n\n        {loading && (\n          <div\n            style={{\n              position: 'absolute',\n              top: '48%',\n              left: '48%',\n            }}\n          >\n            <Spin />\n          </div>\n        )}\n        <Form\n          layout=\"vertical\"\n          ref={this.formRef}\n          style={{ opacity: loading ? 0 : 1 }}\n          onFinish={this.onFinish}\n          initialValues={initialValues}\n          validateMessages={validateMessages}\n        >\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n            }}\n          >\n            <Row gutter={24}>\n              <Col span={8}>\n                <Form.Item\n                  label=\"First Name\"\n                  name={['student', 'firstName']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n\n              <Col span={8}>\n                <Form.Item\n                  label=\"Last Name\"\n                  name={['student', 'lastName']}\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n\n              <Col span={8}>\n                {!!this.getFieldValue('degree') && (\n                  <Form.Item\n                    label=\"Degree\"\n                    name={['student', 'degree']}\n                    fieldKey=\"degree\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Select>\n                      {STUDENT_DEGREES.map((data, index) => (\n                        <Option key={index.toString()} value={data.value}>\n                          {data.label}\n                        </Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                )}\n              </Col>\n            </Row>\n\n            <Form.Item\n              label=\"Email\"\n              name={['student', 'email']}\n              fieldKey=\"email\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            {!!this.getFieldValue('address') && (\n              <Form.Item\n                label=\"Address\"\n                name={['student', 'address']}\n                fieldKey=\"address\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            )}\n\n            <Row gutter={24}>\n              <Col span={12}>\n                {!!this.getFieldValue('city') && (\n                  <Form.Item\n                    label=\"City\"\n                    name={['student', 'city']}\n                    fieldKey=\"city\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                )}\n\n                {!!this.getFieldValue('zip') && (\n                  <Form.Item\n                    label=\"Zip\"\n                    name={['student', 'zip']}\n                    fieldKey=\"zip\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                )}\n\n                {!!this.getFieldValue('businessPhone') && (\n                  <Form.Item\n                    label=\"Business Phone\"\n                    name={['student', 'businessPhone']}\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n                  </Form.Item>\n                )}\n\n                {!!this.getFieldValue('phoneNumber') && (\n                  <Form.Item\n                    label=\"Home Number\"\n                    name={['student', 'phoneNumber']}\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n                  </Form.Item>\n                )}\n\n                {!!this.getFieldValue('spendingReportMonths') && (\n                  <Form.Item\n                    label=\"Spending Report Months\"\n                    name={['student', 'spendingReportMonths']}\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <InputNumber style={{ width: '100%' }} />\n                  </Form.Item>\n                )}\n\n                {!!this.getFieldValue('newPractice') &&\n                  student?.account_type === UserAccountType.STUDENT_ADMIN && (\n                    <Form.Item\n                      name={['student', 'newPractice']}\n                      fieldKey=\"newPractice\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Radio.Group>\n                        <Radio value>New Practice</Radio>\n                        <Radio value={false}>Existing Practice</Radio>\n                      </Radio.Group>\n                    </Form.Item>\n                  )}\n              </Col>\n\n              <Col span={12}>\n                {this.getFieldValue('state') && (\n                  <Form.Item\n                    label=\"State\"\n                    name={['student', 'state']}\n                    fieldKey=\"state\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                )}\n\n                {this.getFieldValue('specialty') && (\n                  <Form.Item\n                    label=\"Specialty\"\n                    name={['student', 'specialty']}\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Select>\n                      <Option value=\"general\">General</Option>\n                      <Option value=\"prostho\">Prostho</Option>\n                      <Option value=\"ortho\">Ortho</Option>\n                      <Option value=\"pedo\">Pedo</Option>\n                      <Option value=\"perio\">Perio</Option>\n                      <Option value=\"endo\">Endo</Option>\n                      <Option value=\"surg\">Surg</Option>\n                    </Select>\n                  </Form.Item>\n                )}\n              </Col>\n            </Row>\n\n            <Button\n              type=\"default\"\n              style={{ marginRight: 20 }}\n              loading={actionLoading}\n              onClick={() => history.goBack()}\n            >\n              Back\n            </Button>\n\n            <Button type=\"primary\" htmlType=\"submit\" loading={actionLoading}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nDetailStudentContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studentId: PropTypes.string.isRequired,\n    }),\n  }),\n  history: PropTypes.object,\n  loading: PropTypes.bool,\n  actionLoading: PropTypes.bool,\n  updateStudent: PropTypes.func,\n  fetchStudent: PropTypes.func,\n  student: PropTypes.object,\n};\n\nconst mapStateToProps = ({ student }) => ({\n  loading: student.loading,\n  student: student.item,\n  actionLoading: student.actionLoading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchStudent,\n    updateStudent,\n  })(DetailStudentContainer),\n);\n","import api from '@/api';\n\nexport const postInterimBudget = async (args = {}) => {\n  const { id, payload } = args;\n  const res = await api.post(`/api/v1/users/${id}/interim_budgets`, {\n    data: payload,\n  });\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data;\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-array-index-key */\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Divider,\n  PageHeader,\n  DatePicker,\n  Select,\n  InputNumber,\n  notification,\n} from 'antd';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { connect } from 'react-redux';\nimport { postInterimBudget } from '@/services/interim.service';\n\nconst { Option } = Select;\n\nconst InterimBudget = (props) => {\n  const { students, fetchStudents, loadingFetchStudent } = props;\n  const [form, setForm] = useState({});\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const onDateSelect = (value) => {\n    if (value) {\n      setForm({\n        ...form,\n        dateMonth: {\n          month: value.month() + 1,\n          year: value.year(),\n        },\n      });\n    } else {\n      setForm({\n        ...form,\n        dateMonth: {\n          month: null,\n          year: null,\n        },\n        date: value,\n      });\n    }\n  };\n\n  const onSubmit = async () => {\n    const res = await postInterimBudget({\n      id: form.studentId,\n      payload: {\n        month: form.dateMonth.month,\n        year: form.dateMonth.year,\n        budgets: {\n          staff: form.staff,\n          occupancy: form.occupancy,\n          hp_resource: form.hp_resources,\n          supplies: form.supplies,\n          laboratory: form.laboratory,\n          services: form.services,\n          meal_and_entertainment: form.meal_and_entertainment,\n          marketing_sales: form.marketing_sales,\n          drs_salaries: form.drs_salaries,\n        },\n      },\n    });\n    if (res.success) {\n      notification.success({\n        message: res.message,\n      });\n    } else {\n      notification.error({\n        message: res.message,\n      });\n    }\n    setForm({\n      studentId: null,\n      dateMonth: {\n        month: null,\n        year: null,\n      },\n      category: null,\n      interimBudget: null,\n      date: '',\n    });\n  };\n\n  return (\n    <div className=\"submit-data-container\">\n      <PageHeader className=\"site-page-header\" title=\"Interim Budget\" />\n\n      <Divider />\n\n      <Row align=\"bottom\">\n        <Col span={12}>\n          <Form>\n            <Row style={{ display: 'flex', alignItems: 'center' }}>\n              <div style={{ width: 100 }}>Month/Year:</div>\n              <DatePicker\n                size=\"middle\"\n                picker=\"month\"\n                onChange={onDateSelect}\n                value={form.date}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Student:</div>\n              <Select\n                loading={loadingFetchStudent}\n                style={{\n                  width: 200,\n                }}\n                value={form.studentId}\n                onChange={(id) => {\n                  setForm({\n                    ...form,\n                    studentId: id,\n                  });\n                }}\n              >\n                {students.map((student, index) => (\n                  <Option value={student.id} key={index.toString()}>\n                    {`${student.first_name} ${student.last_name}`}\n                  </Option>\n                ))}\n              </Select>\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Category:</div>\n              <div style={{ width: 100 }}>Budget %:</div>\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Staff:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.staff}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    staff: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Occupancy:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.occupancy}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    occupancy: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>HP Resources:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.hp_resources}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    hp_resources: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Supplies:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.supplies}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    supplies: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Meal and Entertainment:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.meal_and_entertainment}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    meal_and_entertainment: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Laboratory:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.laboratory}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    laboratory: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Services:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.services}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    services: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Marketing Sales:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.marketing_sales}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    marketing_sales: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>DRS SALARIES:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.drs_salaries}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    drs_salaries: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row>\n              <Button type=\"primary\" onClick={onSubmit}>\n                Submit\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ student, error }) => ({\n  students: student.items,\n  loading: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n})(InterimBudget);\n","import api from '@/api';\n\nexport const postBudget = async (args = {}) => {\n  const { id, payload } = args;\n  const res = await api.post(`/api/v1/users/${id}/budgets`, {\n    data: payload,\n  });\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data;\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Divider,\n  PageHeader,\n  DatePicker,\n  Select,\n  InputNumber,\n  notification,\n} from 'antd';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { connect } from 'react-redux';\nimport { postBudget } from '@/services/budget.service';\n\nconst { Option } = Select;\n\nconst Budget = (props) => {\n  const { students, fetchStudents, loadingFetchStudent } = props;\n  const [form, setForm] = useState({});\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const onDateSelect = (value) => {\n    if (value) {\n      setForm({\n        ...form,\n        dateMonth: {\n          month: value.month() + 1,\n          year: value.year(),\n        },\n      });\n    } else {\n      setForm({\n        ...form,\n        dateMonth: {\n          month: null,\n          year: null,\n        },\n        date: value,\n      });\n    }\n  };\n\n  const onSubmit = async () => {\n    const res = await postBudget({\n      id: form.studentId,\n      payload: {\n        month: form.dateMonth.month,\n        year: form.dateMonth.year,\n        red_line_budget: form.red_line_budget,\n        blue_line_budget: form.blue_line_budget,\n        green_line_budget: form.green_line_budget,\n      },\n    });\n    if (res.success) {\n      notification.success({\n        message: res.message,\n      });\n    } else {\n      notification.error({\n        message: res.message,\n      });\n    }\n    setForm({\n      studentId: null,\n      dateMonth: {\n        month: null,\n        year: null,\n      },\n      red_line_budget: '',\n      blue_line_budget: '',\n      green_line_budget: '',\n      date: null,\n    });\n  };\n\n  return (\n    <div className=\"submit-data-container\">\n      <PageHeader className=\"site-page-header\" title=\"Budget\" />\n\n      <Divider />\n\n      <Row align=\"bottom\">\n        <Col span={12}>\n          <Form>\n            <Row style={{ display: 'flex', alignItems: 'center' }}>\n              <div style={{ width: 100 }}>Month/Year:</div>\n              <DatePicker\n                size=\"middle\"\n                picker=\"month\"\n                onChange={onDateSelect}\n                value={form.date}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Student:</div>\n              <Select\n                loading={loadingFetchStudent}\n                style={{\n                  width: 200,\n                }}\n                value={form.studentId}\n                onChange={(id) => {\n                  setForm({\n                    ...form,\n                    studentId: id,\n                  });\n                }}\n              >\n                {students.map((student, index) => (\n                  <Option value={student.id} key={index.toString()}>\n                    {`${student.first_name} ${student.last_name}`}\n                  </Option>\n                ))}\n              </Select>\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Red Line Budget:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `$${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={form.red_line_budget}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    red_line_budget: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Blue Line Budget:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `$${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={form.blue_line_budget}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    blue_line_budget: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 100 }}>Green Line Budget:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `$${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                value={form.green_line_budget}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    green_line_budget: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row>\n              <Button type=\"primary\" onClick={onSubmit}>\n                Submit\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ student, error }) => ({\n  students: student.items,\n  loading: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n})(Budget);\n","import api from '@/api';\n\nexport const postOccupancy = async (args = {}) => {\n  const { id, payload } = args;\n  const res = await api.post(\n    `/api/v1/users/${id}/occupancy_conversions`,\n    payload,\n  );\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data;\n};\n\nexport const updateOccupancy = async (args = {}) => {\n  const { id, payload } = args;\n  const res = await api.put(\n    `/api/v1/users/${id}/occupancy_conversions`,\n    payload,\n  );\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data;\n};\n\nexport const getOccupancy = async (id) => {\n  const res = await api.get(`/api/v1/users/${id}/occupancy_conversions`);\n  if (!res) {\n    return {\n      error: 'Error',\n    };\n  }\n  return res.data.result;\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Divider,\n  PageHeader,\n  Select,\n  InputNumber,\n  notification,\n} from 'antd';\nimport { forEach } from 'lodash';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { connect } from 'react-redux';\nimport { postOccupancy } from '@/services/occupancy.service';\n\nconst { Option } = Select;\n\nconst Occupancy = (props) => {\n  const { items, fetchDoctors } = props;\n  const [form, setForm] = useState({});\n\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n\n  const onSubmit = async () => {\n    const res = await postOccupancy({\n      id: form.user_id,\n      payload: {\n        occupancy_conversion: {\n          percent_clinical_space: form.percent_clinical_space,\n          percent_non_clinical_space: form.percent_non_clinical_space,\n          total_treatment_room: form.total_treatment_room,\n          total_used_hygiene_department: form.total_used_hygiene_department,\n        },\n      },\n    });\n\n    if (res.success) {\n      notification.success({\n        message: res.result.message,\n      });\n\n      setForm({\n        user_id: null,\n        percent_clinical_space: null,\n        percent_non_clinical_space: null,\n        total_treatment_room: null,\n        total_used_hygiene_department: null,\n      });\n    } else {\n      notification.error({\n        message: res.result.message,\n      });\n    }\n  };\n\n  const optionInit = () => {\n    // eslint-disable-next-line react/prop-types\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <div className=\"submit-data-container\">\n      <PageHeader className=\"site-page-header\" title=\"Occupancy\" />\n\n      <Divider />\n\n      <Row align=\"bottom\">\n        <Col span={12}>\n          <Form>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>Office/ Dr:</div>\n              <Select\n                style={{\n                  width: 200,\n                }}\n                showSearch\n                optionFilterProp=\"children\"\n                value={form.user_id}\n                onChange={(id) => {\n                  setForm({\n                    ...form,\n                    user_id: id,\n                  });\n                }}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n                filterSort={(optionA, optionB) =>\n                  optionA.children\n                    .toLowerCase()\n                    .localeCompare(optionB.children.toLowerCase())\n                }\n              >\n                {optionInit().map((doctor, index) => (\n                  <Option value={doctor.value} key={index.toString()}>\n                    {`${doctor?.label}`}\n                  </Option>\n                ))}\n              </Select>\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>% of Clinical Space:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.percent_clinical_space}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    percent_clinical_space: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>% if Non - Clinical Space:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.percent_non_clinical_space}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    percent_non_clinical_space: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>Total number of Treatment Room:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.total_treatment_room}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    total_treatment_room: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>Total used by Hygiene Department</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.total_used_hygiene_department}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    total_used_hygiene_department: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row>\n              <Button\n                type=\"primary\"\n                onClick={onSubmit}\n                disabled={!form.user_id}\n              >\n                Submit\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ student, doctor, error }) => ({\n  students: student.items,\n  items: doctor.items,\n  loading: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n  fetchDoctors,\n})(Occupancy);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Divider,\n  PageHeader,\n  Select,\n  InputNumber,\n  notification,\n} from 'antd';\nimport { forEach } from 'lodash';\nimport { fetchStudents } from '@/actions/studentActions';\nimport { fetchDoctors } from '@/actions/doctorActions';\nimport { connect } from 'react-redux';\nimport { getOccupancy, updateOccupancy } from '@/services/occupancy.service';\nimport { setLoading } from '@/store/student';\n\nconst { Option } = Select;\n\nconst ReviewOccupancy = (props) => {\n  const { items, fetchDoctors } = props;\n  const [form, setForm] = useState({});\n\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n\n  const onSubmit = async () => {\n    const res = await updateOccupancy({\n      id: form.user_id,\n      payload: {\n        occupancy_conversion: {\n          percent_clinical_space: form.percent_clinical_space,\n          percent_non_clinical_space: form.percent_non_clinical_space,\n          total_treatment_room: form.total_treatment_room,\n          total_used_hygiene_department: form.total_used_hygiene_department,\n        },\n      },\n    });\n    if (res.success) {\n      notification.success({\n        message: res.result.message,\n      });\n    } else {\n      notification.error({\n        message: res.result.message,\n      });\n    }\n    setForm({\n      user_id: null,\n      percent_clinical_space: null,\n      percent_non_clinical_space: null,\n      total_treatment_room: null,\n      total_used_hygiene_department: null,\n    });\n  };\n\n  const optionInit = () => {\n    // eslint-disable-next-line react/prop-types\n    const data = [];\n\n    forEach(items, (item) => {\n      const { fullname } = item.attributes;\n\n      data.push({\n        label: fullname,\n        value: item.id,\n      });\n    });\n\n    return data;\n  };\n\n  const fetchOccupancyById = async (id) => {\n    const res = await getOccupancy(id);\n    setLoading(true);\n    if (!res.message) {\n      setForm({\n        user_id: res.data.user_id,\n        percent_clinical_space: res.data.percent_clinical_space,\n        percent_non_clinical_space: res.data.percent_non_clinical_space,\n        total_treatment_room: res.data.total_treatment_room,\n        total_used_hygiene_department: res.data.total_used_hygiene_department,\n      });\n    } else {\n      notification.error({\n        message: res.message,\n      });\n      setForm({\n        user_id: null,\n        percent_clinical_space: null,\n        percent_non_clinical_space: null,\n        total_treatment_room: null,\n        total_used_hygiene_department: null,\n      });\n    }\n  };\n\n  return (\n    <div className=\"submit-data-container\">\n      <PageHeader className=\"site-page-header\" title=\"Review Occupancy\" />\n\n      <Divider />\n\n      <Row align=\"bottom\">\n        <Col span={12}>\n          <Form>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>Office/ Dr:</div>\n              <Select\n                style={{\n                  width: 200,\n                }}\n                showSearch\n                value={form.user_id}\n                optionFilterProp=\"children\"\n                onChange={(id) => {\n                  setForm({\n                    ...form,\n                    user_id: id,\n                  });\n                  fetchOccupancyById(id);\n                }}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n                filterSort={(optionA, optionB) =>\n                  optionA.children\n                    .toLowerCase()\n                    .localeCompare(optionB.children.toLowerCase())\n                }\n              >\n                {optionInit().map((doctor, index) => (\n                  <Option value={doctor.value} key={index.toString()}>\n                    {`${doctor?.label}`}\n                  </Option>\n                ))}\n              </Select>\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>% of Clinical Space:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.percent_clinical_space}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    percent_clinical_space: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>% if Non - Clinical Space:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.percent_non_clinical_space}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    percent_non_clinical_space: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>Total number of Treatment Room:</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.total_treatment_room}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    total_treatment_room: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row\n              style={{\n                marginBottom: 30,\n                marginTop: 20,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div style={{ width: 250 }}>Total used by Hygiene Department</div>\n              <InputNumber\n                style={{\n                  width: 200,\n                }}\n                formatter={(value) =>\n                  `% ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                }\n                parser={(value) => value.replace(/\\%\\s?|(,*)/g, '')}\n                value={form.total_used_hygiene_department}\n                onChange={(e) => {\n                  setForm({\n                    ...form,\n                    total_used_hygiene_department: e,\n                  });\n                }}\n              />\n            </Row>\n            <Row>\n              <Button\n                type=\"primary\"\n                onClick={onSubmit}\n                disabled={!form.user_id}\n              >\n                Update\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ student, doctor, error }) => ({\n  students: student.items,\n  items: doctor.items,\n  loading: student.loading,\n});\n\nexport default connect(mapStateToProps, {\n  fetchStudents,\n  fetchDoctors,\n})(ReviewOccupancy);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AppConfig from '@/constants/AppConfig';\nimport ReportContainer from '@/containers/Reports';\nimport EnergyProfileReport from '@/containers/EnergyProfileReport';\nimport NotFoundContainer from '@/containers/NotFoundContainer';\nimport CoachingContainer from '@/containers/CoachingContainer';\nimport ProfitScanContainer from '@/containers/ProfitScanContainer';\nimport OrthoSubmitDataContainer from '@/containers/Ortho/SubmitData';\nimport RegistrationContainer from '@/containers/RegistrationContainer';\nimport DensitySubmitDataContainer from '@/containers/Density/SubmitData';\nimport ProfitAndLossContainer from '@/containers/ProfitAndLossContainer';\nimport EnergyContainer from '@/containers/EnergyConversion/EnergyContainer';\nimport EnergyProfileDataResult from '@/containers/EnergyProfileReport/DataResult';\nimport EnergyProfileDataAnalysis from '@/containers/EnergyProfileReport/DataAnalysis';\nimport DirectionContainer from '@/containers/EnergyConversion/DirectionContainer';\nimport StudentsScheduleContainer from '@/containers/Students/ScheduleContainer';\nimport StudentsSubmitDataContainer from '@/containers/Students/SubmitDataContainer';\nimport StudentsPurchaseItemsContainer from '@/containers/Students/PurchaseItemsContainer';\nimport AttitudeAndSkillsContainer from '@/containers/EnergyConversion/AttitudeAndSkillsContainer';\nimport RegistrationCreateStudentContainer from '@/containers/RegistrationContainer/CreateStudentContainer';\nimport StructureAndSystemsContainer from '@/containers/EnergyConversion/StructureAndSystemsContainer';\nimport CommunicationAndCoordinationContainer from '@/containers/EnergyConversion/CommunicationAndCoordinationContainer';\nimport ChartAudit from '@/containers/ChartAudit';\nimport CoachingPPP from '@/containers/Coaching/CoachingPPP';\n// eslint-disable-next-line import/no-named-as-default\nimport ChartAuditReport from '@/containers/ChartAuditReport';\nimport ReviewSubmittedContainer from '@/containers/Students/ReviewSubmittedContainer';\nimport CreateUserContainer from '@/containers/RegistrationContainer/CreateUserContainer';\nimport StudentManagement from '@/containers/Management/StudentContainer';\nimport DetailStudentContainer from '@/containers/Management/DetailStudent';\nimport InterimBudget from '@/containers/InterimBudget';\nimport Budget from '@/containers/Budget';\nimport Occupancy from '@/containers/Occupancy';\nimport ReviewOccupancy from '@/containers/ReviewOccupancy';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.STUDENTS_SCHEDULE}/:step`}\n        component={StudentsScheduleContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.STUDENTS_SUBMIT_DATA}`}\n        component={StudentsSubmitDataContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.REVIEW_SUBMITED}`}\n        component={ReviewSubmittedContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.STUDENTS_PURCHASE_ITEMS}`}\n        component={StudentsPurchaseItemsContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.REPORT}`}\n        component={ReportContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.COACHING}`}\n        component={CoachingContainer}\n      />\n      <Route\n        exact\n        path={`/:studentId${AppConfig.ROUTES.DENTISTRY}/:step`}\n        component={DensitySubmitDataContainer}\n      />\n      <Route\n        exact\n        path={`/:studentId${AppConfig.ROUTES.ORTHO}/:step`}\n        component={OrthoSubmitDataContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.REGISTRATION}`}\n        component={RegistrationContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.REGISTRATION}/${AppConfig.REGISTRATIONS.CREATE_STUDENT}`}\n        component={RegistrationCreateStudentContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.REGISTRATION}/${AppConfig.REGISTRATIONS.CREATE_USER}`}\n        component={CreateUserContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.ENERGY}`}\n        component={EnergyContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.DIRECTION}`}\n        component={DirectionContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.STRUCTURE_AND_SYSTEMS}`}\n        component={StructureAndSystemsContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.COMMUNICATION_AND_COORDINATION}`}\n        component={CommunicationAndCoordinationContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.ATTITUDE_AND_SKILLS}`}\n        component={AttitudeAndSkillsContainer}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_PROFILE_REPORT}`}\n        component={EnergyProfileReport}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_PROFILE}/${AppConfig.ENERGY_PROFILE.DATA_RESULT}`}\n        component={EnergyProfileDataResult}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.ENERGY_PROFILE}/${AppConfig.ENERGY_PROFILE.DATA_ANALYSIS}`}\n        component={EnergyProfileDataAnalysis}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.PROFIT_AND_LOSS}`}\n        component={ProfitAndLossContainer}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.PROFIT_SCAN}`}\n        component={ProfitScanContainer}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.CHART_AUDIT}`}\n        component={ChartAudit}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.COACHING_PPP}`}\n        component={CoachingPPP}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.INTERIM_BUDGET}`}\n        component={InterimBudget}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.OCCUPANCY}`}\n        component={Occupancy}\n      />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.REVIEW_OCCUPANCY}`}\n        component={ReviewOccupancy}\n      />\n      <Route exact path={`${AppConfig.ROUTES.BUDGET}`} component={Budget} />\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.COACHING_PPP}`}\n        component={CoachingPPP}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.CHART_AUDIT_REPORT}`}\n        component={ChartAuditReport}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.MANGEMENT}/${AppConfig.MANGEMENT.STUDENT}`}\n        component={StudentManagement}\n      />\n\n      <Route\n        exact\n        path={`${AppConfig.ROUTES.MANGEMENT}/${AppConfig.MANGEMENT.STUDENT}/:studentId`}\n        component={DetailStudentContainer}\n      />\n\n      <Route path=\"*\" component={NotFoundContainer} />\n    </Switch>\n  );\n}\nexport default Routes;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { notification } from 'antd';\n\nclass FlashMessage extends Component {\n  render() {\n    const { message, type } = this.props;\n\n    if (!message) {\n      return null;\n    }\n\n    switch (type) {\n      case 'success':\n        notification.success({\n          message,\n          duration: 3,\n        });\n        break;\n      case 'info':\n        notification.info({\n          message,\n          duration: 3,\n        });\n        break;\n      case 'warning':\n        notification.warning({\n          message,\n          duration: 3,\n        });\n        break;\n\n      case 'error':\n        notification.error({\n          message,\n          duration: 3,\n        });\n        break;\n      default:\n        notification.open({\n          message,\n          duration: 3,\n        });\n        break;\n    }\n\n    return null;\n  }\n}\n\nFlashMessage.propTypes = {\n  type: PropTypes.string,\n  message: PropTypes.string,\n};\n\nconst mapStateToProps = ({ flashMessage }) => ({\n  type: flashMessage.type,\n  message: flashMessage.message,\n});\n\nexport default connect(mapStateToProps)(FlashMessage);\n","export default __webpack_public_path__ + \"static/media/logo.cc87eaa6.png\";","import { createSlice } from '@reduxjs/toolkit';\nimport { getUserFromLocalStorage } from '@/utils/authUtils';\n\nconst initialUser = getUserFromLocalStorage();\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState: {\n    loading: false,\n    currentUser: initialUser,\n    error: null,\n  },\n  reducers: {\n    loginRequest(state) {\n      state.error = null;\n      state.loading = true;\n    },\n    loginSuccess(state, { payload: { user } }) {\n      state.currentUser = user;\n      state.loading = false;\n    },\n    loginFail(state, { payload: { error } }) {\n      state.error = error;\n      state.currentUser = null;\n      state.loading = false;\n    },\n    loggedOutRequest(state) {\n      state.error = null;\n      state.loading = true;\n    },\n    loggedOutSuccess(state) {\n      state.loading = false;\n      state.currentUser = null;\n    },\n    loggedOutFail(state, { payload: { error } }) {\n      state.error = error;\n      state.currentUser = null;\n      state.loading = false;\n    },\n    signUpRequest(state) {\n      state.error = null;\n      state.loading = true;\n    },\n    signUpSuccess(state) {\n      state.loading = false;\n    },\n    signUpFail(state, { payload: { error } }) {\n      state.error = error;\n      state.currentUser = null;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  loginRequest,\n  loginSuccess,\n  loginFail,\n  loggedOutRequest,\n  loggedOutSuccess,\n  loggedOutFail,\n  signUpRequest,\n  signUpSuccess,\n  signUpFail,\n} = slice.actions;\n\nexport default slice.reducer;\n","// import api from '@/api';\nimport api from '@/api';\nimport {\n  loggedOutFail,\n  loggedOutRequest,\n  loggedOutSuccess,\n  loginFail,\n  loginRequest,\n  loginSuccess,\n  signUpFail,\n  signUpRequest,\n  signUpSuccess,\n} from '@/store/auth';\nimport {\n  removeUserFromLocalStorage,\n  setUserToLocalStorage,\n} from '@/utils/authUtils';\nimport snakecaseKeys from 'snakecase-keys';\n\nexport const login =\n  ({ email, password }) =>\n  async (dispatch) => {\n    dispatch(loginRequest());\n\n    try {\n      const response = await api.post('/users/sign_in', {\n        user: {\n          email,\n          password,\n        },\n      });\n      const user = response?.data?.user;\n      user.token = response.headers.authorization.replace('Bearer ', '');\n\n      setUserToLocalStorage(user);\n      dispatch(loginSuccess({ user: response.data?.user }));\n    } catch (error) {\n      dispatch(loginFail({ error: error.response?.data?.error }));\n      console.error(error);\n    }\n  };\n\nexport const signUp = (data) => async (dispatch) => {\n  console.log('xxxx', data);\n  console.log('snak', snakecaseKeys(data, { keepCase: true }));\n\n  dispatch(signUpRequest());\n\n  try {\n    const response = await api.post('/users', {\n      user: snakecaseKeys(data, { keepCase: true }),\n    });\n\n    dispatch(signUpSuccess());\n\n    if (response?.data?.user) {\n      return true;\n    }\n    return false;\n  } catch (error) {\n    dispatch(signUpFail({ error: error?.response?.data?.error }));\n    console.error(error);\n    return false;\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch(loggedOutRequest());\n\n  try {\n    await api.delete('/users/sign_out');\n    removeUserFromLocalStorage();\n    dispatch(loggedOutSuccess());\n    return true;\n  } catch (error) {\n    dispatch(loggedOutFail({ error: error.response.data.error }));\n    console.error(error);\n    return false;\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Layout, Menu, notification } from 'antd';\nimport {\n  UserOutlined,\n  PieChartOutlined,\n  SettingOutlined,\n  DatabaseOutlined,\n} from '@ant-design/icons';\n\nimport Routes from '@/routes';\nimport FlashMessage from '@/components/FlashMessage';\nimport { clearErrors } from '@/actions/errorActions';\nimport AppConfig from '@/constants/AppConfig';\nimport logoImage from '@/assets/images/logo.png';\nimport { logout } from '@/actions/authActions';\n\nimport '@/styles/index.scss';\nimport './index.scss';\nimport { UserAccountType } from '@/constants';\n\nconst { Content, Sider } = Layout;\nconst { SubMenu } = Menu;\nclass AppContainer extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      collapsed: false,\n      openKeys: [],\n    };\n  }\n\n  componentDidMount() {\n    const { history, dispatchClearErrors, currentUser } = this.props;\n\n    if (!currentUser) {\n      history.push('/login');\n    }\n    this.unlistenHistory = history.listen(() => {\n      dispatchClearErrors();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlistenHistory();\n  }\n\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed });\n  };\n\n  onLogout = async () => {\n    const { logout, history } = this.props;\n    const isSuccess = await logout();\n\n    if (isSuccess) {\n      notification.success({\n        message: 'Logout Successfully',\n      });\n      history.push({\n        pathname: AppConfig.ROUTES.LOGIN,\n      });\n    }\n  };\n\n  render() {\n    const { collapsed, openKeys } = this.state;\n    const { currentUser } = this.props;\n\n    return (\n      <div className=\"app-container\">\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider\n            width=\"330\"\n            collapsible\n            collapsed={collapsed}\n            onCollapse={this.onCollapse}\n          >\n            <div className=\"logo\">\n              <img src={logoImage} alt=\"logo\" />\n            </div>\n            <Menu\n              theme=\"dark\"\n              defaultSelectedKeys={['1']}\n              openKeys={openKeys}\n              mode=\"inline\"\n            >\n              {[\n                UserAccountType.ADMIN,\n                UserAccountType.STUDENT_ADMIN,\n                UserAccountType.STUDENT_STAFF,\n                UserAccountType.STUDENT_DOCTOR,\n              ].includes(currentUser?.account_type) && (\n                <SubMenu\n                  key=\"registration\"\n                  icon={<UserOutlined />}\n                  title=\"Registration\"\n                  onTitleClick={() => {\n                    console.log(openKeys);\n                    if (openKeys[0] !== 'registration') {\n                      this.setState({\n                        openKeys: ['registration'],\n                      });\n                    } else {\n                      this.setState({\n                        openKeys: [],\n                      });\n                    }\n                  }}\n                >\n                  {[\n                    UserAccountType.ADMIN,\n                    UserAccountType.STUDENT_ADMIN,\n                  ].includes(currentUser?.account_type) && (\n                    <Menu.Item key=\"1\">\n                      <Link to={`${AppConfig.ROUTES.REGISTRATION}`}>\n                        Registration\n                      </Link>\n                    </Menu.Item>\n                  )}\n                  {[\n                    UserAccountType.ADMIN,\n                    UserAccountType.STUDENT_ADMIN,\n                  ].includes(currentUser?.account_type) && (\n                    <Menu.Item key=\"2\">\n                      <Link to={`${AppConfig.ROUTES.OCCUPANCY}`}>\n                        Occupancy Form\n                      </Link>\n                    </Menu.Item>\n                  )}\n                  {[\n                    UserAccountType.ADMIN,\n                    UserAccountType.STUDENT_ADMIN,\n                  ].includes(currentUser?.account_type) && (\n                    <Menu.Item key=\"3\">\n                      <Link to={`${AppConfig.ROUTES.PROFIT_AND_LOSS}`}>\n                        PPP\n                      </Link>\n                    </Menu.Item>\n                  )}\n                  {[\n                    UserAccountType.ADMIN,\n                    UserAccountType.STUDENT_ADMIN,\n                  ].includes(currentUser?.account_type) && (\n                    <Menu.Item key=\"4\">\n                      <Link to={`${AppConfig.ROUTES.CHART_AUDIT}`}>\n                        Chart audit\n                      </Link>\n                    </Menu.Item>\n                  )}\n                  {[\n                    UserAccountType.ADMIN,\n                    UserAccountType.STUDENT_ADMIN,\n                    UserAccountType.STUDENT_STAFF,\n                    UserAccountType.STUDENT_DOCTOR,\n                  ].includes(currentUser?.account_type) && (\n                    <SubMenu\n                      key=\"energy-conversion\"\n                      title=\"Energy Conversion\"\n                      onTitleClick={() => {\n                        if (openKeys[1] !== 'energy-conversion') {\n                          this.setState({\n                            openKeys: ['registration', 'energy-conversion'],\n                          });\n                        } else {\n                          this.setState({\n                            openKeys: ['registration'],\n                          });\n                        }\n                      }}\n                    >\n                      <Menu.Item key=\"eng\">\n                        <Link\n                          to={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.ENERGY}`}\n                        >\n                          Energy\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"5\">\n                        <Link\n                          to={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.DIRECTION}`}\n                        >\n                          Direction\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"6\">\n                        <Link\n                          to={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.STRUCTURE_AND_SYSTEMS}`}\n                        >\n                          Structure and Systems\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"7\">\n                        <Link\n                          to={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.COMMUNICATION_AND_COORDINATION}`}\n                        >\n                          Communication and Coordination\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"8\">\n                        <Link\n                          to={`${AppConfig.ROUTES.ENERGY_CONVERSION}/${AppConfig.ENERGY_CONVERSION.ATTITUDE_AND_SKILLS}`}\n                        >\n                          Attitude and Skills\n                        </Link>\n                      </Menu.Item>\n                    </SubMenu>\n                  )}\n                </SubMenu>\n              )}\n              {[UserAccountType.ADMIN, UserAccountType.STUDENT_ADMIN].includes(\n                currentUser?.account_type,\n              ) && (\n                <SubMenu\n                  key=\"management\"\n                  icon={<DatabaseOutlined />}\n                  title=\"Management\"\n                  onTitleClick={() => {\n                    if (openKeys[0] !== 'management') {\n                      this.setState({\n                        openKeys: ['management'],\n                      });\n                    } else {\n                      this.setState({\n                        openKeys: [],\n                      });\n                    }\n                  }}\n                >\n                  <Menu.Item key=\"mangement-student\">\n                    <Link\n                      to={`${AppConfig.ROUTES.MANGEMENT}/${AppConfig.MANGEMENT.STUDENT}`}\n                    >\n                      Student\n                    </Link>\n                  </Menu.Item>\n                </SubMenu>\n              )}\n              {[\n                UserAccountType.ADMIN,\n                UserAccountType.STUDENT_ADMIN,\n                UserAccountType.STUDENT_STAFF,\n                UserAccountType.STUDENT_DOCTOR,\n              ].includes(currentUser?.account_type) && (\n                <SubMenu\n                  key=\"student\"\n                  icon={<UserOutlined />}\n                  title=\"Students\"\n                  onTitleClick={() => {\n                    if (openKeys[0] !== 'student') {\n                      this.setState({\n                        openKeys: ['student'],\n                      });\n                    } else {\n                      this.setState({\n                        openKeys: [],\n                      });\n                    }\n                  }}\n                >\n                  <Menu.Item key=\"9\">\n                    <Link\n                      to={`${AppConfig.ROUTES.STUDENTS_SCHEDULE}/${AppConfig.SCHEDULE_CLASS_STEPS.REGISTER_CLASS}`}\n                    >\n                      Schedule\n                    </Link>\n                  </Menu.Item>\n                  {[\n                    UserAccountType.ADMIN,\n                    UserAccountType.STUDENT_ADMIN,\n                  ].includes(currentUser?.account_type) && (\n                    <Menu.Item key=\"10\">\n                      <Link to={`${AppConfig.ROUTES.STUDENTS_SUBMIT_DATA}`}>\n                        Submit Data\n                      </Link>\n                    </Menu.Item>\n                  )}\n\n                  <Menu.Item key=\"11\">\n                    <Link to={`${AppConfig.ROUTES.STUDENTS_PURCHASE_ITEMS}`}>\n                      Purchase Items\n                    </Link>\n                  </Menu.Item>\n                </SubMenu>\n              )}\n              {[UserAccountType.ADMIN, UserAccountType.COACH].includes(\n                currentUser?.account_type,\n              ) && (\n                <SubMenu\n                  key=\"coaching\"\n                  icon={<UserOutlined />}\n                  title=\"Coaching\"\n                  onTitleClick={() => {\n                    if (openKeys[0] !== 'coaching') {\n                      this.setState({\n                        openKeys: ['coaching'],\n                      });\n                    } else {\n                      this.setState({\n                        openKeys: [],\n                      });\n                    }\n                  }}\n                >\n                  <Menu.Item key=\"12\">\n                    <Link to={`${AppConfig.ROUTES.REVIEW_SUBMITED}`}>\n                      Review submitted\n                    </Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"review_occupancy\">\n                    <Link to={`${AppConfig.ROUTES.REVIEW_OCCUPANCY}`}>\n                      Review Occupancy Form\n                    </Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"interimBudget\">\n                    <Link to={`${AppConfig.ROUTES.INTERIM_BUDGET}`}>\n                      Interim Budget\n                    </Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"budget\">\n                    <Link to={`${AppConfig.ROUTES.BUDGET}`}>Budget</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"13\">\n                    <Link to={`${AppConfig.ROUTES.COACHING_PPP}`}>PPP</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"14\">\n                    <Link to={`${AppConfig.ROUTES.ENERGY_PROFILE_REPORT}`}>\n                      Energy Profile Report\n                    </Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"15\">\n                    <Link to={`${AppConfig.ROUTES.CHART_AUDIT_REPORT}`}>\n                      Chart Audit Report\n                    </Link>\n                  </Menu.Item>\n                </SubMenu>\n              )}\n              {[\n                UserAccountType.ADMIN,\n                UserAccountType.STUDENT_ADMIN,\n                UserAccountType.STUDENT_STAFF,\n                UserAccountType.STUDENT_DOCTOR,\n                UserAccountType.COACH,\n              ].includes(currentUser?.account_type) && (\n                <Menu.Item key=\"16\" icon={<PieChartOutlined />}>\n                  <Link to={`${AppConfig.ROUTES.REPORT}`}>Reporting</Link>\n                </Menu.Item>\n              )}\n              <SubMenu\n                key=\"setting\"\n                icon={<SettingOutlined />}\n                title=\"Setting\"\n                onTitleClick={() => {\n                  if (openKeys[0] !== 'setting') {\n                    this.setState({\n                      openKeys: ['setting'],\n                    });\n                  } else {\n                    this.setState({\n                      openKeys: [],\n                    });\n                  }\n                }}\n              >\n                <Menu.Item key=\"18\" onClick={this.onLogout}>\n                  Log out\n                </Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Content style={{ margin: '16px' }}>\n              <div\n                className=\"site-layout-background\"\n                style={{ padding: 24, minHeight: 360 }}\n              >\n                <FlashMessage />\n                <Routes />\n              </div>\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nAppContainer.propTypes = {\n  history: PropTypes.object,\n  dispatchClearErrors: PropTypes.func,\n  currentUser: PropTypes.object,\n  logout: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps({ auth }) {\n  return {\n    currentUser: auth.currentUser,\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    dispatchClearErrors: clearErrors,\n    logout,\n  })(AppContainer),\n);\n","import { login } from '@/actions/authActions';\nimport { Button, Form, Input, notification } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AppConfig from '@/constants/AppConfig';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nclass Login extends Component {\n  componentDidMount() {\n    const { currentUser, history } = this.props;\n    if (currentUser) {\n      history.push({\n        pathname: AppConfig.ROUTES.MAIN,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const { errorMessage, currentUser, history } = this.props;\n    if (errorMessage) {\n      notification.error({\n        message: errorMessage,\n      });\n    }\n\n    if (currentUser) {\n      notification.success({\n        message: 'Login Successful',\n      });\n      history.push({\n        pathname: AppConfig.ROUTES.MAIN,\n      });\n    }\n  }\n\n  onLogin = async (data) => {\n    const { login } = this.props;\n    await login({\n      email: data.email,\n      password: data.password,\n    });\n  };\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"login-header\">Login</h1>\n        <Form\n          className=\"form-wrapper\"\n          name=\"user\"\n          initialValues={{ remember: true }}\n          autoComplete=\"off\"\n          onFinish={this.onLogin}\n        >\n          <Form.Item\n            className=\"input-item\"\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input placeholder=\"Email\" />\n          </Form.Item>\n\n          <Form.Item\n            className=\"input-item\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password placeholder=\"Password\" />\n          </Form.Item>\n          <Form.Item className=\"submit-btn-wrapper\">\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Login\n            </Button>\n          </Form.Item>\n        </Form>\n        <span>\n          Don&apos;t have an account ? <Link to=\"/sign-up\">Sign up now</Link>\n        </span>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  currentUser: PropTypes.object,\n  loading: PropTypes.bool,\n  history: PropTypes.object,\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  errorMessage: auth.error,\n  loading: auth.loading,\n  currentUser: auth.currentUser,\n});\nexport default connect(mapStateToProps, {\n  login,\n})(Login);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport {\n  Button,\n  Form,\n  Input,\n  Select,\n  notification,\n  InputNumber,\n  Radio,\n  DatePicker,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppConfig from '@/constants/AppConfig';\nimport { connect } from 'react-redux';\nimport { signUp } from '@/actions/authActions';\nimport './index.scss';\nimport { STUDENT_DEGREES, UserAccountType } from '@/constants';\nimport PhoneInput from 'react-phone-input-2';\nimport { getStudentAdmin } from '@/services/report.service';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst SignUp = (props) => {\n\n  const formRef = React.createRef();\n  const [currentAccountType, setCurrentAccountType] = useState(\n    UserAccountType.STUDENT_ADMIN,\n  );\n\n  const [studentAdmins, setStudentAdmins] = useState([]);\n  const { errorMessage, currentUser, history } = props;\n\n  useEffect(async () => {\n    if (currentUser) {\n      history.push({\n        pathname: AppConfig.ROUTES.MAIN,\n      });\n    }\n    const temp = await getStudentAdmin();\n\n    if (temp) {\n      setStudentAdmins(temp);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (errorMessage) {\n      notification.error({\n        message: errorMessage,\n      });\n    }\n  }, [errorMessage]);\n\n  useEffect(() => { }, [currentAccountType]);\n\n  const onSignUp = async (data) => {\n    const { signUp, history } = props;\n    if (currentAccountType === UserAccountType.STUDENT_ADMIN) {\n      delete data.studentAdminId;\n    }\n    const mappedData = {\n      ...data,\n      startDate: data.startDate.format('YYYY-MM-DD')\n    };\n\n    const isSuccess = await signUp(mappedData);\n\n    if (isSuccess) {\n      notification.success({\n        message: 'Sign Up Successfully',\n      });\n      history.push({\n        pathname: AppConfig.ROUTES.LOGIN,\n      });\n    }\n  };\n\n  const renderStudentItem = () => {\n    if (currentAccountType === UserAccountType.STUDENT_ADMIN) {\n      return (\n        <>\n          <Form.Item\n            name=\"firstName\"\n            className=\"input-item\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"First Name\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"lastName\"\n            className=\"input-item\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"Last Name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"practiceName\"\n            className=\"input-item\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"Practice Name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"degree\"\n            className=\"input-item\"\n            fieldKey=\"degree\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select placeholder=\"Degree\">\n              {STUDENT_DEGREES.map((data, index) => (\n                <Option key={index.toString()} value={data.value}>\n                  {data.label}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"address\"\n            className=\"input-item\"\n            fieldKey=\"address\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"Address\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"city\"\n            className=\"input-item\"\n            fieldKey=\"city\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"City\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"zip\"\n            className=\"input-item\"\n            fieldKey=\"zip\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"Zip\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Business Phone\"\n            className=\"input-item\"\n            name=\"businessPhone\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Home Number\"\n            className=\"input-item\"\n            name=\"phoneNumber\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <PhoneInput country=\"us\" inputStyle={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"spendingReportMonths\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <InputNumber\n              placeholder=\"Spending Report Months\"\n              style={{ width: '100%' }}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"newPractice\"\n            fieldKey=\"newPractice\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Radio.Group>\n              <Radio value>New Practice</Radio>\n              <Radio value={false}>Existing Practice</Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item\n            name=\"state\"\n            fieldKey=\"state\"\n            className=\"input-item\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"State\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"specialty\"\n            className=\"input-item\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select className=\"selector\" placeholder=\"Specialty\">\n              <Option value=\"general\">General</Option>\n              <Option value=\"prostho\">Prostho</Option>\n              <Option value=\"ortho\">Ortho</Option>\n              <Option value=\"pedo\">Pedo</Option>\n              <Option value=\"perio\">Perio</Option>\n              <Option value=\"endo\">Endo</Option>\n              <Option value=\"surg\">Surg</Option>\n            </Select>\n          </Form.Item>\n        </>\n      );\n    }\n\n    return null;\n  };\n\n  const render = () => {\n    const { loading } = props;\n    return (\n      <div\n        className=\"container\"\n        style={{\n          height:\n            currentAccountType === UserAccountType.STUDENT_ADMIN\n              ? '100%'\n              : '100vh',\n          paddingTop:\n            currentAccountType === UserAccountType.STUDENT_ADMIN && '50px',\n          paddingBottom:\n            currentAccountType === UserAccountType.STUDENT_ADMIN && '50px',\n        }}\n      >\n        <h1 className=\"sign-up-header\">Sign Up</h1>\n        <Form\n          ref={formRef}\n          className=\"form-wrapper\"\n          name=\"user\"\n          initialValues={{ accountType: currentAccountType }}\n          autoComplete=\"off\"\n          onFinish={onSignUp}\n        >\n          <Form.Item\n            className=\"input-item\"\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input placeholder=\"Email\" />\n          </Form.Item>\n\n          <Form.Item\n            className=\"input-item\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password placeholder=\"Password\" />\n          </Form.Item>\n          <Form.Item\n            className=\"input-item\"\n            name=\"passwordConfirmation\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(\n                      'The two passwords that you entered do not match!',\n                    ),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password placeholder=\"Confirm password\" />\n          </Form.Item>\n\n          {renderStudentItem()}\n\n          <Form.Item className=\"input-item\" name=\"accountType\">\n            <Select\n              className=\"selector\"\n              onSelect={(value) => {\n                setCurrentAccountType(value);\n              }}\n            >\n              {[\n                {\n                  value: UserAccountType.STUDENT_ADMIN,\n                  label: 'Student Admin',\n                },\n                {\n                  value: UserAccountType.COACH,\n                  label: 'Coach',\n                },\n              ].map((value, index) => (\n                <Option value={value.value} key={index.toString()}>\n                  {value.label}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          {currentAccountType === UserAccountType.COACH && (\n            <Form.Item className=\"input-item\" name=\"studentAdminId\">\n              <Select className=\"selector\" placeholder=\"Select Practice\">\n                {studentAdmins?.map((value, index) => (\n                  <Option value={value.id} key={value.id}>\n                    {value.attributes.fullname}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          )}\n          <Form.Item\n            label=\"Start Date:\"\n            name=\"startDate\"\n            className=\"input-item\"\n            rules={[\n              {\n                required: true,\n                message: 'Please pick a Month/Year!',\n              },\n            ]}\n          >\n            <DatePicker\n              className=\"input-item\"\n              size=\"middle\"\n              picker=\"day\"\n              format='YYYY-MM-DD'\n            />\n          </Form.Item>\n          <Form.Item className=\"submit-btn-wrapper\">\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Sign Up\n            </Button>\n          </Form.Item>\n        </Form>\n        <span>\n          Already have an account ? <Link to=\"/login\">Login</Link>\n        </span>\n      </div>\n    );\n  };\n  return render();\n};\n\nSignUp.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  loading: PropTypes.bool,\n  currentUser: PropTypes.object,\n  history: PropTypes.object,\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  errorMessage: auth.error,\n  loading: auth.loading,\n  currentUser: auth.currentUser,\n});\n\nexport default connect(mapStateToProps, {\n  signUp,\n})(SignUp);\n","import { Button, Form, Input, notification } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppConfig from '@/constants/AppConfig';\nimport { connect } from 'react-redux';\nimport { signUp } from '@/actions/authActions';\nimport './index.scss';\nimport { UserAccountType } from '@/constants';\n\nclass AdminSignUp extends Component {\n  componentDidMount() {\n    const { currentUser, history } = this.props;\n    if (currentUser) {\n      history.push({\n        pathname: AppConfig.ROUTES.MAIN,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const { errorMessage } = this.props;\n    if (errorMessage) {\n      notification.error({\n        message: errorMessage,\n      });\n    }\n  }\n\n  onSignUp = async (data) => {\n    const { signUp, history } = this.props;\n    const isSuccess = await signUp({\n      ...data,\n      accountType: UserAccountType.ADMIN,\n    });\n\n    if (isSuccess) {\n      notification.success({\n        message: 'Sign Up Successfully',\n      });\n      history.push({\n        pathname: AppConfig.ROUTES.LOGIN,\n      });\n    }\n  };\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"sign-up-header\">Sign Up</h1>\n        <Form\n          className=\"form-wrapper\"\n          name=\"user\"\n          initialValues={{ accountType: 'admin' }}\n          autoComplete=\"off\"\n          onFinish={this.onSignUp}\n        >\n          <Form.Item\n            className=\"input-item\"\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input placeholder=\"Email\" />\n          </Form.Item>\n\n          <Form.Item\n            className=\"input-item\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password placeholder=\"Password\" />\n          </Form.Item>\n          <Form.Item\n            className=\"input-item\"\n            name=\"passwordConfirmation\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(\n                      'The two passwords that you entered do not match!',\n                    ),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password placeholder=\"Confirm password\" />\n          </Form.Item>\n          <Form.Item className=\"submit-btn-wrapper\">\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Sign Up\n            </Button>\n          </Form.Item>\n        </Form>\n        <span>\n          Already have an account ? <Link to=\"/login\">Login</Link>\n        </span>\n      </div>\n    );\n  }\n}\n\nAdminSignUp.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  loading: PropTypes.bool,\n  currentUser: PropTypes.object,\n  history: PropTypes.object,\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  errorMessage: auth.error,\n  loading: auth.loading,\n  currentUser: auth.currentUser,\n});\n\nexport default connect(mapStateToProps, {\n  signUp,\n})(AdminSignUp);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n\nimport error from './error';\nimport auth from './auth';\nimport doctor from './doctor';\nimport product from './product';\nimport purchase from './purchase';\nimport classRoom from './classRoom';\nimport hygienist from './hygienist';\nimport flashMessage from './flashMessage';\nimport questionsSurvey from './questionsSurvey';\nimport classRoomScheduled from './classRoomScheduled';\nimport classRoomCompleted from './classRoomCompleted';\nimport student from './student';\nimport studentSurvey from './studentSurvey';\nimport profitPotential from './profitPotential';\n\nconst reducer = combineReducers({\n  error,\n  auth,\n  doctor,\n  product,\n  purchase,\n  classRoom,\n  hygienist,\n  flashMessage,\n  questionsSurvey,\n  classRoomScheduled,\n  classRoomCompleted,\n  student,\n  studentSurvey,\n  profitPotential,\n});\n\nconst store = configureStore({\n  reducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport AppContainer from '@/containers/AppContainer';\nimport LoginContainer from '@/containers/Login';\nimport SignUpContainer from '@/containers/SignUp';\nimport AdminSignUpContainer from '@/containers/Admin/SignUp';\nimport reportWebVitals from '@/reportWebVitals';\nimport store from '@/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={LoginContainer} />\n        <Route path=\"/sign-up\" component={SignUpContainer} />\n        <Route path=\"/admin/sign-up\" component={AdminSignUpContainer} />\n        <Route path=\"/\" component={AppContainer} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}